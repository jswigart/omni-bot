global Map =
{
	Navigation =
	{
		midladder =
		{
			navigate = function(_this)
			{
				_this.Bot.HoldButton(BTN.FORWARD, 1);
				sleep(1);
			},			
		},
	},
	
	Target =
	{
		Barricade1 =
		{
			Enabled = false,
			GrenadeTargetGoalName = "EXPLODE_obj_block01",
			LimitTeam = (1<<TEAM.AXIS),
			Offset = 
			{
				Vector3(300, -350, 0),
			}
		},
	},
	
	Switches =
	{
		Gate1 =
		{
			Enabled = false,
			Priority = 0.65,
			WaypointName = "gate1",
		},
		Gate2 =
		{
			Enabled = false,
			Priority = 0.65,
			WaypointName = "gate2",
		},
		HangarDoor1 =
		{
			Enabled = false,
			Priority = 0.65,
			WaypointName = "hangardoor1",
		},
	},

	MapName = "mp_assault",
	Quiet = true,
	Call_Artillery_bArty = "CALLARTILLERY_bArty",
	Call_Artillery_spot_allied_spawn_1 = "CALLARTILLERY_spot_allied_spawn_1",
	Call_Artillery_spot_allied_spawn_2 = "CALLARTILLERY_spot_allied_spawn_2",
	Call_Artillery_spot_allied_tower = "CALLARTILLERY_spot_allied_tower",
	Call_Artillery_spot_axis_gate = "CALLARTILLERY_spot_axis_gate",
	Call_Artillery_spot_ladder = "CALLARTILLERY_spot_ladder",
	Artillery_D_target_allied_tower_2 = "ARTILLERY_D_target_allied_tower_2",
	Artillery_D_target_warehouse_ladder = "ARTILLERY_D_target_warehouse_ladder",
	Artillery_S_aTower = "ARTILLERY_S_aTower",
	Artillery_S_bTruck = "ARTILLERY_S_bTruck",
	Artillery_S_target_allied_ladder = "ARTILLERY_S_target_allied_ladder",
	Artillery_S_target_allied_spawn = "ARTILLERY_S_target_allied_spawn",
	Artillery_S_target_allied_tower_1 = "ARTILLERY_S_target_allied_tower_1",
	Artillery_S_target_allied_tower_2 = "ARTILLERY_S_target_allied_tower_2",
	Artillery_S_target_gate_1 = "ARTILLERY_S_target_gate_1",
	Artillery_S_target_gate_2 = "ARTILLERY_S_target_gate_2",
	Artillery_S_tarmac = "ARTILLERY_S_tarmac",
	Checkpoint_flag_respawn_obj = "CHECKPOINT_flag_respawn_obj",
	Plant_Communications_Tower = "PLANT_Communications_Tower",
	Plant_Gate_Hatch = "PLANT_Gate_Hatch",
	Plant_Warehouse_Entrance = "PLANT_Warehouse_Entrance",
	Explode_obj_block01 = "EXPLODE_obj_block01",
	Mount_tarmac_nest_1 = "MOUNTMG42_tarmac_nest_1",
	Mount_tarmac_nest_2 = "MOUNTMG42_tarmac_nest_2",
	Mount_tarmac_truck = "MOUNTMG42_tarmac_truck",
	Mount_tower_mg = "MOUNTMG42_tower_mg",
	Repair_tarmac_nest_1 = "REPAIRMG42_tarmac_nest_1",
	Repair_tarmac_nest_2 = "REPAIRMG42_tarmac_nest_2",
	Repair_tarmac_truck = "REPAIRMG42_tarmac_truck",
	Repair_tower_mg = "REPAIRMG42_tower_mg",
	Snipe_above_allied_spawn_garageProtect = "SNIPE_above_allied_spawn_garageProtect",
	Snipe_allies_1 = "SNIPE_allies_1",
	Snipe_allies_2 = "SNIPE_allies_2",
	Snipe_allies_3 = "SNIPE_allies_3",
	Snipe_rDoor_s1 = "SNIPE_rDoor_s1",
	Snipe_rDoor_s2 = "SNIPE_rDoor_s2",
	Snipe_rDoor_s3 = "SNIPE_rDoor_s3",
	Snipe_rDoor_s4 = "SNIPE_rDoor_s4",
	Snipe_rGate_s1 = "SNIPE_rGate_s1",
	Snipe_rGate_s2 = "SNIPE_rGate_s2",

	Communications_Tower_Destroyed = function( trigger )
	{
		TestMap.Pass();

		print( "Communications_Tower_Destroyed" );
	},

	Gate_Hatch_Destroyed = function( trigger )
	{
		TestMap.Pass();

		print( "Gate_Hatch_Destroyed" );
	},

	Warehouse_Entrance_Destroyed = function( trigger )
	{
		TestMap.Pass();

		print( "Warehouse_Entrance_Destroyed" );
	},

	flag_respawn_obj_Axis_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "flag_respawn_obj_Axis_Captured" );
	},

	flag_respawn_obj_Allies_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "flag_respawn_obj_Allies_Captured" );
	},

	gate_lever = function( trigger )
	{
		TestMap.Pass();

		print( "gate_lever" );
	},
	
	hangardoor_lever = function( trigger )
	{
		TestMap.Pass();

		print( "hangardoor_lever" );
	},


	Tests = function()
	{
		OnTrigger( "Axis team destroyed the Communications Tower!", Map.Communications_Tower_Destroyed );
		OnTrigger( "Axis team breached the Warehouse Door!", Map.Warehouse_Entrance_Destroyed );
		OnTrigger( "Axis team breached the Gate Hatch!", Map.Gate_Hatch_Destroyed );
		OnTrigger( "Axis captures the Gate Area!", Map.flag_respawn_obj_Axis_Captured );
		OnTrigger( "Allies reclaim the Gate Area!", Map.flag_respawn_obj_Allies_Captured );
		OnTrigger( "big_lever1_goto", Map.gate_lever );
		OnTrigger( "hangar_lever1_goto", Map.hangardoor_lever );

		SetAvailableMapGoals( TEAM.AXIS, false, ".*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, ".*" );

		SetGoalPriority( ".*", 1.0 );

		Util.UpdateSwitchData();

		if ( TestMap.DoObj )
			 { Map.ObjectiveTests(); }

		if ( TestMap.DoSnipe )
			 { Map.SnipeTests(); }

		if ( TestMap.DoObj )
			 { Map.LastObjectiveTest(); }
	},

	ObjectiveTests = function()
	{
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Mount_tarmac_nest_1, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Mount_tarmac_nest_2, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Checkpoint_flag_respawn_obj, 120, false, 0 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Switches.Gate1, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Target.Barricade1, 120, false, 0 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Switches.Gate2, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Plant_Gate_Hatch, 120, false, 0 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Plant_Warehouse_Entrance, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Mount_tarmac_truck, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Switches.HangarDoor1, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Mount_tower_mg, 120 );
		
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Mount_tower_mg, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Switches.HangarDoor1, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Mount_tarmac_truck, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Switches.Gate2, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Checkpoint_flag_respawn_obj, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Mount_tarmac_nest_2, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Mount_tarmac_nest_1, 120 );
		Util.KillGoal( ".*" );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Repair_tarmac_nest_1, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Repair_tarmac_nest_2, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Repair_tarmac_truck, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Repair_tower_mg, 120 );
		
		Util.KillGoal( ".*" );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Repair_tarmac_nest_1, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Repair_tarmac_nest_2, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Repair_tarmac_truck, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Repair_tower_mg, 120 );

	},

	SnipeTests = function()
	{
		Map.OpenUpMap();
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_above_allied_spawn_garageProtect, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_allies_1, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_allies_2, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_allies_3, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_rDoor_s1, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_rDoor_s2, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_rDoor_s3, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_rDoor_s4, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_rGate_s1, 120 );
		TestMap.RunTest( TEAM.AXIS, CLASS.SOLDIER, Map.Snipe_rGate_s2, 120 );

		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_above_allied_spawn_garageProtect, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_allies_1, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_allies_2, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_allies_3, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_rDoor_s1, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_rDoor_s2, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_rDoor_s3, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_rDoor_s4, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_rGate_s1, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.SOLDIER, Map.Snipe_rGate_s2, 120 );

	},

	LastObjectiveTest = function()
	{
		TestMap.RunTest( TEAM.AXIS, CLASS.ENGINEER, Map.Plant_Communications_Tower, 120, true );
	},

	OpenUpMap = function()
	{
	},
};

global OnBotJoin = function( bot )
{
	//~ bot.TargetBreakableDist = 300.0;
	team = bot.GetTeam();
	class = bot.GetClass();
};
