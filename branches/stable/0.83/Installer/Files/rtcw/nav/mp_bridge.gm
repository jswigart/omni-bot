global Map =
{
	Debug = 0,
	ShowMovers = false,
	DispenseAmmoTime = 10,
	DontDispenseAmmo = true,
	
	Roles =
	{
		AXIS =
		{
			AllBots = true,
			DEFENDER =
			{
				spawnpt = 0,
				numbots = 4,
			},
		},

		ALLIES =
		{
			AllBots = true,
			DEFENDER =
			{
				spawnpt = 0,
				numbots = 4,
			},
		},
	},

	transmitter_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "transmitter_Destroyed" );
	},

	transmitter_1_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "transmitter_1_Destroyed" );
	},

	War_Documents_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "War_Documents_Taken" );
	},

	War_Documents_1_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "War_Documents_1_Taken" );
	},

	CAPPOINT_409_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "CAPPOINT_409_Captured" );
	},

	CAPPOINT_410_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "CAPPOINT_410_Captured" );
	},

};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	// Register callback functions
	OnTrigger( "MISSING_STRING", Map.transmitter_Destroyed );
	OnTrigger( "MISSING_STRING", Map.transmitter_1_Destroyed );
	OnTrigger( "MISSING_STRING", Map.War_Documents_Taken );
	OnTrigger( "MISSING_STRING", Map.War_Documents_1_Taken );
	OnTrigger( "MISSING_STRING", Map.CAPPOINT_409_Captured );
	OnTrigger( "MISSING_STRING", Map.CAPPOINT_410_Captured );

	SetMapGoalProperties( "SNIPE_.*", {mincamptime = 30, maxcamptime = 60} );
	SetMapGoalProperties( "ATTACK_.*", {mincamptime = 15, maxcamptime = 30} );
	SetMapGoalProperties( "DEFEND_.*", {mincamptime = 15, maxcamptime = 30} );
	SetMapGoalProperties( "PANZER_.*", {mincamptime = 45, maxcamptime = 60} );
	SetMapGoalProperties( "MOUNT.*", {mincamptime = 60, maxcamptime = 70} );
	RTCWUtil.SetPrimaryGoals( 1.0 );
	
	Util.DisableGoal( ".*", true ); // all but routes
	
	SetAvailableMapGoals( TEAM.AXIS, true, "ARTILLERY_S_rSpawnkill.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "FLAG_War_Documents_1" );
	SetAvailableMapGoals( TEAM.AXIS, true, "CAPPOINT_rtransmit" );
	SetAvailableMapGoals( TEAM.AXIS, true, "CAMP_rdocs.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "MOUNTMG42_rmg.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "CALLARTILLERY_rSpawnkill.*" );
	
	SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_bSpawnkill.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "FLAG_War_Documents" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "CAPPOINT_btransmit" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "MOUNTMG42_bmg.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "CALLARTILLERY_bSpawnkill.*" );
	
	RTCWUtil.LimitToClass( "MOUNTMG42.*", TEAM.AXIS, CLASS.SOLDIER, CLASS.LIEUTENANT, CLASS.ENGINEER );
	RTCWUtil.LimitToClass( "MOUNTMG42.*", TEAM.ALLIES, CLASS.SOLDIER, CLASS.LIEUTENANT, CLASS.ENGINEER );

	Util.SetMaxUsersInProgress( 1, "MOUNTMG42.*" );
	
	SetGoalPriority( "MOUNTMG42.*", 0.87 );
	SetGoalPriority( "CALLARTILLERY.*", 0.86 );
	SetGoalPriority( "CAMP_.*", 0.95 );
	
	RTCWUtil.KillEntities( {77,78,79,80,81,82,83,92,93,126,127,132,133,134,135,136,197,198,199,200} );

	MapRoutes =
	{
		// Allied obj
		FLAG_War_Documents =
		{
			ROUTE_bspawn =
			{
				ROUTE_bsteps =
				{
					ROUTE_bramp = 
					{
						ROUTE_bgate =
						{
							Weight = 3,
							ROUTE_rwater =
							{
								ROUTE_rsteps = {Weight=2,},
								ROUTE_rramp = 
								{
									ROUTE_rspiral={},
								},
							},
							ROUTE_rgate =
							{
								ROUTE_rtunnel =
								{
									ROUTE_rspiral={},
								},
							},
						},
						ROUTE_bbridge =
						{
							ROUTE_rbridge =
							{
								ROUTE_rsteps = {},
								ROUTE_rramp = 
								{
									ROUTE_rspiral={},
								},
								ROUTE_rtunnel =
								{
									ROUTE_rspiral={},
								},
							},
						},
					},
					ROUTE_bbridge =
					{
						ROUTE_rbridge =
						{
							ROUTE_rsteps = {},
							ROUTE_rramp = 
							{
								ROUTE_rspiral={},
							},
							ROUTE_rtunnel =
							{
								ROUTE_rspiral={},
							},
						},
					},
				},
				ROUTE_bupper =
				{
					ROUTE_bgate =
					{
						Weight = 3,
						ROUTE_rwater =
						{
							ROUTE_rsteps = {Weight=2,},
							ROUTE_rramp = 
							{
								ROUTE_rspiral={},
							},
						},
						ROUTE_rgate =
						{
							ROUTE_rtunnel =
							{
								ROUTE_rspiral={},
							},
						},
					},
					ROUTE_bbridge =
					{
						ROUTE_rbridge =
						{
							ROUTE_rsteps = {},
							ROUTE_rramp = 
							{
								ROUTE_rspiral={},
							},
							ROUTE_rtunnel =
							{
								ROUTE_rspiral={},
							},
						},
					},
				},
			},
		},
		// Axis obj
		FLAG_War_Documents_1 =
		{
			ROUTE_rspawn =
			{
				ROUTE_rsteps =
				{
					ROUTE_rramp = 
					{
						ROUTE_rgate =
						{
							Weight = 3,
							ROUTE_bwater =
							{
								ROUTE_bsteps = {Weight=2,},
								ROUTE_bramp = 
								{
									ROUTE_bspiral={},
								},
							},
							ROUTE_bgate =
							{
								ROUTE_btunnel =
								{
									ROUTE_bspiral={},
								},
							},
						},
						ROUTE_rbridge =
						{
							ROUTE_bbridge =
							{
								ROUTE_bsteps = {},
								ROUTE_bramp = 
								{
									ROUTE_bspiral={},
								},
								ROUTE_btunnel =
								{
									ROUTE_bspiral={},
								},
							},
						},
					},
					ROUTE_rbridge =
					{
						ROUTE_bbridge =
						{
							ROUTE_bsteps = {},
							ROUTE_bramp = 
							{
								ROUTE_bspiral={},
							},
							ROUTE_btunnel =
							{
								ROUTE_bspiral={},
							},
						},
					},
				},
				ROUTE_rupper =
				{
					ROUTE_rgate =
					{
						Weight = 3,
						ROUTE_bwater =
						{
							ROUTE_bsteps = {Weight=2,},
							ROUTE_bramp = 
							{
								ROUTE_bspiral={},
							},
						},
						ROUTE_bgate =
						{
							ROUTE_btunnel =
							{
								ROUTE_bspiral={},
							},
						},
					},
					ROUTE_rbridge =
					{
						ROUTE_bbridge =
						{
							ROUTE_bsteps = {},
							ROUTE_bramp = 
							{
								ROUTE_bspiral={},
							},
							ROUTE_btunnel =
							{
								ROUTE_bspiral={},
							},
						},
					},
				},
			},
		},
	};
	
	MapRoutes.FLAG_War_Documents_1.ROUTE_rspawn.ROUTE_rspiral = MapRoutes.FLAG_War_Documents_1.ROUTE_rspawn.ROUTE_rsteps;
	MapRoutes.FLAG_War_Documents_1.ROUTE_rspawn2 = MapRoutes.FLAG_War_Documents_1.ROUTE_rspawn.ROUTE_rupper.ROUTE_rgate;
	MapRoutes.CALLARTILLERY_rSpawnkill = MapRoutes.FLAG_War_Documents_1;
	MapRoutes.FLAG_War_Documents.ROUTE_bspawn.ROUTE_bspiral = MapRoutes.FLAG_War_Documents.ROUTE_bspawn.ROUTE_bsteps;
	MapRoutes.FLAG_War_Documents.ROUTE_bspawn2 = MapRoutes.FLAG_War_Documents.ROUTE_bspawn.ROUTE_bupper.ROUTE_bgate;
	MapRoutes.CALLARTILLERY_bSpawnkill = MapRoutes.FLAG_War_Documents;
	
	Util.Routes(MapRoutes);
	
	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
	//default spawn
	bot.ChangeSpawnPoint( 0 );
	RTCWUtil.NoSnipe( bot );
	
};