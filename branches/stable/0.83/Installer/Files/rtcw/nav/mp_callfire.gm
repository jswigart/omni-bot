global Map =
{
	Debug = 0,
	ShowMovers = false,
	DispenseAmmoTime = 5,
	DontDispenseAmmo = true,
	AntennaStatus = 0,
	RadioStatus = 0,
	FlagStatus = 0,
	Fallback = false,
	AntennaDyno = 0,
	
	Airstrike =
	{
		bantenna1 =
		{
			Enabled = true,
			Team = ( 1 << TEAM.ALLIES ),
			Facing = Vector3( -0.012, -0.466, 0.885 ),
			NoPause = true,
		},
		bantenna2 =
		{
			Enabled = true,
			Team = ( 1 << TEAM.ALLIES ),
			Facing = Vector3( -0.176, -0.533, 0.828 ),
			NoPause = true,
		},
		bantenna3 =
		{
			Enabled = true,
			Team = ( 1 << TEAM.ALLIES ),
			Waypoint = "asladdertop",
		},
	},

	// Radio Destroyed
	Communication_station_1_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.RadioStatus = 1;
		
		Util.MapDebugPrint( "Communication_station_1_Destroyed" );
	},

	Communication_station_2_Planted = function (trigger)
	{
		Map.EnableAxisAntennaAccess();
		Map.AntennaDyno += 1;
		Util.MapDebugPrint( "Communication_station_2_Planted" );
	},
	Communication_station_2_Defused = function (trigger)
	{
		Map.AntennaDyno -= 1;
		if (Map.AntennaDyno == 0)
		{
			Map.DisableAxisAntennaAccess();
		}
		Util.MapDebugPrint( "Communication_station_2_Defused" );
	},	
	// Antenna Destroyed
	Communication_station_2_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.AntennaStatus = 1;

		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "AIRSTRIKE.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "ARTILLERY_S.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "CALLARTILLERY.*" );
		
		Map.Airstrike.bantenna1.Enabled = false;
		Map.Airstrike.bantenna2.Enabled = false;
		Map.Airstrike.bantenna3.Enabled = false;
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "AIRSTRIKE.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ARTILLERY_S.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "CALLARTILLERY.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "MOUNTMG42_antennamg.*" );
		
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_rRadio.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "AIRSTRIKE_rRadio.*" );
		
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_bRadio.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_bRadio.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "AIRSTRIKE_bRadio.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Communication.*" );		

		Util.MapDebugPrint( "Communication_station_2_Destroyed" );
	},

	Lower_Tunnel_Gate_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.EvalFallback();
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFUSE_Lower.*" );

		Util.MapDebugPrint( "Lower_Tunnel_Gate_Planted" );
	},
	
	Lower_Tunnel_Gate_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Lower_Tunnel_Gate_Destroyed" );
	},
	sewer_grate_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.EvalFallback();
		
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFUSE_sewer.*" );

		Util.MapDebugPrint( "sewer_grate_Planted" );
	},
	sewer_grate_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "sewer_grate_Destroyed" );
	},

	rivr_flag_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.FlagStatus = 1;
		
		Util.MapDebugPrint( "rivr_flag_Axis_Captured" );
	},

	rivr_flag_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.FlagStatus = 2;
		Map.EvalFallback();

		Util.MapDebugPrint( "rivr_flag_Allies_Captured" );
	},
	
	EvalFallback = function ()
	{
		if (!Map.Fallback)
		{
			SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND.*" );
			SetAvailableMapGoals( TEAM.AXIS, false, "AIRSTRIKE.*" );
			SetAvailableMapGoals( TEAM.AXIS, false, "ARTILLERY_S.*" );
			SetAvailableMapGoals( TEAM.AXIS, false, "CALLARTILLERY.*" );
			
			SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK.*" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "AIRSTRIKE.*" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "ARTILLERY_S.*" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "CALLARTILLERY.*" );
		
			if (!Map.AntennaStatus)
			{
				if ( Map.FriendlyFire == 0 ) 
				{
					Map.Airstrike.bantenna1.Enabled = true;
					Map.Airstrike.bantenna2.Enabled = true;
					Map.Airstrike.bantenna3.Enabled = true;
				}
				Map.DisableAxisAntennaAccess();
				RTCWUtil.OneBotSayTeam( TEAM.AXIS, "Defend Communication Station 2!" );
				SetAvailableMapGoals( TEAM.AXIS, true, "ARTILLERY_S_rAntenna.*" );
				SetAvailableMapGoals( TEAM.AXIS, true, "CALLARTILLERY_rAntenna.*" );
				SetAvailableMapGoals( TEAM.AXIS, true, "AIRSTRIKE_rAntenna.*" );
				SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_rAntenna.*" );
				
				SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_bAntenna.*" );
				SetAvailableMapGoals( TEAM.ALLIES, true, "MOUNTMG42_antennamg.*" );
				SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Communication.*" );
			}
			else
			{
				RTCWUtil.OneBotSayTeam( TEAM.AXIS, "Defend Communication Station 1!" );
				SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_rRadio.*" );
				SetAvailableMapGoals( TEAM.AXIS, true, "AIRSTRIKE_rRadio.*" );
				
				SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_bRadio.*" );
				SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_bRadio.*" );
				SetAvailableMapGoals( TEAM.ALLIES, true, "AIRSTRIKE_bRadio.*" );
				SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Communication.*" );
			}
		}
		Map.Fallback = true;
		
		Util.MapDebugPrint( "EvalFallback" );
	},
	
	DisableCombatMove =
	{
		Name = "DisableCombatMove",
		TriggerOnClass = CLASS.ANYPLAYER,
		OnEnter = function( ent )
		{
			b = Util.GetBotByName( GetEntName( ent ) );
			if ( b ) {
				b.DisableCombatMovement = true;
				//b.DisableBotPush( true );
			}
		},
		OnExit = function( ent )
		{
			b = Util.GetBotByName( GetEntName( ent ) );
			if ( b ) {
				b.DisableCombatMovement = false;
				//b.DisableBotPush( false );
			}
		},
	},
	EnableAxisAntennaAccess = function()
	{
		Util.MapDebugPrint( "EnableAxisAntennaAccess" );
		Wp.SetWaypointFlag( "jump1", "allies", false );
		Wp.SetWaypointFlag( "jump2", "allies", false );
		Wp.SetWaypointFlag( "jump3", "allies", false );
		Wp.SetWaypointFlag( "jump4", "allies", false );
		Wp.SetWaypointFlag( "jump5", "allies", false );
		Wp.SetWaypointFlag( "antenna1", "allies", false );
		Wp.SetWaypointFlag( "antenna2", "allies", false );
		Wp.SetWaypointFlag( "antenna3", "allies", false );
		Wp.SetWaypointFlag( "antenna4", "allies", false );
	},
	DisableAxisAntennaAccess = function()
	{
		Util.MapDebugPrint( "DisableAxisAntennaAccess" );
		Wp.SetWaypointFlag( "jump1", "allies", true );
		Wp.SetWaypointFlag( "jump2", "allies", true );
		Wp.SetWaypointFlag( "jump3", "allies", true );
		Wp.SetWaypointFlag( "jump4", "allies", true );
		Wp.SetWaypointFlag( "jump5", "allies", true );
		Wp.SetWaypointFlag( "antenna1", "allies", true );
		Wp.SetWaypointFlag( "antenna2", "allies", true );
		Wp.SetWaypointFlag( "antenna3", "allies", true );
		Wp.SetWaypointFlag( "antenna4", "allies", true );
	},
};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }
	Bridge = OnTriggerRegion( AABB( -1981.000,-1840.000,465.000,-1359.000,-1162.000,547.000 ), Map.DisableCombatMove );
	Ladder = OnTriggerRegion( AABB( 499.000,-2660.000,-278.000,716.000,-2559.000,844.000 ), Map.DisableCombatMove );
	Ladder2 = OnTriggerRegion( AABB( -304.000,-2736.000,73.000,296.000,-2559.000,147.000 ), Map.DisableCombatMove );
	Antenna = OnTriggerRegion( AABB( -768.000,-4224.000,-62.000,576.000,-2959.000,12.000 ), Map.DisableCombatMove );
					
	Util.AddUseWp( "PLANT_Communication_station_1", "radio1" );
	Util.AddUseWp( "PLANT_Communication_station_2", "antennaplant1" );

	OnTrigger( "Communication station 1 Destroyed.", Map.Communication_station_1_Destroyed );
	OnTrigger( "Defused at Communication station 2.", Map.Communication_station_2_Defused );
	OnTrigger( "Planted at Communication station 2.", Map.Communication_station_2_Planted );
	OnTrigger( "Communication station 2 Destroyed.", Map.Communication_station_2_Destroyed );
	OnTrigger( "Planted at the Lower Tunnel Gate.", Map.Lower_Tunnel_Gate_Planted );
	OnTrigger( "the Lower Tunnel Gate Destroyed.", Map.Lower_Tunnel_Gate_Destroyed );
	OnTrigger( "Planted at the sewer grate.", Map.sewer_grate_Planted );
	OnTrigger( "the sewer grate Destroyed.", Map.sewer_grate_Destroyed );
	OnTrigger( "Axis reclaims the Building!", Map.rivr_flag_Axis_Captured );
	OnTrigger( "Allies captures the Building!", Map.rivr_flag_Allies_Captured );

	// Planted at Communications station 1.
	// Planted at Communications station 2.
	// DEFUSE_Communication_station_1.*
	// Defused at Communication station 1

	SetMapGoalProperties( "ATTACK_.*", {mincamptime = 10, maxcamptime = 15} );
	SetMapGoalProperties( "DEFEND_.*", {mincamptime = 15, maxcamptime = 30} );
	
	Util.DisableGoal( ".*", true );
	RTCWUtil.SetPrimaryGoals( 1.0 );
	
	Util.SetMaxUsersInProgress( 1, "MOUNT.*" );
	
	SetGoalPriority( "ARTILLERY_S.*", 1.0 );
	SetGoalPriority( "CALLARTILLERY.*", 1.0 );
	
	SetAvailableMapGoals( TEAM.AXIS, true, "ARTILLERY_S_rFlag.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_rFlag.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "CALLARTILLERY_rFlag.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "AIRSTRIKE_rFlag.*" );
	
	SetAvailableMapGoals( TEAM.ALLIES, true, "CHECKPOINT.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_bFlag.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Lower.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_sewer.*" );
	
	MapRoutes =
	{
		PLANT_sewer_grate =
		{
		},
		PLANT_Lower_Tunnel_Gate =
		{
		},
		PLANT_Communication_station_1 =
		{
		},
		PLANT_Communication_station_2 =
		{
			ROUTE_flagspawn = 
			{
				ROUTE_bigflagsteps =
				{
					ROUTE_eastladder = {},
					ROUTE_sewer = {},
				},
				ROUTE_brokenbuilding =
				{
					ROUTE_roof =
					{
						Weight = 3,
						ROUTE_sebuilding = {},
					},	
					ROUTE_elevatorbottom = 
					{
						Weight = 2,
						ROUTE_grenaderoom = {},
					},
					ROUTE_westladder = {},
					ROUTE_eastladder = {},
					ROUTE_sesteps = {},
				},
			},
		},
		CHECKPOINT_rivr_flag =
		{
			ROUTE_bspawn =
			{
				ROUTE_bspawn_n = {},
				ROUTE_bspawn_s = {},
			},
		},
		DEFEND_rAntenna1 = 
		{
			ROUTE_rspawn =
			{
				ROUTE_rantennan = {},
				ROUTE_rantennas = {},
			},
		},
	};
	
	MapRoutes.PLANT_Communication_station_2.ROUTE_bspawn = MapRoutes.PLANT_Communication_station_2.ROUTE_flagspawn;
	MapRoutes.ATTACK_bAntenna1 = MapRoutes.PLANT_Communication_station_2;
	MapRoutes.ATTACK_bAntenna2 = MapRoutes.PLANT_Communication_station_2;
	MapRoutes.ATTACK_bAntenna3 = MapRoutes.PLANT_Communication_station_2;
	MapRoutes.ATTACK_bAntenna4 = MapRoutes.PLANT_Communication_station_2;
	MapRoutes.ATTACK_bAntenna5 = MapRoutes.PLANT_Communication_station_2;
	MapRoutes.ATTACK_bAntenna6 = MapRoutes.PLANT_Communication_station_2;
	MapRoutes.ATTACK_bAntenna7 = MapRoutes.PLANT_Communication_station_2;
	//MapRoutes.MOUNTMG42_antennamg = MapRoutes.PLANT_Communication_station_2;
	MapRoutes.DEFEND_rAntenna2 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.DEFEND_rAntenna3 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.DEFEND_rAntenna4 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.DEFEND_rAntenna5 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.DEFEND_rAntenna6 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.DEFEND_rAntenna7 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.DEFEND_rAntenna8 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.CALLARTILLERY_rAntenna1 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.CALLARTILLERY_rAntenna2 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.AIRSTRIKE_rAntenna1 = MapRoutes.DEFEND_rAntenna1;
	MapRoutes.AIRSTRIKE_rAntenna2 = MapRoutes.DEFEND_rAntenna1;
	
	Util.Routes(MapRoutes);
	
	RTCWUtil.KillEntities({97,98,99,100,101,102,103,104,258,259,260,261,262,263,264,280,281,375,376,395,492,289,373,374,238,107,239,106,240,241,242,252,234,108,235,109,236,250,237,251,233,105,232,249,247,230,248,231,254,253,255,256,228,229,257,352,353,292,357});
	Map.EnableAxisAntennaAccess();

	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
	bot.TargetBreakableDist = 80.0;
	RTCWUtil.SelectSoldierWeapons( TEAM.AXIS, bot, WEAPON.PANZERFAUST, WEAPON.VENOM );
	RTCWUtil.SelectSoldierWeapons( TEAM.ALLIES, bot, WEAPON.PANZERFAUST, WEAPON.VENOM );
	RTCWUtil.NoSnipe( bot );

	//default spawn
	bot.ChangeSpawnPoint( 0 );
};