global Map =
{
	Debug = 0,
	ShowMovers = false,
	DispenseAmmoTime = 1,
	DontDispenseAmmo = false,
	FlagStatus = -1,
	FriendlyFire,
	AxisInRuins = false,
	LowerRuinsPlayers = 0,
	DuctsPlayers = 0,
	ClubPlayers = 0,
	WarehousePlayers = 0,
	
	Airstrike =
	{
		rcoal1 =
		{
			Enabled = false,
			Team = ( 1 << TEAM.AXIS ),
			Waypoint = "rcoalas1",
		},
	},
	Roles =
	{
		AXIS =
		{
			AllBots = true,
			DEFENDER =
			{
				spawnpt = 2,
				numbots = 6,
				crucialClass = CLASS.ENGINEER,
			},
			DEFENDER1 = // flex spots
			{
				spawnpt = 2,
				numbots = 3,
				crucialClass = CLASS.ENGINEER,
			},
			/*ATTACKER =
			{
				numbots = 4,
				crucialClass = CLASS.ENGINEER,
			},
			ATTACKER1 = // ruins airstrikes
			{
				numbots = 1,
				crucialClass = CLASS.LIEUTENANT,
			},*/
		},
		ALLIES =
		{
			AllBots = true,
			DEFENDER =
			{
				spawnpt = 1,
				numbots = 6,
				crucialClass = CLASS.ENGINEER,
			},
			DEFENDER1 = // flex spots
			{
				spawnpt = 1,
				numbots = 3,
				crucialClass = CLASS.ENGINEER,
			},/*
			ATTACKER =
			{
				numbots = 4,
				crucialClass = CLASS.ENGINEER,
			},*/
		},
	},
	
	Allied_Field_Ops_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Allied_Field_Ops_Planted" );
	},
	
	Allied_Field_Ops_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Allied_Field_Ops_Defused" );
	},
	
	Allied_Field_Ops_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Allied_Field_Ops_Destroyed" );
	},
	
	Anti_Aircraft_Gun_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Anti_Aircraft_Gun_Planted" );
	},
	
	Anti_Aircraft_Gun_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Anti_Aircraft_Gun_Defused" );
	},
	
	Anti_Aircraft_Gun_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Anti_Aircraft_Gun_Destroyed" );
	},

	North_Gate_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		SetAvailableMapGoals( TEAM.AXIS, true, "PLANT_Allied_Field_Ops" );
		SetAvailableMapGoals( TEAM.AXIS, true, "CHECKPOINT.*" );

		Util.MapDebugPrint( "North_Gate_Destroyed" );
	},

	South_Gate_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Anti_Aircraft_Gun" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "CHECKPOINT.*" );

		Util.MapDebugPrint( "South_Gate_Destroyed" );
	},

	flag_respawn_obj_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.FlagStatus = TEAM.AXIS;
		Map.DontDispenseAmmo = true;
		
		Map.Airstrike.rcoal1.Enabled = false;
		SetAvailableMapGoals( TEAM.AXIS, false, "MOUNTMG42.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "AIRSTRIKE_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "AIRSTRIKE_ruinsas.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_lt_ruins.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "SNIPE_rcysnipe.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "SNIPE_rTrain.*" );
		
		SetAvailableMapGoals( TEAM.ALLIES, true, "MOUNTMG42_mg1" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "MOUNTMG42_mg2" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "CHECKPOINT.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "SNIPE_bTrain.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "SNIPE_bruinsnipe.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "PANZER_opscamper.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "PANZER_btrainpanz.*" );
		if ( Map.FriendlyFire < 1 ) {
			//SetAvailableMapGoals( TEAM.ALLIES, true, "AIRSTRIKE_bTrainyard.*" );
		}

		Util.MapDebugPrint( "flag_respawn_obj_Axis_Captured" );
	},

	flag_respawn_obj_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.FlagStatus = TEAM.ALLIES;
		Map.DontDispenseAmmo = true;
		
		Map.Airstrike.rcoal1.Enabled = true;
		SetAvailableMapGoals( TEAM.AXIS, true, "MOUNTMG42_coalyardmg" );
		SetAvailableMapGoals( TEAM.AXIS, true, "MOUNTMG42_rspawn1" );
		SetAvailableMapGoals( TEAM.AXIS, true, "MOUNTMG42_rspawn2" );
		SetAvailableMapGoals( TEAM.AXIS, false, "AIRSTRIKE_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "AIRSTRIKE_rFlag.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_lt_ruins.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "CHECKPOINT.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "SNIPE_rcysnipe.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "SNIPE_rTrain.*" );
		if ( Map.FriendlyFire < 1 ) {
			SetAvailableMapGoals( TEAM.AXIS, true, "ARTILLERY_S_rAA.*" );
			SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_bSpawnkillDepot.*" );
		}
		
		SetAvailableMapGoals( TEAM.ALLIES, false, "MOUNTMG42.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "AIRSTRIKE.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "SNIPE_bTrain.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "SNIPE_bruinsnipe.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "PANZER_opscamper.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "PANZER_btrainpanz.*" );

		Util.MapDebugPrint( "flag_respawn_obj_Allies_Captured" );
	},
	
	LowerRuinsTrigger =
	{
		Name = "LowerRuinsTrigger",
		TriggerOnClass = CLASS.ANYPLAYER,
		OnEnter = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.AXIS ) {
				Map.LowerRuinsPlayers += 1;

				if ( Map.FlagStatus == 1 ) {
					SetAvailableMapGoals( TEAM.ALLIES, true, "AIRSTRIKE_bloweras.*" );
				}
			}
		},
		OnExit = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.AXIS ) {
				Map.LowerRuinsPlayers -= 1;

				if ( Map.LowerRuinsPlayers < 1 ) {
					SetAvailableMapGoals( TEAM.ALLIES, false, "AIRSTRIKE_bloweras.*" );
				}
			}

		},
	},
	
	ClubTrigger =
	{
		Name = "ClubTrigger",
		TriggerOnClass = CLASS.ANYPLAYER,
		OnEnter = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.AXIS ) {
				Map.ClubPlayers += 1;

				if ( Map.FlagStatus == 1 ) {
					SetAvailableMapGoals( TEAM.ALLIES, true, "GRENADE_bclub" );
				}
			}
		},
		OnExit = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.AXIS ) {
				Map.ClubPlayers -= 1;

				if ( Map.ClubPlayers < 1 ) {
					SetAvailableMapGoals( TEAM.ALLIES, false, "GRENADE_bclub" );
				}
			}

		},
	},
	
	DuctsTrigger =
	{
		Name = "DuctsTrigger",
		TriggerOnClass = CLASS.ANYPLAYER,
		OnEnter = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.ALLIES ) {
				Map.DuctsPlayers += 1;

				if ( Map.FlagStatus == 2 ) {
					SetAvailableMapGoals( TEAM.AXIS, true, "GRENADE_rducts.*" );
				}
			}
		},
		OnExit = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.ALLIES ) {
				Map.DuctsPlayers -= 1;

				if ( Map.DuctsPlayers < 1 ) {
					SetAvailableMapGoals( TEAM.AXIS, false, "GRENADE_rducts.*" );
				}
			}

		},
	},
	
	WarehouseTrigger =
	{
		Name = "WarehouseTrigger",
		TriggerOnClass = CLASS.ANYPLAYER,
		OnEnter = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.AXIS ) {
				Map.WarehousePlayers += 1;

				if ( Map.FlagStatus == 1 ) {
					SetAvailableMapGoals( TEAM.ALLIES, true, "AIRSTRIKE_bwhas.*" );
				}
			}
		},
		OnExit = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.AXIS ) {
				Map.WarehousePlayers -= 1;

				if ( Map.WarehousePlayers < 1 ) {
					SetAvailableMapGoals( TEAM.ALLIES, false, "AIRSTRIKE_bwhas.*" );
				}
			}

		},
	},
	RuinsTrigger =
	{
		Name = "RuinsTrigger",
		TriggerOnClass = CLASS.ANYPLAYER,
		OnEnter = function( ent )
		{
			if ( TestMap ) {
				return;
			}

			if ( GetEntTeam( ent ) == TEAM.AXIS ) {
				if ( Map.FlagStatus == 2 ) {
					return;
				}
				Map.AxisInRuins = true;

				SetAvailableMapGoals( TEAM.ALLIES, true, "AIRSTRIKE_bRuins.*" );

				Map.RuinsASTimer = GetTime() + 30;  //Martin - GetTime is in SECONDS.
				while ( ( GetTime() < Map.RuinsASTimer ) && ( Map.FlagStatus != 2 ) )
				{
					sleep( 1 );
				}
				Map.AxisInRuins = false;
				SetAvailableMapGoals( TEAM.ALLIES, false, "AIRSTRIKE_bRuins.*" );
			}
		},
		OnExit = function( ent )
		{
			if ( TestMap ) {
				return;
			}
		},
	},

};

global OnMapLoad = function()
{
	ruinstrigger = OnTriggerRegion( AABB( -816.000,-4736.000,337.000,-207.000,-3159.000,427.000 ), Map.RuinsTrigger );
	lowerruins = OnTriggerRegion( AABB( -1984.000,-4448.000,49.000,-1543.000,-3359.000,159.000 ), Map.LowerRuinsTrigger );
	bclubnade = OnTriggerRegion( AABB( -2336.000,-4494.000,137.000,-2063.000,-4351.000,354.000 ), Map.ClubTrigger );
	rductnade = OnTriggerRegion( AABB( 1039.000,1487.000,449.000,1440.000,1904.000,523.000 ), Map.DuctsTrigger );
	//opsplant = OnTriggerRegion( AABB( -2560.000,-5437.000,-294.000,-2087.000,-5017.000,-44.000 ), Map.OpsTrigger );
	opsplant = OnTriggerRegion( AABB( -3072.000,-4448.000,-343.000,-2047.000,-3997.000,-121.000 ), Map.WarehouseTrigger );
	Util.AddUseWp( "PLANT_Anti_Aircraft_Gun", "aaplant1" );
	Util.AddUseWp( "PLANT_Anti_Aircraft_Gun", "aaplant2" );
	Util.AddUseWp( "PLANT_Allied_Field_Ops", "opsplant1" );
	Util.AddUseWp( "PLANT_Allied_Field_Ops", "opsplant2" );
	
	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	// Register callback functions
	OnTrigger( "MISSING_STRING", Map.Allied_Field_Ops_Planted );
	OnTrigger( "MISSING_STRING", Map.Allied_Field_Ops_Defused );
	OnTrigger( "MISSING_STRING", Map.Allied_Field_Ops_Destroyed );
	OnTrigger( "MISSING_STRING", Map.Anti_Aircraft_Gun_Planted );
	OnTrigger( "MISSING_STRING", Map.Anti_Aircraft_Gun_Defused );
	OnTrigger( "MISSING_STRING", Map.Anti_Aircraft_Gun_Destroyed );
	// Planted at the South Gate.
	// Planted at the North Gate.
	OnTrigger( "the North Gate Destroyed.", Map.North_Gate_Destroyed );
	OnTrigger( "the South Gate Destroyed.", Map.South_Gate_Destroyed );
	OnTrigger( "Axis captures the Forward Deployment Area!", Map.flag_respawn_obj_Axis_Captured );
	OnTrigger( "Allies capture the Forward Deployment Area!", Map.flag_respawn_obj_Allies_Captured );

	Util.DisableGoal( ".*", true ); //all but the routes
	RTCWUtil.SetPrimaryGoals( 1.0 );
	Map.FriendlyFire = GetCvar( "g_friendlyfire" );
	
	SetMapGoalProperties( "SNIPE_.*", {mincamptime = 60, maxcamptime = 90} );
	SetMapGoalProperties( "ATTACK_.*", {mincamptime = 1, maxcamptime = 1} ); //used as 'roams'
	SetMapGoalProperties( "DEFEND_.*", {mincamptime = 15, maxcamptime = 30} );
	SetMapGoalProperties( "MOUNTMG42_.*", {mincamptime = 60, maxcamptime = 90} );
	SetMapGoalProperties( "PANZER_opscamper.*", {mincamptime = 60, maxcamptime = 90} );
	SetMapGoalProperties( "PANZER_btrainpanz.*", {mincamptime = 60, maxcamptime = 90} );
	
	//run a thread to toggle flag availability every 5 minutes
	thread(RTCWUtil.ToggleFlag, "CHECKPOINT.*", 300);
	
	SetGoalPriority( "AIRSTRIKE_.*", 0.93 );
	SetGoalPriority( "ARTILLERY.*", 1.0 );
	SetGoalPriority( "CALLARTILLERY.*", 1.0 );
	SetGoalPriority( "CAMP_.*", 0.95 );
	SetGoalPriority( "DEFEND_lt_ruins.*", 0.7, TEAM.AXIS, CLASS.LIEUTENANT );
	
	RTCWUtil.LimitToClass( "DEFEND_lt_ruins.*", TEAM.AXIS, CLASS.LIEUTENANT );
	RTCWUtil.LimitToClass( "GRENADE.*", TEAM.AXIS, CLASS.LIEUTENANT, CLASS.SOLDIER );
	RTCWUtil.LimitToClass( "GRENADE.*", TEAM.ALLIES, CLASS.LIEUTENANT, CLASS.SOLDIER );

	SetAvailableMapGoals( TEAM.AXIS, true, "PLANT_North_Gate" );
	SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_rOps.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "CAMP_aad.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "CAMP_aaflex.*" );
	if ( Map.FriendlyFire < 1 ) {
		SetAvailableMapGoals( TEAM.AXIS, true, "ARTILLERY_S_rOps.*" );
	}
	//SetAvailableMapGoals( TEAM.AXIS, true, "ARTILLERY_S_rSpawnkillrear.*" ); // martin - this does not really every kill anyone like an a/s would
	SetAvailableMapGoals( TEAM.AXIS, true, "CALLARTILLERY_rAA.*" );
	
	SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_South_Gate" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_bSpawnkillrear.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_bAA.*" );	
	SetAvailableMapGoals( TEAM.ALLIES, true, "CAMP_opsd.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "CAMP_opsflex.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_bWarehouse.*" );	// This can also kill people in the club
	
	Util.SetMaxUsersInProgress( 1, "CAMP.*" );
	Util.SetMaxUsersInProgress( 2, "CHECKPOINT.*" );
	Util.SetMaxUsersInProgress( 1, "MOUNTMG42.*" );
	Util.SetMaxUsersInProgress( 1, "SNIPE.*" );
	Util.SetMaxUsersInProgress( 1, "DEFEND.*" );
	
	MapRoutes =
	{
		PLANT_Anti_Aircraft_Gun =
		{
			ROUTE_flagspawn =
			{
				ROUTE_cargobay =
				{
					Weight = 2,
					ROUTE_elevator = {},
					ROUTE_ducts = {},
					ROUTE_oldaa = {},
				},
				ROUTE_eastramp = {},
				ROUTE_axisgarageeast =
				{
					Weight = 2,
					ROUTE_coalcart =
					{
						ROUTE_weaponfactory = 
						{
							ROUTE_spawnroof = {},
							ROUTE_axiscc = {},
						},
					},
					ROUTE_cyd2 =
					{
						ROUTE_westramp = {Weight = 2,},
						ROUTE_cargomid = {},
					},
					ROUTE_westramp = {},
				},
				ROUTE_cyd1 =
				{
					Weight = 2,
					ROUTE_cyd2 =
					{
						ROUTE_westramp = {Weight = 2,},
						ROUTE_cargomid = {},
					},
				},
				ROUTE_axistunnel =
				{
					ROUTE_elevator ={},
					ROUTE_oldaa = {},
				},
				ROUTE_axisgaragewest =
				{
					ROUTE_coalcart =
					{
						ROUTE_weaponfactory = 
						{
							ROUTE_spawnroof = {},
							ROUTE_axiscc = {},
						},
					},
					ROUTE_cyd2 =
					{
						ROUTE_westramp = {Weight = 2,},
						ROUTE_cargomid = {},
					},
					ROUTE_westramp = {},
				},
				ROUTE_trainmid =
				{
					ROUTE_coalcart =
					{
						ROUTE_weaponfactory = 
						{
							ROUTE_spawnroof = {},
							ROUTE_axiscc = {},
						},
					},
					ROUTE_cyd2 =
					{
						ROUTE_westramp = {Weight = 2,},
						ROUTE_cargomid = {},
					},
					ROUTE_westramp = {},
				},
			},
			ROUTE_bspawn =
			{
				ROUTE_westalliedtrain =
				{
					ROUTE_axisgaragewest =
					{
						ROUTE_coalcart =
						{
							ROUTE_weaponfactory = 
							{
								ROUTE_spawnroof = {Weight=2,},
								ROUTE_axiscc = {},
							},
						},
					},
				},
				ROUTE_eastalliedtrain =
				{
					ROUTE_axisgarageeast =
					{
						ROUTE_cyd2 =
						{
							ROUTE_westramp = {Weight = 2,},
							ROUTE_cargomid = {},
						},
						ROUTE_westramp = {},	
					},
				},
				ROUTE_warehousenorth =
				{
					ROUTE_alliedtunnel =
					{
						ROUTE_axistunnel = 
						{
							ROUTE_westramp = {},
							ROUTE_elevator = {Weight = 3},
							ROUTE_oldaa = {Weight = 3},
						},
					},
				},
			},
		},
		PLANT_Allied_Field_Ops =
		{
			ROUTE_axisrearspawn = 
			{
				ROUTE_axistunnel =
				{
					ROUTE_alliedtunnel =
					{
						ROUTE_ruins = {}, // martin - Axis can't get to the WH from the tunnel unless they jump from catwalk and then its -15 hp
					},
				},
				ROUTE_axisgarageeast =
				{
					ROUTE_eastalliedtrain = {},
				},
				ROUTE_weaponfactory =
				{
					ROUTE_axisgaragewest =
					{
						Weight = 2,
						ROUTE_warehousenorth =
						{
							ROUTE_warehousesouth = {},
						},
						ROUTE_westalliedtrain =
						{
							ROUTE_office = 
							{
								ROUTE_warehousesouth = {},
							},
						},
						ROUTE_ruins = 
						{
							ROUTE_trainyardmg = {},
						},
					},
					ROUTE_axisgarageeast =
					{
						ROUTE_eastalliedtrain = {},
					},
				},
			},
			ROUTE_depotspawn =
			{
				ROUTE_axistunnel =
				{
					ROUTE_alliedtunnel =
					{
						ROUTE_warehousenorth =
						{
							Weight = 2,
							ROUTE_warehousesouth = {},
						},
						ROUTE_ruins = {},
					},
				},
				ROUTE_axisgaragewest =
				{
					ROUTE_warehousenorth =
					{
						ROUTE_warehousesouth = {},
					},
					ROUTE_westalliedtrain =
					{
						ROUTE_office = 
						{
							ROUTE_warehousesouth = {},
						},
					},
					ROUTE_ruins = 
					{
						ROUTE_trainyardmg = {},
					},
				},
				ROUTE_axisgarageeast =
				{
					ROUTE_eastalliedtrain = {},
				},
			},
			ROUTE_flagspawn =
			{
				ROUTE_westalliedtrain =
				{
					ROUTE_office = 
					{
						ROUTE_warehousesouth = {},
					},
				},
				ROUTE_eastalliedtrain = {},
				ROUTE_warehousenorth =
				{
					ROUTE_warehousesouth = {},
				},
				ROUTE_ruins = {},
			},
		},
		CHECKPOINT_flag_respawn_obj =
		{
		},
	};
	MapRoutes.PLANT_Anti_Aircraft_Gun.ROUTE_bspawnrear = MapRoutes.PLANT_Anti_Aircraft_Gun.ROUTE_bspawn;
	
	/*MapRoutes.DEFEND_rOps2 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.DEFEND_rOps3 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.DEFEND_rOps4 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.DEFEND_rOps5 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.DEFEND_rOps6 = MapRoutes.PLANT_Allied_Field_Ops;*/
	MapRoutes.ATTACK_rOps1 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.ATTACK_rOps2 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.ATTACK_rOps3 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.ATTACK_rOps4 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.ATTACK_rOps5 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.ATTACK_rOps6 = MapRoutes.PLANT_Allied_Field_Ops;
	MapRoutes.ATTACK_bAA1 = MapRoutes.PLANT_Anti_Aircraft_Gun;
	MapRoutes.ATTACK_bAA2 = MapRoutes.PLANT_Anti_Aircraft_Gun;
	MapRoutes.ATTACK_bAA3 = MapRoutes.PLANT_Anti_Aircraft_Gun;
	MapRoutes.ATTACK_bAA4 = MapRoutes.PLANT_Anti_Aircraft_Gun;
	MapRoutes.ATTACK_bAA5 = MapRoutes.PLANT_Anti_Aircraft_Gun;
	MapRoutes.ATTACK_bAA6 = MapRoutes.PLANT_Anti_Aircraft_Gun;
	
	Util.Routes(MapRoutes);

	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
	// Uncomment for shootable breakables
	//~bot.TargetBreakableDist = 90.0;
	// Only set MaxViewDistance on maps with limited sight (e.g. fog)
	//~bot.MaxViewDistance = 2400;
	
	//default spawn
	bot.ChangeSpawnPoint( 0 );
	RTCWUtil.ChangeSpawnNoDefenders( TEAM.AXIS, 1 );
};