global Map =
{
	MapName = "mp_ice_cp",
	Quiet = true,
	Call_Artillery_spot_allied_nearspawn = "CALLARTILLERY_spot_allied_nearspawn",
	Call_Artillery_spot_allied_stronghold = "CALLARTILLERY_spot_allied_stronghold",
	Call_Artillery_spot_axis_nearspawn = "CALLARTILLERY_spot_axis_nearspawn",
	Artillery_S_target_allied_farspawn = "ARTILLERY_S_target_allied_farspawn",
	Artillery_S_target_allied_nearspawn_1 = "ARTILLERY_S_target_allied_nearspawn_1",
	Artillery_S_target_allied_nearspawn_2 = "ARTILLERY_S_target_allied_nearspawn_2",
	Artillery_S_target_allied_sidewall = "ARTILLERY_S_target_allied_sidewall",
	Artillery_S_target_axis_nearspawn_1 = "ARTILLERY_S_target_axis_nearspawn_1",
	Artillery_S_target_axis_nearspawn_2 = "ARTILLERY_S_target_axis_nearspawn_2",
	Artillery_S_target_south_service = "ARTILLERY_S_target_south_service",
	Checkpoint_checkpoint01 = "CHECKPOINT_checkpoint01",
	Checkpoint_checkpoint02 = "CHECKPOINT_checkpoint02",
	Checkpoint_checkpoint03 = "CHECKPOINT_checkpoint03",
	Checkpoint_checkpoint04 = "CHECKPOINT_checkpoint04",
	Checkpoint_checkpoint05 = "CHECKPOINT_checkpoint05",
	Flag_axis_obj01 = "FLAG_axis_obj01",
	Cappoint_130 = "CAPPOINT_130",
	Plant_wall_obj01 = "PLANT_wall_obj01",
	Mount_tower_mg = "MOUNTMG42_tower_mg",
	Mount_truck_mg = "MOUNTMG42_truck_mg",
	Repair_tower_mg = "REPAIRMG42_tower_mg",
	Repair_truck_mg = "REPAIRMG42_truck_mg",
	Snipe_allied_nearspawn = "SNIPE_allied_nearspawn",

	wall_obj01_Destroyed = function( trigger )
	{
		TestMap.Pass();

		print( "wall_obj01_Destroyed" );
	},

	axis_obj01_Taken = function( trigger )
	{
		TestMap.Pass();

		print( "axis_obj01_Taken" );
	},

	CAPPOINT_130_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "CAPPOINT_130_Captured" );
	},

	checkpoint01_Axis_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint01_Axis_Captured" );
	},

	checkpoint01_Allies_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint01_Allies_Captured" );
	},

	checkpoint02_Axis_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint02_Axis_Captured" );
	},

	checkpoint02_Allies_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint02_Allies_Captured" );
	},

	checkpoint03_Axis_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint03_Axis_Captured" );
	},

	checkpoint03_Allies_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint03_Allies_Captured" );
	},

	checkpoint04_Axis_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint04_Axis_Captured" );
	},

	checkpoint04_Allies_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint04_Allies_Captured" );
	},

	checkpoint05_Axis_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint05_Axis_Captured" );
	},

	checkpoint05_Allies_Captured = function( trigger )
	{
		TestMap.Pass();

		print( "checkpoint05_Allies_Captured" );
	},


	Tests = function()
	{
		OnTrigger( "Axis captures the Allied Stronghold!", Map.checkpoint01_Axis_Captured );
		OnTrigger( "Allies capture the Allied Stronghold!", Map.checkpoint01_Allies_Captured );
		OnTrigger( "Axis captures the Old Allied Storage!", Map.checkpoint02_Axis_Captured );
		OnTrigger( "Allies capture the Old Allied Storage!", Map.checkpoint02_Allies_Captured );
		OnTrigger( "Axis captures the Service Halls!", Map.checkpoint03_Axis_Captured );
		OnTrigger( "Allies capture the Service Halls!", Map.checkpoint03_Allies_Captured );
		OnTrigger( "Axis captures the Axis Lookout Post!", Map.checkpoint04_Axis_Captured );
		OnTrigger( "Allies capture the Axis Lookout Post!", Map.checkpoint04_Allies_Captured );
		OnTrigger( "Axis captures the Axis Transmitter!", Map.checkpoint05_Axis_Captured );
		OnTrigger( "Allies capture the Axis Transmitter!", Map.checkpoint05_Allies_Captured );

		SetAvailableMapGoals( TEAM.AXIS, false, ".*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, ".*" );

		SetGoalPriority( ".*", 1.0 );

		if ( TestMap.DoObj )
			 { Map.ObjectiveTests(); }

		if ( TestMap.DoSnipe )
			 { Map.SnipeTests(); }

		if ( TestMap.DoObj )
			 { Map.LastObjectiveTest(); }
	},

	ObjectiveTests = function()
	{
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Checkpoint_checkpoint01, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Checkpoint_checkpoint02, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Checkpoint_checkpoint03, 120 );
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Checkpoint_checkpoint04, 120 );
	},

	SnipeTests = function()
	{
		Map.OpenUpMap();
	},

	LastObjectiveTest = function()
	{
		TestMap.RunTest( TEAM.ALLIES, CLASS.ENGINEER, Map.Checkpoint_checkpoint05, 120, true );
	},

	OpenUpMap = function()
	{
	},
};

global OnBotJoin = function( bot )
{
	//~ bot.TargetBreakableDist = 300.0;
	team = bot.GetTeam();
	class = bot.GetClass();
};
