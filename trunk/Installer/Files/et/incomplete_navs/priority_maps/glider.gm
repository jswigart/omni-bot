/****************************************************
Pathing updated and script by **PC** Mateos
Correspondant WAY file size : -
Last Update : 24 November 2010
****************************************************/

global Map =
{
	Debug = 1,
	ShowMovers = false,

	Ammo_Cabinet_north_ammocabinet = "AMMOCAB_north_ammocabinet",
	Ammo_Cabinet_second_ammocabinet = "AMMOCAB_second_ammocabinet",
	Health_Cabinet_north_healthcabinet = "HEALTHCAB_north_healthcabinet",
	Health_Cabinet_second_healthcabinet = "HEALTHCAB_second_healthcabinet",

	Checkpoint_garage_flag = "CHECKPOINT_garage_flag",
	Checkpoint_guardpost_flag = "CHECKPOINT_guardpost_flag",
	Checkpoint_island_flag = "CHECKPOINT_island_flag",
	Checkpoint_outpost_flag = "CHECKPOINT_outpost_flag",

	Build_Allied_Command_Post = "BUILD_Allied_Command_Post",
	Build_Axis_Command_Post = "BUILD_Axis_Command_Post",
	Build_Generator = "BUILD_Generator",
	Build_Glider_crates = "BUILD_Glider_crates",
	Build_Guardpost_MG42 = "BUILD_Guardpost_MG42",
	Build_Hopper_Pump = "BUILD_Hopper_Pump",
	Build_Outpost_MG42 = "BUILD_Outpost_MG42",
	Build_Tank = "BUILD_Tank",
	Build_Tank_Barrier_1 = "BUILD_Tank_Barrier_1",
	Build_Tank_Barrier_2 = "BUILD_Tank_Barrier_2",

	Plant_Allied_Command_Post = "PLANT_Allied_Command_Post",
	Plant_Axis_Command_Post = "PLANT_Axis_Command_Post",
	Plant_Generator = "PLANT_Generator",
	Plant_Guardpost_MG42 = "PLANT_Guardpost_MG42",
	Plant_Hopper_Pump = "PLANT_Hopper_Pump",
	Plant_Outpost_MG42 = "PLANT_Outpost_MG42",
	Plant_Tank_Barrier_1 = "PLANT_Tank_Barrier_1",
	Plant_Tank_Barrier_2 = "PLANT_Tank_Barrier_2",

	Explode_Glider_crates = "EXPLODE_Glider_crates",

	Mount_339 = "MOUNTMG42_339",
	Mount_546 = "MOUNTMG42_546",
	Mount_Compound_MG42 = "MOUNTMG42_Compound_MG42",
	Mount_Guardpost_MG42 = "MOUNTMG42_Guardpost_MG42",
	Mount_Outpost_MG42 = "MOUNTMG42_Outpost_MG42",
	Repair_339 = "REPAIRMG42_339",
	Repair_546 = "REPAIRMG42_546",
	Repair_Compound_MG42 = "REPAIRMG42_Compound_MG42",
	Repair_Guardpost_MG42 = "REPAIRMG42_Guardpost_MG42",
	Repair_Outpost_MG42 = "REPAIRMG42_Outpost_MG42",

	Mobile_MG42_274 = "MOBILEMG42_274",
	Mobile_MG42_50 = "MOBILEMG42_50",
	Snipe_133 = "SNIPE_133",
	Snipe_134 = "SNIPE_134",
	Snipe_189 = "SNIPE_189",
	Snipe_240 = "SNIPE_240",
	Snipe_264 = "SNIPE_264",
	Snipe_274 = "SNIPE_274",
	Snipe_275 = "SNIPE_275",
	Snipe_277 = "SNIPE_277",
	Snipe_50 = "SNIPE_50",

	Mover_tank = "MOVER_tank",
	Mover_train1 = "MOVER_train1",

	// Keep these movers
	Movers =
	{
		"MOVER_tank",
		"MOVER_train1",
		"MOVER_glider_sm",
	},

	MountVehicle =
	{
		Enabled = false,
		Priority = 1.1,
		LimitBots = 1,
	},

	Target =
	{
		Glider_crates =
		{
			Priority = 0.9,
			Enabled = false,
			GrenadeTargetGoalName = "EXPLODE_Glider_crates",
			LimitBots = 2,
			LimitTeam = (1<<TEAM.AXIS),
			Offset =
			{
				Vector3(-90.457, 195.817, -39.875),
			}
		},
	},

	// *** TRIGGER CALLBACKS ***

	Allied_Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, false, ".*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, ".*" );

		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_GA.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Tank_Barrier_1 );
		SetAvailableMapGoals( TEAM.AXIS, CLASS.COVERTOPS, true, Map.Plant_Allied_Command_Post );

		Map.CustomBuildGoals.Ramp.Enabled = true;
		SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_CP.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "BUILD_Assault_Ramp" );

		if ( Map.Debug )
			{ print( "Allied_Command_Post_Built" ); }
	},

	Axis_Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, CLASS.COVERTOPS, true, Map.Plant_Axis_Command_Post );

		if ( Map.Debug )
			{ print( "Axis_Command_Post_Built" ); }
	},

	Glider_crates_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Target.Glider_crates.Enabled = true;
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Allied_Command_Post );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_AlliedStart.*" );

		if ( Map.Debug )
			{ print( "Glider_crates_Built" ); }
	},

	Guardpost_MG42_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Guardpost_MG42 );

		if ( Map.Debug )
			{ print( "Guardpost_MG42_Built" ); }
	},

	Hopper_Pump_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Plant_Hopper_Pump );

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Glider_crates );

		if ( Map.Debug )
			{ print( "Hopper_Pump_Built" ); }
	},

	Outpost_MG42_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, CLASS.COVERTOPS, true, Map.Plant_Outpost_MG42 );

		if ( Map.Debug )
			{ print( "Outpost_MG42_Built" ); }
	},

	Tank_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Tank_Built" ); }
	},

	Tank_Barrier_1_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Tank_Barrier_1_Built" ); }
	},

	Tank_Barrier_2_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Tank_Barrier_2_Built" ); }
	},

	Allied_Command_Post_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Allied_Command_Post_Planted" ); }
	},

	Axis_Command_Post_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Axis_Command_Post_Planted" ); }
	},

	Generator_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Generator_Planted" ); }
	},

	Guardpost_MG42_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Guardpost_MG42_Planted" ); }
	},

	Hopper_Pump_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Hopper_Pump_Planted" ); }
	},

	Outpost_MG42_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Outpost_MG42_Planted" ); }
	},

	Tank_Barrier_1_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Tank_Barrier_1_Planted" ); }
	},

	Tank_Barrier_2_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Tank_Barrier_2_Planted" ); }
	},

	Allied_Command_Post_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Allied_Command_Post_Defused" ); }
	},

	Axis_Command_Post_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Axis_Command_Post_Defused" ); }
	},

	Generator_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Generator_Defused" ); }
	},

	Guardpost_MG42_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Guardpost_MG42_Defused" ); }
	},

	Hopper_Pump_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Hopper_Pump_Defused" ); }
	},

	Outpost_MG42_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Outpost_MG42_Defused" ); }
	},

	Tank_Barrier_1_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Tank_Barrier_1_Defused" ); }
	},

	Tank_Barrier_2_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Tank_Barrier_2_Defused" ); }
	},

	Allied_Command_Post_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Allied_Command_Post );

		if ( Map.Debug )
			{ print( "Allied_Command_Post_Destroyed" ); }
	},

	Axis_Command_Post_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Allied_Command_Post );

		if ( Map.Debug )
			{ print( "Axis_Command_Post_Destroyed" ); }
	},

	Generator_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.MountVehicle.Enabled = true;

		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_C.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Checkpoint_garage_flag );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Checkpoint_island_flag );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Checkpoint_guardpost_flag );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_GA.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_CP.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Plant_Hopper_Pump );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Plant_Allied_Command_Post );

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Mover_tank );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Tank_Barrier_1 );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_garage_flag );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_island_flag );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_guardpost_flag );
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_CP.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_glider_crates );

		//Open the falling ways near Ruins
		Wp.SetWaypointFlag("ruins1", "closed", false);
		Wp.SetWaypointFlag("ruins2", "closed", false);
		Wp.SetWaypointFlag("ruins3", "closed", false);

		//Close the Generator room and the Glider pathing
		Wp.SetWaypointFlag("GD1", "closed", true);
		Wp.SetWaypointFlag("GD2", "closed", true);
		Wp.SetWaypointFlag("GD3", "closed", true);
		Wp.SetWaypointFlag("Glider1", "closed", true);

		if ( Map.Debug )
			{ print( "Generator_Destroyed" ); }
	},

	Assault_Ramp_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, CLASS.COVERTOPS, true, Map.Plant_Assault_Ramp );

		Map.CustomBuildGoals.Ramp.Enabled = false;
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Generator );

		if ( Map.Debug )
			{ print( "Assault_Ramp_Built" ); }
	},

	Assault_Ramp_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		if ( Map.Debug )
			{ print( "Assault_Ramp_Destroyed" ); }
	},
	
	Glider_crates_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Glider_crates );

		if ( Map.Debug )
			{ print( "Glider_crates_Destroyed" ); }
	},

	Guardpost_MG42_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Guardpost_MG42 );

		if ( Map.Debug )
			{ print( "Guardpost_MG42_Destroyed" ); }
	},

	Hopper_Pump_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Hopper_Pump );

		if ( Map.Debug )
			{ print( "Hopper_Pump_Destroyed" ); }
	},

	Outpost_MG42_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Outpost_MG42 );

		if ( Map.Debug )
			{ print( "Outpost_MG42_Destroyed" ); }
	},

	Tank_Barrier_1_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Tank_Barrier_1 );

		if ( Map.Debug )
			{ print( "Tank_Barrier_1_Destroyed" ); }
	},

	Tank_Barrier_2_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Tank_Barrier_2 );

		if ( Map.Debug )
			{ print( "Tank_Barrier_2_Destroyed" ); }
	},

	garage_flag_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_garage_flag );

		if ( Map.Debug )
			{ print( "garage_flag_Axis_Captured" ); }
	},

	garage_flag_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Checkpoint_garage_flag );

		if ( Map.Debug )
			{ print( "garage_flag_Allies_Captured" ); }
	},

	guardpost_flag_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_guardpost_flag );

		if ( Map.Debug )
			{ print( "guardpost_flag_Axis_Captured" ); }
	},

	guardpost_flag_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Checkpoint_guardpost_flag );

		if ( Map.Debug )
			{ print( "guardpost_flag_Allies_Captured" ); }
	},

	island_flag_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_island_flag );

		if ( Map.Debug )
			{ print( "island_flag_Axis_Captured" ); }
	},

	island_flag_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Checkpoint_island_flag );

		if ( Map.Debug )
			{ print( "island_flag_Allies_Captured" ); }
	},

	outpost_flag_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, true, "SNIPE_AlliedStartSnipe" );

		if ( Map.Debug )
			{ print( "outpost_flag_Axis_Captured" ); }
	},

	outpost_flag_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, false, "SNIPE_AlliedStartSnipe" );

		if ( Map.Debug )
			{ print( "outpost_flag_Allies_Captured" ); }
	},

	Guardpost_Reached = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Tank_Barrier_2 );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Checkpoint_garage_flag );

		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Checkpoint_garage_flag );

		if ( Map.Debug )
			{ print( "Guardpost_Reached" ); }
	},
};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	// *** TRIGGERS ***
	OnTrigger( "Allied Command Post constructed. Charge speed increased!", Map.Allied_Command_Post_Built );
	OnTrigger( "Axis Command Post constructed. Charge speed increased!", Map.Axis_Command_Post_Built );
	OnTrigger( "^3The Allies have built a Glider!", Map.Glider_crates_Built );
	OnTrigger( "^3Axis have built the Guardpost MG42!", Map.Guardpost_MG42_Built );
	OnTrigger( "^3The Allies have repaired the Hopper Pump!", Map.Hopper_Pump_Built );
	OnTrigger( "^3Axis have built the Outpost MG42!", Map.Outpost_MG42_Built );
	OnTrigger( "The Tank has been repaired!", Map.Tank_Built );
	OnTrigger( "Tank Barrier #1 has been constructed.", Map.Tank_Barrier_1_Built );
	OnTrigger( "Tank Barrier #2 has been constructed.", Map.Tank_Barrier_2_Built );
	OnTrigger( "Planted at the Allied Command Post.", Map.Allied_Command_Post_Planted );
	OnTrigger( "Planted at the Axis Command Post.", Map.Axis_Command_Post_Planted );
	OnTrigger( "Planted at the Generator.", Map.Generator_Planted );
	OnTrigger( "Planted at the Guardpost MG42.", Map.Guardpost_MG42_Planted );
	OnTrigger( "Planted at the Hopper Pump.", Map.Hopper_Pump_Planted );
	OnTrigger( "Planted at the Outpost MG42.", Map.Outpost_MG42_Planted );
	OnTrigger( "Planted at the Tank Barrier #1.", Map.Tank_Barrier_1_Planted );
	OnTrigger( "Planted at the Tank Barrier #2.", Map.Tank_Barrier_2_Planted );
	OnTrigger( "Defused at the Allied Command Post.", Map.Allied_Command_Post_Defused );
	OnTrigger( "Defused at the Axis Command Post.", Map.Axis_Command_Post_Defused );
	OnTrigger( "Defused at the Generator.", Map.Generator_Defused );
	OnTrigger( "Defused at the Guardpost MG42.", Map.Guardpost_MG42_Defused );
	OnTrigger( "Defused at the Hopper Pump.", Map.Hopper_Pump_Defused );
	OnTrigger( "Defused at the Outpost MG42.", Map.Outpost_MG42_Defused );
	OnTrigger( "Defused at the Tank Barrier #1.", Map.Tank_Barrier_1_Defused );
	OnTrigger( "Defused at the Tank Barrier #2.", Map.Tank_Barrier_2_Defused );
	OnTrigger( "Axis have destroyed the Allied Command Post!", Map.Allied_Command_Post_Destroyed );
	OnTrigger( "Allies have destroyed the Axis Command Post!", Map.Axis_Command_Post_Destroyed );
	OnTrigger( "^3Time limit extended by 14 minutes!", Map.Generator_Destroyed );
	OnTrigger( "^3The Glider has been destroyed!", Map.Glider_crates_Destroyed );
	OnTrigger( "^3Allies have destroyed the Guardpost MG42!", Map.Guardpost_MG42_Destroyed );
	OnTrigger( "^3Axis have destroyed the Hopper Pump!", Map.Hopper_Pump_Destroyed );
	OnTrigger( "^3Allies have destroyed the Outpost MG42!", Map.Outpost_MG42_Destroyed );
	OnTrigger( "Tank Barrier #1 has been destroyed.", Map.Tank_Barrier_1_Destroyed );
	OnTrigger( "Tank Barrier #2 has been destroyed.", Map.Tank_Barrier_2_Destroyed );
	OnTrigger( "^3Axis have retaken the Tank Garage!", Map.garage_flag_Axis_Captured );
	OnTrigger( "^3Allies have captured the Tank Garage!", Map.garage_flag_Allies_Captured );
	OnTrigger( "^3Axis have reclaimed the Outpost!", Map.guardpost_flag_Axis_Captured );
	OnTrigger( "^3Allies are in control of the Guardpost!", Map.guardpost_flag_Allies_Captured );
	OnTrigger( "^3Axis have claimed the Island!", Map.island_flag_Axis_Captured );
	OnTrigger( "^3Allies have liberated the Island!", Map.island_flag_Allies_Captured );
	OnTrigger( "^3Axis have reclaimed the Outpost!", Map.outpost_flag_Axis_Captured );
	OnTrigger( "^3Allies have captured the Outpost!", Map.outpost_flag_Allies_Captured );
	OnTrigger( "battery_allies_built_ramp", Map.Assault_Ramp_Built );
	OnTrigger( "battery_allies_dest_ramp", Map.Assault_Ramp_Destroyed );
	OnTrigger( "Allies have ^3permanently ^7claimed the Guardpost!", Map.Guardpost_Reached );

	// *** CLEAR ALL GOALS FOR BOTH TEAMS ***
	SetAvailableMapGoals( TEAM.AXIS, false, ".*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, ".*" );

	// *** AXIS GOALS ***
	SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_AxisOutpost.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Outpost_MG42 );
	SetAvailableMapGoals( TEAM.AXIS, true, "MOUNTMG42_Outpost_MG42"  );
	SetAvailableMapGoals( TEAM.AXIS, true, "REPAIRMG42_Outpost_MG42" );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Checkpoint_outpost_flag );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Axis_Command_Post );

	// *** ALLIED GOALS ***
	SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Hopper_Pump );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_AlliedStart.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "SNIPE_AlliedStartSnipe" );
	SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_outpost_flag );

	// *** GOALS PRIORITY ***
	/*SetGoalPriority( Map.Plant_Outpost_MG42, 0.5 );
	SetGoalPriority( Map.Plant_Axis_Command_Post, 0.5 );
	SetGoalPriority( Map.Checkpoint_guardpost_flag, 0.65 );
	SetGoalPriority( Map.Checkpoint_garage_flag, 0.65 );
	SetGoalPriority( Map.Checkpoint_island_flag, 0.65 );
	SetGoalPriority( Map.Checkpoint_outpost_flag, 0.65 );
	SetGoalPriority( Map.Build_Glider_crates, 0.7 );
	SetGoalPriority( Map.Build_Hopper_Pump, 0.75 );
	SetGoalPriority( Map.Build_Allied_Command_Post, 0.8 );
	SetGoalPriority( Map.Checkpoint_garage_flag, 0.85 );
	SetGoalPriority( Map.Build_Tank, 0.9 );
	SetGoalPriority( Map.Plant_Tank_Barrier_1, 0.95 );
	SetGoalPriority( Map.Plant_Tank_Barrier_2, 0.95 );*/

	// *** GOALS PROPERTIES ***
	Util.AddInvVehicle( "MOVER_glider_sm" );
	Wp.SetWaypointFlag( "ruins1", "closed", true );
	Wp.SetWaypointFlag( "ruins2", "closed", true );
	Wp.SetWaypointFlag( "ruins3", "closed", true );
	Util.SetMaxUsersInUse( 1, "MOUNTMG42_.*" );
	Util.SetMaxUsersInProgress( 2, "BUILD.*" );
	Util.SetMaxUsersInProgress( 1, "PLANT.*" );
	Util.SetMaxUsersInProgress( 1, "ATTACK_.*" );
	Util.SetMaxUsersInProgress( 1, "DEFEND_.*" );
	Util.SetMaxUsersInProgress( 1, "MOBILEMG42_.*" );
	Util.SetMaxUsersInProgress( 1, "MOUNTMG42_.*" );
	Util.SetMaxUsersInProgress( 1, "REPAIRMG42_.*" );
	Util.SetMaxUsersInProgress( 1, "CHECKPOINT_.*" );
	SetMapGoalProperties( "ATTACK_.*", {mincamptime=60, maxcamptime=120});
	SetMapGoalProperties( "DEFEND_.*", {mincamptime=60, maxcamptime=120});
	SetMapGoalProperties( "SNIPE_.*", {mincamptime=60, maxcamptime=120});
	SetMapGoalProperties( "MOBILEMG42_.*", {mincamptime=60, maxcamptime=120});

	print( "Omni-bot map script for Glider 3.0.2 by **PC** Mateos" );
};