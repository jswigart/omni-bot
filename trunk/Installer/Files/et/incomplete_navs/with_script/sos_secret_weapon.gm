//==========================================================================================
//
//	sos_secret_weapon.gm
//
//	Who  	When		What
//------------------------------------------------------------------------------------------
//	^4Tardis	01 November 2010	Initial Script
//
//==========================================================================================
//

global Map =
{
	Debug = 0, // please set to zero before distributing your script
	ShowMovers = false,

	Drop_Point_Radio_Construction_Dyno = 0,
	Lower_Door_Dyno = 0,
	Upper_Door_Dyno = 0,

	Drop_Point_Radio_Construction_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }
		SetAvailableMapGoals( TEAM.ALLIES, true, "CAPPOINT.*" );
		Util.MapDebugPrint( "Drop_Point_Radio_Construction_Built" );
	},

	Drop_Point_Radio_Construction_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Drop_Point_Radio_Construction_Dyno += 1;
		Util.MapDebugPrint( "Drop_Point_Radio_Construction_Planted" );
	},
	
	Drop_Point_Radio_Construction_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Drop_Point_Radio_Construction_Dyno -= 1;
		Util.MapDebugPrint( "Drop_Point_Radio_Construction_Defused" );
	},
	
	Drop_Point_Radio_Construction_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Drop_Point_Radio_Construction_Dyno = 0;

		Util.MapDebugPrint( "Drop_Point_Radio_Construction_Destroyed" );
	},

	Upper_Door_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Upper_Door_Dyno += 1;
		Util.MapDebugPrint( "Upper_Door_Planted" );
	},

	Upper_Door_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Upper_Door_Dyno -= 1;
		Util.MapDebugPrint( "Upper_Door_Defused" );
	},
	
	Upper_Door_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Upper_Door_Dyno = 0;

		Util.MapDebugPrint( "Upper_Door_Destroyed" );
	},
	
	Lower_Door_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Lower_Door_Dyno += 1;
		Util.MapDebugPrint( "Lower_Door_Planted" );
	},
	
	Lower_Door_Defused = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Lower_Door_Dyno -= 1;
		Util.MapDebugPrint( "Lower_Door_Defused" );
	},
	
	Lower_Door_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.Lower_Door_Dyno = 0;

		Util.MapDebugPrint( "Lower_Door_Destroyed" );
	},

	transmitter_obj_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "transmitter_obj_Taken" );
	},

	transmitter_obj_Returned = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "transmitter_obj_Returned" );
	},

	transmitter_obj_Secured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "transmitter_obj_Secured" );
	},

	forwardspawn1_flag_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "forwardspawn1_flag_Axis_Captured" );
	},

	forwardspawn1_flag_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "forwardspawn1_flag_Allies_Captured" );
	},

};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	// Register callback functions
	OnTrigger( "Allies have built the radio!", Map.Drop_Point_Radio_Construction_Built );
	OnTrigger( "Planted at the Drop Point Radio Construction", Map.Drop_Point_Radio_Construction_Planted );
	OnTrigger( "Planted at the Lower Door", Map.Lower_Door_Planted );
	OnTrigger( "Planted at the Upper Door", Map.Upper_Door_Planted );
	OnTrigger( "Defused at the Drop Point Radio Construction", Map.Drop_Point_Radio_Construction_Defused );
	OnTrigger( "Defused at the Lower Door", Map.Lower_Door_Defused );
	OnTrigger( "Defused at the Upper Door", Map.Upper_Door_Defused );
	OnTrigger( "Axis have destroyed the radio", Map.Drop_Point_Radio_Construction_Destroyed );
	OnTrigger( "Allies have destroyed the Lower Door", Map.Lower_Door_Destroyed );
	OnTrigger( "Allies have destroyed the Upper Door", Map.Upper_Door_Destroyed );
	OnTrigger( "Allies have stolen the Secret Weapon!", Map.transmitter_obj_Taken );
	OnTrigger( "Axis have returned the Secret Weapon!", Map.transmitter_obj_Returned );
	OnTrigger( "Allied team has secured the secret weapon!", Map.transmitter_obj_Secured );
	OnTrigger( "Axis reclaim the Forward Spawn!", Map.forwardspawn1_flag_Axis_Captured );
	OnTrigger( "Allies capture the Forward Spawn!", Map.forwardspawn1_flag_Allies_Captured );
	
	Util.SetGoalOffset( 0, 0, -50, "BUILD_Drop_Point_Radio_Construction" );
	//~Util.DisableGoal( ".*", true ); // all but routes
	//~SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_.*" );
	//~SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, "CAPPOINT.*" );

	// Max users per goal
	Util.SetMaxUsers( 1, "ATTACK_.*" );
	Util.SetMaxUsers( 1, "DEFEND_.*" );
	Util.SetMaxUsers( 1, "GRENADE_.*" );
	Util.SetMaxUsers( 1, "SNIPE_.*" );
	Util.SetMaxUsers( 1, "MOUNTMG42_.*" );
	Util.SetMaxUsers( 1, "MOBILEMG42_.*" );
	Util.SetMaxUsers( 1, "MOBILEMORTAR_.*" );
	Util.SetMaxUsers( 1, "AIRSTRIKE_.*" );
	Util.SetMaxUsers( 1, "CALLARTILLERY_.*" );

	// Camp times
	SetMapGoalProperties( "MOUNTMG42_.*", {MinCampTime=15, MaxCampTime=90} );
	SetMapGoalProperties( "MOBILEMG42_.*", {MinCampTime=10, MaxCampTime=60} );

	if ( Map.Debug > 1 )
		{ Util.ShowActiveGoals(); }

	print( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
	// Uncomment for shootable breakables
	bot.TargetBreakableDist = 90.0;
	// Only set MaxViewDistance on maps with limited sight (e.g. fog)
	//~bot.MaxViewDistance = 2400;
};
