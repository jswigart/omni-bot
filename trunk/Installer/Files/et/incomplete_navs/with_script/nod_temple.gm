//==========================================================================================
//
//	nod_temple.gm
//
//	Who	When		What
//------------------------------------------------------------------------------------------
//	palota	06 December 2010	Initial Script
//
//==========================================================================================
//

global Map =
{
	Debug = 1, // please set to zero before distributing your script
	fenceActive = true,
	fenceGeneratorDestroyed = false,
	flagAxis = true,
	ShowMovers = false,
	Movers = { "MOVER_sturmleiter01", "MOVER_sturmleiter02" },

	Switches =
	{
		fence_south =
		{
			Enabled = true,
			Priority = 0,
			WaypointName = "fence_south",
			AimPosition = Vec3(-475.692, -1984.114, -217.971)
		},
		fence_north =
		{
			Enabled = true,
			Priority = 0,
			WaypointName = "fence_north",
			AimPosition = Vec3(-475.929, -1632.451, -217.892),
		},
	},

	SetFlag = function(a)
	{
		Map.flagAxis = a;
		SetAvailableMapGoals( TEAM.AXIS, a, "SNIPE_axis.*" );
		SetAvailableMapGoals( TEAM.AXIS, a, "PLANT_Ladder.*" );
		SetAvailableMapGoals( TEAM.AXIS, a && Map.fenceGeneratorDestroyed, "DEFEND_entrance.*" );
		SetAvailableMapGoals( TEAM.ALLIES, a, "SNIPE_allied.*" );
		SetAvailableMapGoals( TEAM.ALLIES, a, "BUILD_Ladder.*" );
	},

	rocket_Door_Open = function( trigger )
	{
		Util.LimitToTeam(TEAM.AXIS, "SWITCH_door");
		sleep(2);
		SetGoalPriority("PLANT_rocket_Fuel", 0.92, TEAM.ALLIES);
		Util.MapDebugPrint( "rocket_Door_Open" );
	},

	rocket_Door_Close = function( trigger )
	{
		Util.LimitToTeam(TEAM.ALLIES, "SWITCH_door");
		SetGoalPriority("PLANT_rocket_Fuel", 0.4, TEAM.ALLIES);
		Util.MapDebugPrint( "rocket_Door_Close" );
	},

	Fence_Generator_Destroyed = function( trigger )
	{
		Map.fenceGeneratorDestroyed = true;
		Map.Switches.fence_south.Enabled = false;
		Map.Switches.fence_north.Enabled = false;

		Util.SetMaxUsers( 3, "PLANT_Doorgenerator" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_fence.*" );
		SetAvailableMapGoals( TEAM.AXIS, Map.flagAxis, "DEFEND_entrance.*" );
		if(!Map.flagAxis){
			Util.DisableGoal("CHECKPOINT_spawnflageingang");
		}
		Util.MapDebugPrint( "Fence_Generator_Destroyed" );
	},

	Doorgenerator_Built = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, true, "SWITCH_door" );
		Util.MapDebugPrint( "Doorgenerator_Built" );
	},

	Doorgenerator_Destroyed = function( trigger )
	{
      Util.DisableGoal("SWITCH_door");
		Util.MapDebugPrint( "Doorgenerator_Destroyed" );
	},

	Ladder_Built = function( trigger )
	{
		if(trigger.Entity==213){
			Wp.SetWaypointFlag("ladder_w", "closed", false);
			Util.EnableGoal("ROUTE_ladder_w");
			Util.MapDebugPrint( "West Ladder_Built" );
		}
		if(trigger.Entity==218){
			Wp.SetWaypointFlag("ladder_e", "closed", false);
			Util.EnableGoal("ROUTE_ladder_e");
			Util.MapDebugPrint( "East Ladder_Built" );
		}
	},

	Ladder_Destroyed = function( trigger )
	{
		if(trigger.Entity==213){
			Wp.SetWaypointFlag("ladder_w", "closed", true);
			Util.DisableGoal("ROUTE_ladder_w");
			Util.MapDebugPrint( "West Ladder_Destroyed" );
		}
		if(trigger.Entity==218){
			Wp.SetWaypointFlag("ladder_e", "closed", true);
			Util.DisableGoal("ROUTE_ladder_e");
			Util.MapDebugPrint( "East Ladder_Destroyed" );
		}
	},

	a_Window_Destroyed = function( trigger )
	{
		Util.EnableGoal("ROUTE_window.*");
		Util.MapDebugPrint( "a_Window_Destroyed" );
	},

	spawnflageingang_Axis_Captured = function( trigger )
	{
		Map.SetFlag(true);
		Util.MapDebugPrint( "spawnflageingang_Axis_Captured" );
	},

	spawnflageingang_Allies_Captured = function( trigger )
	{
		Map.SetFlag(false);
		if(Map.fenceGeneratorDestroyed){
			Util.DisableGoal("CHECKPOINT_spawnflageingang");
		}
		Util.MapDebugPrint( "spawnflageingang_Allies_Captured" );
	},

	rocket_Fuel_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "rocket_Fuel_Destroyed" );
	},

	FenceProc = function()
	{
		start = Vector3(0, -1916, -40);
		end = Vector3(0, -1685, -40);
		while (!Map.fenceGeneratorDestroyed)
		{
			tr = TraceLine(start, end, null, TRACE.PLAYER, 0, false);
			fenceActive = (tr.fraction < 1);
			Map.Switches.fence_south.Enabled = fenceActive;
			Map.Switches.fence_north.Enabled = fenceActive;
			if(fenceActive){ color = COLOR.RED; }else{ color = COLOR.GREEN; }
			DrawDebugLine(start, end, color, 1);
			sleep(1);
		}
		sleep(4);
		//center gate fence sometimes remain active after the generator has been destroyed
		// and cannot be disabled by switches
		tr = TraceLine(start, end, null, TRACE.PLAYER, 0, false);
		if(tr.fraction < 1)
		{
			Wp.SetWaypointFlag("fence_north1", "closed", true);
			Wp.SetWaypointFlag("fence_north2", "closed", true);
		}
	},
};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	OnTrigger( "The Generator Destroyed.", Map.Fence_Generator_Destroyed );
	OnTrigger( "Allies build a ladder.", Map.Ladder_Built );
	OnTrigger( "Axis destroy a ladder.", Map.Ladder_Destroyed );
	OnTrigger( "Allies capture the Forward Flag!", Map.spawnflageingang_Allies_Captured );
	OnTrigger( "Axis reclaim the Forward Flag!", Map.spawnflageingang_Axis_Captured );
	OnTrigger( "Allies have constructed the Door Controls Generator!", Map.Doorgenerator_Built );
	OnTrigger( "Axis team has destroyed the Door Controls Generator!", Map.Doorgenerator_Destroyed );
	OnTrigger( "Allied have blown a Window!", Map.a_Window_Destroyed );
	OnTrigger( "The door to the rocket is now open!", Map.rocket_Door_Open );
	OnTrigger( "The door to the rocket is now close!", Map.rocket_Door_Close );
	OnTrigger( "The Allied destroy the Rocket!", Map.rocket_Fuel_Destroyed );

	Util.UpdateSwitchData();

	Util.DisableGoal( ".*", true ); // all but routes
	Util.DisableGoal("ROUTE_ladder_w");
	Util.DisableGoal("ROUTE_ladder_e");
	Util.DisableGoal("ROUTE_window.*");
	Util.EnableGoal("AMMOCAB.*");
	Util.EnableGoal("CHECKPOINT_spawnflageingang");
	Util.EnableGoal(".*_Command_Post");

	SetAvailableMapGoals( TEAM.AXIS, true, "PLANT_Doorgenerator" );
	SetAvailableMapGoals( TEAM.AXIS, true, "PLANT_Ladder.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_fence.*" );

	SetAvailableMapGoals( TEAM.ALLIES, true, "BUILD_Ladder.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "BUILD_Doorgenerator" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_a_Window" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_rocket_Fuel" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Generator" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "SWITCH_door" );

	Map.SetFlag(true);

	SetGoalPriority("PLANT_Doorgenerator", 0.85, TEAM.AXIS);
	SetGoalPriority("PLANT_Generator", 0.95, TEAM.ALLIES);
	SetGoalPriority("PLANT_a_Window", 0.92, TEAM.ALLIES);
	SetGoalPriority("PLANT_rocket_Fuel", 0.4, TEAM.ALLIES);
	SetGoalPriority("PLANT_Command_Post", 0.6, TEAM.ALLIES);
	SetGoalPriority("CHECKPOINT_spawnflageingang", 0.65);

	// Max users per goal
	Util.SetMaxUsers( 1, "PLANT_Doorgenerator" );
	Util.SetMaxUsers( 1, "ATTACK_.*" );
	Util.SetMaxUsers( 1, "DEFEND_.*" );
	Util.SetMaxUsers( 1, "SNIPE_.*" );
	Util.SetMaxUsers( 1, "MOBILEMG42_.*" );
	Util.SetMaxUsers( 1, "CALLARTILLERY_.*" );

	Wp.SetWaypointFlag("ladder_w", "closed", true);
	Wp.SetWaypointFlag("ladder_e", "closed", true);
	Wp.SetWaypointFlag("fence_north1", "closed", false);
	Wp.SetWaypointFlag("fence_north2", "closed", false);

	thread(Map.FenceProc);

	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
	Util.IgnoreTargetGoalTable(bot, Map.Movers);
};
