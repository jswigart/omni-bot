//==========================================================================================
//
//	nemo.gm
//
//	Who	When		What
//------------------------------------------------------------------------------------------
//	palota	09 January 2011	Initial Script
//
//==========================================================================================
//

global Map =
{
	Debug = 1, // please set to zero before distributing your script
	ShowMovers = false,

	flagHarbor_Axis_Captured = function( trigger )
	{
		//mg42 cannot be repaired !
		Util.LimitToTeam(TEAM.AXIS, "MOUNTMG42_mg42_bank");
		Util.MapDebugPrint("flagHarbor_Axis_Captured" );
	},

	flagHarbor_Allies_Captured = function( trigger )
	{
		Util.LimitToTeam(TEAM.ALLIES, "MOUNTMG42_mg42_bank");
		Util.MapDebugPrint( "flagHarbor_Allies_Captured" );
	},

	flagArchives_Axis_Captured = function( trigger )
	{
		Util.LimitToTeam(TEAM.AXIS, "MOUNTMG42_archive");
		Util.MapDebugPrint( "flagArchives_Axis_Captured" );
	},

	flagArchives_Allies_Captured = function( trigger )
	{
		Util.LimitToTeam(TEAM.ALLIES, "MOUNTMG42_archive");
		Util.MapDebugPrint( "flagArchives_Allies_Captured" );
	},

	flagCenter_Axis_Captured = function( trigger )
	{
		Util.LimitToTeam(TEAM.AXIS, "MOUNTMG42_center");
		Util.MapDebugPrint( "flagCenter_Axis_Captured" );
	},

	flagCenter_Allies_Captured = function( trigger )
	{
		Util.LimitToTeam(TEAM.ALLIES, "MOUNTMG42_center");
		Util.MapDebugPrint( "flagCenter_Allies_Captured" );
	},

	window_Grates_Built = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, true, "DYNAMITE_window");
		Util.MapDebugPrint( "window_Grates_Built" );
	},

	window_Grates_Destroyed = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, false, "DYNAMITE_window");
		Util.MapDebugPrint( "window_Grates_Destroyed" );
	},

	Gates_Destroyed = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, true, "BUILD_Arhive_Barricade" );
		Util.MapDebugPrint( "Gates_Destroyed" );
	},

};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	OnTrigger( "The Axis have taken control of the Harbor!", Map.flagHarbor_Axis_Captured );
	OnTrigger( "The Allies have taken control of the Harbor!", Map.flagHarbor_Allies_Captured );
	OnTrigger( "The Axis have taken control of the Archives!", Map.flagArchives_Axis_Captured );
	OnTrigger( "The Allies have taken control of the Archives!", Map.flagArchives_Allies_Captured );
	OnTrigger( "The Axis have taken control of the Town Center!", Map.flagCenter_Axis_Captured );
	OnTrigger( "The Allies have taken control of the Town Center!", Map.flagCenter_Allies_Captured );
	OnTrigger( "The Axis have destroyed the Gates!", Map.Gates_Destroyed );
	OnTrigger( "The Allies have destroyed the Gates!", Map.Gates_Destroyed );
	OnTrigger( "The Axis have built the Window Grates!", Map.window_Grates_Built );
	OnTrigger( "The Allies have destroyed the Window Grates!", Map.window_Grates_Destroyed );

	OnTriggerRegion(AABB(8386.991,2727.125,237.125,8732.349,2918.031,404.386),RegionTrigger.DisableCombatMovement); //harbor flag
	OnTriggerRegion(AABB(805.279,7334.977,140.858,1529.705,8015.840,328.821),RegionTrigger.BreakableDistance); //axis spawn
	OnTriggerRegion(AABB(6569.125,6369.212,70.377,6755.283,6920.895,290.348),RegionTrigger.BreakableDistance); //sewer grate
	RegionTrigger.BreakableDistance.MinBreakableDist = 0;
	RegionTrigger.BreakableDistance.MaxBreakableDist = 500;

	Util.DisableGoal(".*MG42_.*");
	SetAvailableMapGoals( TEAM.ALLIES, false, "BUILD_Arhive_Barricade" );
	Util.LimitToTeam(TEAM.AXIS, "DEFEND_x.*");
	Util.LimitToTeam(TEAM.ALLIES, "DEFEND_l.*");

	SetGoalPriority( "MOUNTMG42.*", 0.75);
	SetGoalPriority( "PLANT_Sewer_Entreance", 0.0, TEAM.AXIS, CLASS.ENGINEER); //can't arm dynamite underwater
	SetGoalPriority( "PLANT_Window_Grate", 0.0, TEAM.ALLIES, CLASS.ENGINEER); //can't plant near friendly objective
	SetGoalPriority( "PLANT_Allied_Construction", 0.9, TEAM.AXIS, CLASS.ENGINEER);
	SetGoalPriority( "BUILD_Window_Grate", 0.89, TEAM.AXIS);
	SetGoalPriority( "PLANT_Axis_Checkpoint", 0.8, TEAM.ALLIES);
	SetGoalPriority( "PLANT_Gates", 0.85, TEAM.ALLIES);

	SetMapGoalProperties( "MOUNTMG42_.*", {MinCampTime=20, MaxCampTime=90} );

	Util.SetMaxUsers( 1, "MOUNTMG42_.*" );

	Util.AddUsePoint("PLANT_Allied_Construction", { Vector3(4737.519, 6009.280, 208.125), Vector3(4714.791, 5707.746, 208.125) });
	Util.AddUsePoint("PLANT_Gates", Vector3(4421.792, 7835.160, 202.125));
	Util.AddUsePoint("PLANT_Axis_Harbor_Barricade", { Vector3(4653.154, 2419.584, 208.125), Vector3(4779.764, 2435.665, 208.125) });
	Util.AddUsePoint("PLANT_Window_Grate", { Vector3(4971.931, 6260.125, 228.125), Vector3(4915.875, 6154.875, 208.125) });
	Util.AddUsePoint("PLANT_Sewer_Entreance", Vector3(6685.592, 6499.386, 196.125));
	Util.SetGoalPosition(6666.898, 6405.055, 200, "PLANT_Sewer_Entreance");

	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};
