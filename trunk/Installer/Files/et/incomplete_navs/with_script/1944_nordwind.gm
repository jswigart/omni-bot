/****************************************************
Pathing and script updated by **PC** >M@t3o$<
Correspondant WAY file size : -
Last Update : 2nd October 2010
****************************************************/

global Map =
{
	Ammo_Cabinet_north_ammocabinet = "AMMOCAB_north_ammocabinet",
	Ammo_Cabinet_north_ammocabinet_1 = "AMMOCAB_north_ammocabinet_1",
	Health_Cabinet_north_healthcabinet = "HEALTHCAB_north_healthcabinet",
	Health_Cabinet_north_healthcabinet_1 = "HEALTHCAB_north_healthcabinet_1",
	Flag_Gold_Bars = "FLAG_Gold_Bars",
	Cappoint_GoldDropoff = "CAPPOINT_GoldDropoff",
	Build_Command_Post = "BUILD_Command_Post",
	Build_Tank = "BUILD_Tank",
	Build_Truck = "BUILD_Truck",
	Build_Truck_Barrier = "BUILD_Truck_Barrier",
	Plant_Command_Post = "PLANT_Command_Post",
	Plant_Truck_Barrier = "PLANT_Truck_Barrier",
	Plant_Warehouse_Door = "PLANT_Warehouse_Door",
	Snipe_127 = "SNIPE_127",
	Snipe_128 = "SNIPE_128",
	Snipe_130 = "SNIPE_130",
	Mover_tank = "MOVER_tank",
	Mover_truck = "MOVER_truck",
	
	EscortVehicle =
	{
		Truck =
		{
			Enabled = true,
			Priority = 0.9,
			EscortVehicleGoalName = "MOVER_truck",
			LimitBots = 1,
			LimitClass = Util.AllClasses,
			LimitTeam = (1<<TEAM.AXIS),
			Offset = 
			{
				Vector3(30,0,0),
			}
		},
	},
	
	MountVehicle =
	{
		Enabled = true,
		Priority = 0.9,
		LimitBots = 1,
		LimitClass = Util.AllClasses,
		LimitTeam = (1<<TEAM.AXIS),
	},

	Allied_Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }
		
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Plant_Command_Post );
			
		print( "Allied_Command_Post_Built" );
	},
	
	Axis_Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }
		
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Command_Post );
			
		print( "Axis_Command_Post_Built" );
	},

	Tank_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		print( "Tank_Built" );
	},

	Truck_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		print( "Truck_Built" );
	},

	Truck_Barrier_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }
		
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Plant_Truck_Barrier );

		print( "Truck_Barrier_Built" );
	},

	Allied_Command_Post_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		print( "Allied_Command_Post_Destroyed" );
	},
	
	Axis_Command_Post_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		print( "Axis_Command_Post_Destroyed" );
	},

	Truck_Barrier_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		print( "Truck_Barrier_Destroyed" );
	},

	Warehouse_Door_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.ChangeSpawn(TEAM.AXIS, 4);
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Plant_Warehouse_Door );
		SetAvailableMapGoals( TEAM.AXIS, false, "ATTACK_Delta.*" );
		
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_Alpha.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_High.*" );
		
		print( "Warehouse_Door_Destroyed" );
	},

	Gold_Bars_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Truck );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Mover_truck );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Plant_Truck_Barrier );
		SetAvailableMapGoals( TEAM.AXIS, false, "ATTACK_Golf.*" );
		
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_allies_truck.*" );

		print( "Gold_Bars_Taken" );
	},
	
	tank_region_0 = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.MountVehicle.Enabled = false;
		SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_Golf.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mover_tank );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Tank );
			
		SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_allies_truck.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Truck_Barrier );
			
		print( "tank_region_0" );
	},
	
	tank_region_1 = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		SetAvailableMapGoals( TEAM.AXIS, false, "ATTACK_Echo.*" );
			
		Util.ChangeSpawn(TEAM.ALLIES, 3);
		SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_Alpha.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_Charlie.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_allies_start.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_High.*" );
			
		print( "tank_region_1" );
	},
	
	tank_region_2 = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_Foxtrot.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "ATTACK_Delta.*" );
			
		SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_Bravo.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_Alpha.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_Charlie.*" );
		
		// Tactical decision: CP useless in fight
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Command_Post );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Plant_Command_Post );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Command_Post );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Command_Post );
			
		print( "tank_region_2" );
	},
	
	truck_region_3 = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_Delta.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "ATTACK_Foxtrot.*" );
			
		SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_High.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Truck_Barrier );
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_Bravo.*" );
			
		print( "truck_region_3" );
	},
	
	truck_region_4 = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_Hotel.*" );
			
		Util.ChangeSpawn(TEAM.ALLIES, 2);
		SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_Charlie.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_High.*" );
		
		print( "truck_region_4" );
	},
};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }
	
	// *** TRIGGERS ***
	OnTrigger( "Allied Command Post constructed. Charge speed increased!, Allies Contro", Map.Allied_Command_Post_Built );
	OnTrigger( "Axis Command Post constructed. Charge speed increased!", Map.Axis_Command_Post_Built );
	OnTrigger( "Axis team has repaired the Tank!", Map.Tank_Built );
	OnTrigger( "The Truck has been repaired!", Map.Truck_Built );
	OnTrigger( "Truck Barrier #1 has been constructed.", Map.Truck_Barrier_Built );
	OnTrigger( "Axis team has destroyed the Allied Command Post!", Map.Allied_Command_Post_Destroyed );
	OnTrigger( "Allied team has destroyed the Axis Command Post!", Map.Axis_Command_Post_Destroyed );
	OnTrigger( "Truck Barrier #1 has been destroyed.", Map.Truck_Barrier_Destroyed );
	OnTrigger( "The Warehouse Door Destroyed.", Map.Warehouse_Door_Destroyed );
	OnTrigger( "Axis team is escaping with the Gold Crates!", Map.Gold_Bars_Taken );
	
	// *** CLEAR ALL GOALS FOR BOTH TEAMS ***
	SetAvailableMapGoals( TEAM.AXIS, false, ".*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, ".*" );
	
	// *** AXIS GOALS ***
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Flag_Gold_Bars );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Cappoint_GoldDropoff );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Tank );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Mover_tank );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Command_Post );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Plant_Warehouse_Door );
	SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_Delta.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_Echo.*" );
	
	// *** ALLIED GOALS ***
	Util.ChangeSpawn(TEAM.ALLIES, 3);
	SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Command_Post );
	SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_High.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_allies_start.*" );
	
	// *** ROUTING ***
	SetAvailableMapGoals( TEAM.AXIS, true, "ROUTE.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ROUTE.*" );
	
	// *** PRIORITY ***
	SetGoalPriority( "ATTACK.*", 0.5 );
	SetGoalPriority( "DEFEND.*", 0.5 );
	SetGoalPriority( "DEFEND_High.*", 0.55 );
	SetGoalPriority( "DEFEND_allies_truck.*", 0.55 );
	SetGoalPriority( Map.Plant_Truck_Barrier, 0.6 );
	SetGoalPriority( Map.Build_Command_Post, 0.6 );
	SetGoalPriority( Map.Plant_Command_Post, 0.6 );
	SetGoalPriority( Map.Build_Tank, 0.7 );
	SetGoalPriority( Map.Plant_Warehouse_Door, 0.8 );
	
	// *** GOALS PROPERTIES ***
	Util.SetMaxUsersInUse( 1, "MOUNTMG42_.*" );
	Util.SetMaxUsersInProgress( 2, "BUILD.*" );
	Util.SetMaxUsersInProgress( 1, "PLANT.*" );
	Util.SetMaxUsersInProgress( 1, "ATTACK_.*" );
	Util.SetMaxUsersInProgress( 1, "DEFEND_.*" );
	Util.SetMaxUsersInProgress( 1, "MOBILEMG42_.*" );
	Util.SetMaxUsersInProgress( 1, "MOUNTMG42_.*" );
	Util.SetMaxUsersInProgress( 1, "REPAIRMG42_.*" );
	Util.SetMaxUsersInProgress( 1, "CHECKPOINT_.*" );
	SetMapGoalProperties( "ATTACK_.*", {mincamptime=60, maxcamptime=120});
	SetMapGoalProperties( "DEFEND_.*", {mincamptime=60, maxcamptime=120});
	SetMapGoalProperties( "SNIPE_.*", {mincamptime=60, maxcamptime=120});
	SetMapGoalProperties( "MOBILEMG42_.*", {mincamptime=60, maxcamptime=120});
	
	Util.SetGoalOffset( 50, 75, 0, "PLANT_Truck_Barrier" );
	
	Util.OnTriggerPosition( Map.Mover_tank, "region0", 200.0, Map.tank_region_0 );
	Util.OnTriggerPosition( Map.Mover_tank, "region1", 200.0, Map.tank_region_1 );
	Util.OnTriggerPosition( Map.Mover_tank, "region2", 200.0, Map.tank_region_2 );
	Util.OnTriggerPosition( Map.Mover_truck, "region3", 200.0, Map.truck_region_3 );
	Util.OnTriggerPosition( Map.Mover_truck, "region2", 200.0, Map.truck_region_4 );
	
	// *** ROUTES ***
	MapRoutes =
	{
		DEFEND_High3 =
		{
			ROUTE_AlliedSpawn =
			{
				ROUTE_AlliedRoute1 = {},
			},
		},
		
		//First spawn
		BUILD_Tank =
		{
			ROUTE_AxisSpawn =
			{
				ROUTE_Hill1 =
				{
					ROUTE_Hill2 =
					{
						ROUTE_Hill3 =
						{
							ROUTE_Hill4 =
							{
								ROUTE_Ground3 ={},
							},
						},
					},
				},
				
				ROUTE_Ground1 =
				{
					ROUTE_Ground2 =
					{
						ROUTE_Ground3 ={},
					},
				},
			},
			
			ROUTE_AxisSpawn2 =
			{
				ROUTE_Hill1 =
				{
					ROUTE_Hill2 =
					{
						ROUTE_Hill3 =
						{
							ROUTE_Hill4 =
							{
								ROUTE_Ground3 ={},
							},
						},
					},
				},
				
				ROUTE_Ground1 =
				{
					ROUTE_Ground2 =
					{
						ROUTE_Ground3 ={},
					},
				},
			},
			
			ROUTE_AxisSpawn3 =
			{
				ROUTE_Hill1 =
				{
					ROUTE_Hill2 =
					{
						ROUTE_Hill3 =
						{
							ROUTE_Hill4 =
							{
								ROUTE_Ground3 ={},
							},
						},
					},
				},
			},
		},
		
		BUILD_Command_Post =
		{
			ROUTE_AxisSpawn =
			{
				ROUTE_Hill1 =
				{
					ROUTE_Hill2 =
					{
						ROUTE_Hill3 =
						{
							ROUTE_Hill4 = {},
						},
					},
				},
			},
			
			ROUTE_AxisSpawn2 =
			{
				ROUTE_Hill1 =
				{
					ROUTE_Hill2 =
					{
						ROUTE_Hill3 =
						{
							ROUTE_Hill4 = {},
						},
					},
				},
			},
			
			ROUTE_AxisSpawn3 =
			{
				ROUTE_Hill1 =
				{
					ROUTE_Hill2 =
					{
						ROUTE_Hill3 =
						{
							ROUTE_Hill4 = {},
						},
					},
				},
			},
		},
		
		// Warehouse Spawn Activated
		BUILD_Tank =
		{
			ROUTE_WarehouseSpawn =
			{
				ROUTE_Ground2 =
				{
					ROUTE_Ground3 ={},
				},
				ROUTE_Warehouse1 =
				{
					ROUTE_Warehouse2 ={},
				},
			},
		},
		
		BUILD_Command_Post =
		{
			ROUTE_WarehouseSpawn =
			{
				ROUTE_Ground2 =
				{
					ROUTE_Hill3 =
					{
						ROUTE_Hill4 = {},
					},
				},
			},
		},
	};
	
	//Copy routes
	MapRoutes.DEFEND_High4 = MapRoutes.DEFEND_High3;
	MapRoutes.DEFEND_High5 = MapRoutes.DEFEND_High3;
	
	Util.Routes(MapRoutes);

	print( "Omni-bot map script for 1944 Nordwind by **PC** >M@t3o$<." );
};

global OnBotJoin = function( bot )
{
	bot.TargetBreakableDist = 90.0;
	weaps = { WEAPON.THOMPSON, WEAPON.MP40, WEAPON.SHOTGUN, WEAPON.M97, WEAPON.M7, WEAPON.GARAND, WEAPON.BAR };

	foreach( id and weap in weaps )
	{
		w = bot.GetWeapon(weap);
		w.PrimaryFire.SetTargetBias(CLASS.BREAKABLE, 1.2);
	}

	w = bot.GetWeapon(WEAPON.KNIFE);
	w.PrimaryFire.SetDesirabilityRange(0, 48, 0.6);
};