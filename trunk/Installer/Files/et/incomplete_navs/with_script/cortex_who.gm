//==========================================================================================
//
//	cortex_who.gm
//
//	Who	When		What
//------------------------------------------------------------------------------------------
//	palota	14 November 2011	paththrough navigation, RideMover - lift1,lift2,mongolfier, DYNAMITE goals, SWITCH_cd1, SWITCH_helicopter 
//
//==========================================================================================
//

global Map =
{
	Debug = 1,
	cd1Secured = false,
	elicoCalled = false,
	grate_flag_Destroyed = false,
	grate_cd2_Destroyed = false,
	grate_cd3_Destroyed = false,

	ShowMovers = false,
	lift1Position = 0, //to the 3rd floor
	lift2Position = 0, //shaft near axis spawn
	mongolfierPosition = 0, //airship on the 3rd floor
	Movers = { "MOVER_camionp1", "MOVER_as", "MOVER_mongolfier" },

	NavL = function(_this, x,y,z, x2,y2)
	{
		_this.AddAimRequest(Priority.High, "facing", Vec3(x,y,z));
		for(i=0; i<20; i+=1) {
			pos = _this.Bot.GetPosition();
			if(Abs(pos.x - x2) > 60 || Abs(pos.y - y2) > 60){ break; }
			sleep(0.5);
		}
	},

	Navigation =
	{
		l1 = {navigate=function(_this){ //238
			Map.NavL(_this, -0.2,0,0.8,  -4967.875, 237.950);
		}},
		l2 = {navigate=function(_this){ //203,204
			Map.NavL(_this, -0.2,0,0.8,  -4967.699, 687.045);
		}},
		l3 = {navigate=function(_this){ //549
			_this.AddAimRequest(Priority.High, "facing", Vec3(0.2,0,0.8));
			_this.Bot.HoldButton(BTN.BACKWARD, BTN.STRAFE_L, 2);
			sleep(3);
		}},
		l4 = {navigate=function(_this){ //161
			Map.NavL(_this, 0,0.2,0.8,  -5371.135, 1925.875);
		}},
		l5 = {navigate=function(_this){ //612
			Map.NavL(_this, 0,0.2,0.8,  -1336.151, -800.253);
		}},
		l6 = {navigate=function(_this){ //645
			Map.NavL(_this, 0,0.2,0.8,  -4475.482, 1925.875);
		}},
		l7 = {navigate=function(_this){ //712
			_this.AddAimRequest(Priority.High, "facing", Vector3(0.4,0,-0.9));
			_this.Bot.HoldButton(BTN.CROUCH, 5);
			for(i=0; i<100 && _this.Bot.GetPosition().z > -1190; i+=1){
				_this.Bot.PressButton(BTN.BACKWARD);
				yield();
			}
			_this.Bot.ReleaseButton(BTN.CROUCH);
			_this.Bot.HoldButton(BTN.FORWARD, 10);
			z1 = _this.Bot.GetPosition().z;
			for(i=0; i<60; i+=1){
				z = _this.Bot.GetPosition().z;
				if(z>z1){ break; }
				z1=z;
				yield();
			}
			_this.Bot.ReleaseButton(BTN.FORWARD);
			_this.AddAimRequest(Priority.High, "facing", Vector3(0.4,0,0.9));
			_this.Bot.HoldButton(BTN.BACKWARD, 10);
			for(i=0; i<15 && _this.Bot.GetPosition().z > -1880; i+=1){
				sleep(1);
			}
			_this.Bot.ReleaseButton(BTN.BACKWARD);
			_this.AddAimRequest(Priority.High, "facing", Vector3(-1,0,0));
			_this.Bot.HoldButton(BTN.FORWARD, 0.5);
			sleep(1);
		}},
		desk = {navigate=function(_this){ //255
			_this.AddAimRequest(Priority.High, "facing", Vec3(0,-0.2,0.8));
			sleep(0.1);
			_this.Bot.HoldButton(BTN.FORWARD, 1);
			for(i=0; i<9 && _this.Bot.GetPosition().z<-700; i+=1) {
				sleep(0.5);
			}
			_this.Bot.HoldButton(BTN.STRAFE_L, 7);
			for(i=0; i<14; i+=1) {
				z = _this.Bot.GetPosition().z;
				if(z>-600 || z<-800){ break; }
				sleep(0.5);
			}
			_this.Bot.ReleaseButton(BTN.STRAFE_L);
		}},
		lamp = {navigate=function(_this){ //300
			_this.AddAimRequest(Priority.High, "position", Vec3(580,-915,-2012));
			for(i=0; i<15; i+=1) {
				z = _this.Bot.GetPosition().z;
				if(z>-2040 || z<-2220){ break; }
				sleep(0.5);
			}
		}},
		fall_cd1 = {navigate=function(_this){ //714
			_this.Goto(_this.Bot.GetPosition());
			_this.AddAimRequest(Priority.High, "facing", Vector3(0,0.4,-0.9));
			_this.Bot.HoldButton(BTN.CROUCH, 4);
			for(i=0; i<100 && _this.Bot.GetPosition().z > -1195; i+=1){
				_this.Bot.PressButton(BTN.FORWARD);
				yield();
			}
			_this.Bot.ReleaseButton(BTN.CROUCH);
			sleep(1.5);
		}},
		jump = {navigate=function(_this){ //462
			for(i=0; i<3 && _this.Bot.GetPosition().x > -525; i+=1) {
				_this.Goto(Vec3(-508.935, -1060.115, -471.672));
				_this.AddAimRequest(Priority.High, "facing", Vec3(-0.4,0,0.5));
				_this.Bot.PressButton(BTN.JUMP);
				sleep(0.5);
				_this.Bot.ResetStuckTime();
				_this.Bot.HoldButton(BTN.FORWARD,0.5);
				sleep(0.5);
			}
		}},
		helicopter_cd = {navigate=function(_this){ //514
			if(_this.Bot.GetTeam()==TEAM.AXIS) {
				for(i=0; i<8 && !_this.Bot.HasEntityFlag(ENTFLAG.CARRYINGGOAL); i+=1){
					_this.AddAimRequest(Priority.High, "position", Vec3(-3129,620,-625));
					yield();
					_this.Bot.PressButton(BTN.USE);
					sleep(0.3);
				}
			}
			sleep(0.5);
		}},
		cable = {navigate=function(_this){ //499
			//does not work
			_this.Bot.PressButton(BTN.USE);
			sleep(5);
		}},
	},

	RideMovers =
	{
		lift1 =
		{
			movergoal = "MOVER_camionp1",
			rideposition = Vector3(0,0,0),
			startwp = "lift1_in",
			exitwp = "lift1_out",
			board = function(_this)
			{
				return Map.lift1Position == 1;
			},
			leave = function(_this)
			{
				return Map.lift1Position == 3;
			},
		},
		lift2 =
		{
			movergoal = "MOVER_as",
			rideposition = Vector3(10,0,0),
			startwp = "lift2_in",
			exitwp = "lift2_out",
			board = function(_this)
			{
				return Map.lift2Position == 1;
			},
			leave = function(_this)
			{
				return Map.lift2Position == 3;
			},
		},
		mongolfier =
		{
			movergoal = "MOVER_mongolfier",
			rideposition = Vector3(0,0,0),
			startwp = "mongolfier_in",
			exitwp = "mongolfier_out",
			board = function(_this)
			{
				return Map.mongolfierPosition == 1;
			},
			leave = function(_this)
			{
				return Map.mongolfierPosition == 2;
			},
		},
	},


	camionp1_goto = function(trigger)
	{
		if(ToVector(trigger.Action).z > 0){
			Map.lift1Position = 2;
			//Util.MapDebugPrint("lift1 moving up", true);
			sleep(4.5);
			Map.lift1Position = 3;
			//Util.MapDebugPrint("lift1 is up", true);
		}else{
			Map.lift1Position = 4;
			//Util.MapDebugPrint("lift1 moving down", true);
			sleep(4.5);
			Map.lift1Position = 1;
			//Util.MapDebugPrint("lift1 is down", true);
		}
	},

	as_goto = function(trigger)
	{
		if(ToVector(trigger.Action).z > 0){
			Map.lift2Position = 2;
			//Util.MapDebugPrint("lift2 moving up", true);
			sleep(5.5);
			Map.lift2Position = 3;
			//Util.MapDebugPrint("lift2 is up", true);
		}else{
			Map.lift2Position = 4;
			//Util.MapDebugPrint("lift2 moving down", true);
			sleep(5.5);
			Map.lift2Position = 1;
			//Util.MapDebugPrint("lift2 is down", true);
		}
	},

	cdbas_goto = function(trigger)
	{
		if(!Map.cd1Secured) {
			if(ToVector(trigger.Action).y > 0){
				Wp.SetWaypointFlag("cd1", "closed", false);
				SetAvailableMapGoals(TEAM.AXIS, true, "FLAG_cd1");
				Util.LimitToTeam(TEAM.ALLIES, "SWITCH_cd1");
				Util.MapDebugPrint("cd1 opened");
			}else{
				SetAvailableMapGoals(TEAM.AXIS, false, "FLAG_cd1");
				Wp.SetWaypointFlag("cd1", "closed", true);
				Util.LimitToTeam(TEAM.AXIS, "SWITCH_cd1");
				Util.MapDebugPrint("cd1 closed");
			}
		}
	},

	elico_goto = function(trigger)
	{
		if(!Map.elicoCalled){
			Map.elicoCalled = true;
			SetAvailableMapGoals(TEAM.AXIS, false, "SWITCH_helicopter");
			Util.MapDebugPrint("helicopter used to take cd4");
		}
	},


	door_Destroyed = function( trigger )
	{
		SetAvailableMapGoals(TEAM.AXIS, true, "FLAG_cd3");
		Util.MapDebugPrint("door_Destroyed");
	},

	cd_Taken = function( trigger )
	{
		Util.MapDebugPrint("cd_Taken");
	},

	cd1_Returned = function( trigger )
	{
		Util.MapDebugPrint("cd1_Returned");
	},
	cd2_Returned = function( trigger )
	{
		Util.MapDebugPrint("cd2_Returned");
	},
	cd3_Returned = function( trigger )
	{
		Util.MapDebugPrint("cd3_Returned");
	},
	cd4_Returned = function( trigger )
	{
		Util.MapDebugPrint("cd4_Returned");
	},

	cd1_Secured = function( trigger )
	{
		Map.cd1Secured = true;
		SetAvailableMapGoals(TEAM.ALLIES, false, ".*MG42_tower");
		Util.DisableGoal("SWITCH_cd1");
		Util.MapDebugPrint("cd1_Secured");
	},
	cd2_Secured = function( trigger )
	{
		Util.MapDebugPrint("cd2_Secured");
	},
	cd3_Secured = function( trigger )
	{
		Util.MapDebugPrint("cd3_Secured");
	},
	cd4_Secured = function( trigger )
	{
		SetAvailableMapGoals(TEAM.AXIS, false, "SWITCH_helicopter");
		Util.MapDebugPrint("cd4_Secured");
	},


	SetFlag = function(axis)
	{
		SetAvailableMapGoals(TEAM.AXIS, axis, ".*Command_Post.*");
		SetAvailableMapGoals(TEAM.ALLIES, !axis, ".*Command_Post.*");
		SetAvailableMapGoals(TEAM.AXIS, axis, ".*MG42_pc");
		SetAvailableMapGoals(TEAM.ALLIES, !axis, ".*MG42_pc");
		SetAvailableMapGoals(TEAM.AXIS, !axis, ".*MG42_stairs");
	},

	flag_Axis_Captured = function( trigger )
	{
		Map.SetFlag(true);
		Util.MapDebugPrint("flag_Axis_Captured");
	},

	flag_Allies_Captured = function( trigger )
	{
		Map.SetFlag(false);
		Util.MapDebugPrint("flag_Allies_Captured");
	},


	grate_axis_spawnExploded = function(trigger)
	{
		//Util.EnableGoal( "" );
		SetAvailableMapGoals(TEAM.AXIS, false, "DYNAMITE_axis_spawn");
		if(!Map.grate_flag_Destroyed){
			SetAvailableMapGoals(TEAM.AXIS, true, "DYNAMITE_flag");
		}
		if(!Map.grate_cd2_Destroyed){
			SetAvailableMapGoals(TEAM.AXIS, true, "DYNAMITE_cd2");
		}
		if(!Map.grate_cd3_Destroyed){
			SetAvailableMapGoals(TEAM.AXIS, true, "DYNAMITE_cd3");
		}
		Util.MapDebugPrint("grate_axis_spawnExploded");
	},
	grate_flagExploded = function(trigger)
	{
		Map.grate_flag_Destroyed = true;
		SetAvailableMapGoals(TEAM.AXIS, false, "DYNAMITE_flag");
		//Util.EnableGoal( "" );
		Util.MapDebugPrint("grate_flagExploded");
	},
	grate_cd2Exploded = function(trigger)
	{
		Map.grate_cd2_Destroyed = true;
		SetAvailableMapGoals(TEAM.AXIS, false, "DYNAMITE_cd2");
		//Util.EnableGoal( "" );
		Util.MapDebugPrint("grate_cd2Exploded");
	},
	grate_cd3Exploded = function(trigger)
	{
		Map.grate_cd3_Destroyed = true;
		SetAvailableMapGoals(TEAM.AXIS, false, "DYNAMITE_cd3");
		SetAvailableMapGoals(TEAM.AXIS, true, "FLAG_cd3");
		//Util.EnableGoal( "" );
		Util.MapDebugPrint("grate_cd3Exploded");
	},

	WatchMongolfier = function()
	{
		entity = GetGoal("MOVER_mongolfier").GetEntity();
		start = Vec3(-3750, -29, 1307);
		end = Vec3(-4325, 1731, 1240);
		for(;;)
		{
			if ( DistanceBetween( entity, start ) < 250)
			{
				Map.mongolfierPosition = 1;
				//Util.MapDebugPrint("mongolfier start", true);
			}
			else if ( DistanceBetween( entity, end ) < 300)
			{
				Map.mongolfierPosition = 2;
				//Util.MapDebugPrint("mongolfier end", true);
			}
			else
			{
				Map.mongolfierPosition = 0;
			}
			sleep(1);
		}
	},
};

global OnMapLoad = function()
{
	OnTrigger( "Allies capture the Forward Bunker!", Map.flag_Allies_Captured );
	OnTrigger( "Axis reclaim the Forward Bunker!", Map.flag_Axis_Captured );
	OnTrigger( "porte de minus (2eme etage) Destroyed.", Map.door_Destroyed );
	OnTrigger( "Axis have stolen (null)!", Map.cd_Taken );
	OnTrigger( "Flag returned cd1!", Map.cd1_Returned );
	OnTrigger( "Flag returned cd2!", Map.cd2_Returned );
	OnTrigger( "Flag returned cd3!", Map.cd3_Returned );
	OnTrigger( "Flag returned cd4!", Map.cd4_Returned );
	OnTrigger( "Les axes on le cd 1", Map.cd1_Secured );
	OnTrigger( "Les axes on le cd 2", Map.cd2_Secured );
	OnTrigger( "Les axes on le cd 3", Map.cd3_Secured );
	OnTrigger( "Les axes on le cd 4", Map.cd4_Secured );
	OnTrigger("cdbas_goto", Map.cdbas_goto);
	OnTrigger("elico_goto", Map.elico_goto);
	OnTrigger("camionp1_goto", Map.camionp1_goto);
	OnTrigger("as_goto", Map.as_goto);
	OnTrigger("GRENADE_grate_axis_spawn Exploded.", Map.grate_axis_spawnExploded);
	OnTrigger("GRENADE_grate_flag Exploded.", Map.grate_flagExploded);
	OnTrigger("GRENADE_grate_cd2 Exploded.", Map.grate_cd2Exploded);
	OnTrigger("GRENADE_grate_cd3 Exploded.", Map.grate_cd3Exploded);

	Util.DisableGoal( ".*", true );
	Util.EnableGoal("AMMOCAB.*");
	Util.EnableGoal("HEALTHCAB.*");
	Util.EnableGoal("CHECKPOINT_roadbunker");

	SetAvailableMapGoals(TEAM.AXIS, true, "FLAG_cd[24]");
	SetAvailableMapGoals(TEAM.AXIS, true, "CAPPOINT_pc");
	SetAvailableMapGoals(TEAM.AXIS, true, "DYNAMITE_axis_spawn");
	SetAvailableMapGoals(TEAM.AXIS, true, "PLANT_porte_de_minus_2eme_etage");
	SetAvailableMapGoals(TEAM.AXIS, true, "SWITCH_cd1");
	SetAvailableMapGoals(TEAM.AXIS, true, "SWITCH_helicopter");

	SetAvailableMapGoals(TEAM.ALLIES, true, ".*MG42_tower");

	SetGoalPriority( "FLAG_.*", 0.6);
	SetGoalPriority( "SWITCH_cd1", 0.75);

	foreach (goal in { ".*MG42.*", ".*Command_Post.*", "SWITCH_cd1" }){
		Util.SetMaxUsers(1, goal);
	}
	Util.SetMaxUsersInProgress(5, "CHECKPOINT_roadbunker");

	Wp.SetWaypointFlag("cd1", "closed", true);

	thread(Map.WatchMongolfier);

	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};
