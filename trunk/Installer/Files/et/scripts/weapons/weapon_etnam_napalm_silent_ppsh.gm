// cs: TODO: handle mod version with next release
if ( GetModName() == "silEnT" )
{
	//////////////////////////////////////////////////////////////////////////
	// Overall weapon properties.
	this.Name = "PPSH";
	WEAPON.PPSH = 101;
	this.WeaponId = WEAPON.PPSH;

	//////////////////////////////////////////////////////////////////////////
	// Set some weapon properties that affect some internal logic.
	this.PrimaryFire.WeaponType = "instant";
	this.PrimaryFire.ProjectileSpeed = 1000;
	this.PrimaryFire.RequiresAmmo = true;
	this.PrimaryFire.WaterProof = false;

	this.PrimaryFire.MaxAimError = Vector2(0, 0);
	this.PrimaryFire.AimOffset = Vector3(0, 0, 0);

	this.PrimaryFire.DefaultDesirability = 0.7;
	this.PrimaryFire.SetDesirabilityRange(0, 2100 , 0.7);

	this.PrimaryFire.LowAmmoThreshold = 1;
	this.PrimaryFire.LowAmmoPriority = 0.8;
}
else
{
	//#M#006#
	//////////////////////////////////////////////////////////////////////////
	// The new weapon instance is passed to this function as the 'this'
	// Properties can be set like this.Property = x, or the this prefix can be left off.
	//////////////////////////////////////////////////////////////////////////

	WEAPON.NAPALM_MARKER = 101; 		// Defined into g_etbot_interface.cpp

	//////////////////////////////////////////////////////////////////////////
	// Overall weapon properties.
	this.Name = "Napalm Marker";
	this.WeaponId = WEAPON.NAPALM_MARKER;
	this.PrimaryFire.AmmoType = WEAPON.NAPALM_MARKER;

	this.MinUseTime = 0.0;

	//////////////////////////////////////////////////////////////////////////
	// Set some weapon properties that affect some internal logic.
	this.PrimaryFire.WeaponType = "grenade";
	this.PrimaryFire.ProjectileSpeed = 1000;
	this.PrimaryFire.RequiresAmmo = true;
	this.PrimaryFire.WaterProof = false;
	this.PrimaryFire.SplashDamage = false;
	this.PrimaryFire.InheritsVelocity = false;
	this.PrimaryFire.ProjectileGravity = 1.0;
	this.PrimaryFire.NeedsInRange = true;
	this.PrimaryFire.MinRange = 0.0;
	this.PrimaryFire.MaxRange = 2600.0;
	this.PrimaryFire.FireOnRelease = true;
	this.PrimaryFire.NeedsCharged = true;

	this.PrimaryFire.MaxAimError = Vector2(0, 0);
	this.PrimaryFire.AimOffset = Vector3(0, 0, 0);

	this.PrimaryFire.SetTargetBias(CLASS.VEHICLE_HVY, 1);
	this.PrimaryFire.DefaultDesirability = 0.0;

	this.PrimaryFire.SetDesirabilityRange(500, 1000, 0.8);

	this.PrimaryFire.RequiresTargetOutside = true;
	this.PrimaryFire.RequiresShooterOutside = false;
	//-------
}