/********************************************************
Just slightly edited the original Goldrush waypoints and script.
Credits go to the maker of the original Goldrush files.
Editors of the Goldrush-GA release are =VOC= Naerling and crapshoot.
********************************************************/

//cs: todo: upgrade escort and mount to 0.8 goals
global Map =
{
	MountVehicle =
	{
		LimitBots = 2,
	},
	EscortVehicle =
	{
		Truck =
		{
			EscortVehicleGoalName = "MOVER_truck",
			LimitBots = 2,
			Offset =
			{
				Vector3(0,-40,0),
			},
		},
	},

	Debug = false,

	Ammo_Cabinet_north_ammocabinet = "AMMOCAB_north_ammocabinet",
	Ammo_Cabinet_south_ammocabinet = "AMMOCAB_south_ammocabinet",
	Health_Cabinet_north_healthcabinet = "HEALTHCAB_north_healthcabinet",
	Health_Cabinet_south_healthcabinet = "HEALTHCAB_south_healthcabinet",
	Flag_gold_crate = "FLAG_gold_crate",
	Cappoint_Gold_Dropoff = "CAPPOINT_Gold_Dropoff",
	Build_Command_Post = "BUILD_Command_Post",
	Build_Tank = "BUILD_Tank",
	Build_Tank_Barrier_1 = "BUILD_Tank_Barrier_1",
	Build_Tank_Barrier_2 = "BUILD_Tank_Barrier_2",
	Build_Truck = "BUILD_Truck",
	Build_Truck_Barrier_1 = "BUILD_Truck_Barrier_1",
	Build_Truck_Barrier_2 = "BUILD_Truck_Barrier_2",
	Plant_Bank_Wall_Breach = "PLANT_Bank_Wall_Breach",
	Plant_Command_Post = "PLANT_Command_Post",
	Plant_Tank_Barrier_1 = "PLANT_Tank_Barrier_1",
	Plant_Tank_Barrier_2 = "PLANT_Tank_Barrier_2",
	Plant_Truck_Barrier_1 = "PLANT_Truck_Barrier_1",
	Plant_Truck_Barrier_2 = "PLANT_Truck_Barrier_2",
	Mount_mg42_allied = "MOUNTMG42_mg42_allied",
	Mount_mg42_bank = "MOUNTMG42_mg42_bank",
	Mount_mg42_bridge = "MOUNTMG42_mg42_bridge",
	Mount_mg42_secret = "MOUNTMG42_mg42_secret",
	Repair_mg42_allied = "REPAIRMG42_mg42_allied",
	Repair_mg42_bank = "REPAIRMG42_mg42_bank",
	Repair_mg42_bridge = "REPAIRMG42_mg42_bridge",
	Repair_mg42_secret = "REPAIRMG42_mg42_secret",
	Snipe_246 = "SNIPE_246",
	Snipe_349 = "SNIPE_349",
	Snipe_362 = "SNIPE_362",
	Snipe_825 = "SNIPE_825",
	Snipe_826 = "SNIPE_826",
	Snipe_829 = "SNIPE_829",
	Snipe_830 = "SNIPE_830",
	Snipe_870 = "SNIPE_870",
	Mover_tank = "MOVER_tank",
	Mover_truck = "MOVER_truck",
	Plant_Mine_393 = "PLANTMINE_393",
	Plant_Mine_823 = "PLANTMINE_823",
	Plant_Mine_824 = "PLANTMINE_824",
	Plant_Mine_849 = "PLANTMINE_849",
	Plant_Mine_928 = "PLANTMINE_928",
	Plant_Mine_96 = "PLANTMINE_96",
	Plant_Mine_Depot_6 = "PLANTMINE_Depot_6",
	Plant_Mine_Truck_Barrier1_3 = "PLANTMINE_Truck_Barrier1_3",
	Plant_Mine_depotgate2 = "PLANTMINE_depotgate2",

	start_of_map = true,
	Escorting = false,
	TruckLoaded = false,

	//set status' for conditionals
	barrierone = 0, //not constructed
	barriertwo = 0,
	barrierthree = 0,
	barrierfour = 0,

	//vehicle positions
	near_defense_one = false,
	near_defense_two = false,
	near_defense_three = false,
	near_defense_four = false,

	//dyno counters
	bOneDyno = 0,
	bTwoDyno = 0,
	bThreeDyno = 0,
	bFourDyno = 0,

	Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Command_Post_Built" );
	},

	Tank_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		// Allied goals
		if ( Map.start_of_map )
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Command_Post );
			Map.start_of_map = false;
		}

		Util.MapDebugPrint( "Tank_Built" );
	},

	Tank_Barrier_1_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.barrierone = 1;

		if ( Map.near_defense_one )
			{ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Tank ); }

		Util.MapDebugPrint( "Tank_Barrier_1_Built" );
	},

	Tank_Barrier_2_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.barriertwo = 1;

		if ( Map.near_defense_two )
			{ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Tank ); }

		Util.MapDebugPrint( "Tank_Barrier_2_Built" );
	},

	Truck_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Truck_Built" );
	},

	Truck_Barrier_1_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.barrierthree = 1;

		if ( Map.near_defense_three )
			{ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Truck ); }

		Util.MapDebugPrint( "Truck_Barrier_1_Built" );
	},

	Truck_Barrier_2_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.barrierfour = 1;

		if ( Map.near_defense_four )
			{ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Truck ); }

		Util.MapDebugPrint( "Truck_Barrier_2_Built" );
	},

	Command_Post_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Command_Post_Destroyed" );
	},

	Tank_Barrier_1_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.barrierone = 0;

		//reset the dyno counter
		Map.bOneDyno = 0;

		Util.MapDebugPrint( "Tank_Barrier_1_Destroyed" );
	},

	Tank_Barrier_2_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.barriertwo = 0;

		//reset the dyno counter
		Map.bTwoDyno = 0;

		Util.MapDebugPrint( "Tank_Barrier_2_Destroyed" );
	},

	Truck_Barrier_1_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.barrierthree = 0;

		//reset the dyno counter
		Map.bThreeDyno = 0;

		Util.MapDebugPrint( "Truck_Barrier_1_Destroyed" );
	},

	Truck_Barrier_2_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.barrierfour = 0;

		//reset the dyno counter
		Map.bFourDyno = 0;

		Util.MapDebugPrint( "Truck_Barrier_2_Destroyed" );
	},

	gold_crate_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }
		Wp.SetWaypointFlag("rail1", "closed", false);
		Wp.SetWaypointFlag("rail2", "closed", false);
		Wp.SetWaypointFlag("rail3", "closed", false);

		Util.MapDebugPrint( "gold_crate_Taken" );
	},

	gold_crate_Returned = function( trigger )
	{
		if ( TestMap )
			{ return; }
		Wp.SetWaypointFlag("rail1", "closed", true);
		Wp.SetWaypointFlag("rail2", "closed", true);
		Wp.SetWaypointFlag("rail3", "closed", true);

		Util.MapDebugPrint( "gold_crate_Returned" );
	},

	Gold_Dropoff_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Gold_Dropoff_Captured" );
	},

	allies_steal_tank = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.OnTriggerPosition( Map.Mover_tank, "tankmarker1", 200.0,
			Map.tank_at_barrier1 );

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Depot_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Tank_Barrier1_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Mount_mg42_secret );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Repair_mg42_secret );

		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Depot_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Tank_Barrier1_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Command_Post );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Plant_Command_Post );

		Util.MapDebugPrint( "allies_steal_tank" );
	},

	tank_past_barrier1 = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.near_defense_one = false;

		Util.OnTriggerPosition( Map.Mover_tank, "At Bridge MG", 200.0,
			Map.tank_at_bridge_mg );

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Ammo_Cabinet_north_ammocabinet );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Tank_Barrier1_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Tank_Barrier2_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_newbarrier2_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Tank_Barrier_2 );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Command_Post );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Command_Post );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Tank_Barrier_1 );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Health_Cabinet_north_healthcabinet );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Mount_mg42_bridge );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Repair_mg42_bridge );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_mg42_secret );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_mg42_secret );

		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Ammo_Cabinet_south_ammocabinet );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Tank_Barrier1_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Tank_Barrier2_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Tank_Barrier_1 );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Tank_Barrier_2 );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Health_Cabinet_south_healthcabinet );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_mg42_bridge );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Repair_mg42_bridge );

		//make sure the tank repair goal is active
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Tank );

		Util.MapDebugPrint( "tank_past_barrier1" );
	},

	tank_at_bridge_mg = function()
	{
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Tank_Barrier_1 );

		Util.OnTriggerPosition( Map.Mover_tank, "tankmarker2", 200.0,
			Map.tank_at_barrier2 );

		Util.MapDebugPrint("tank_at_bridge_mg");
	},

	tank_past_barrier2 = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.near_defense_two = false;

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Tank_Barrier2_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_newbarrier2_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Bank_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Tank_Barrier_2 );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_mg42_bridge );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Mount_mg42_bank );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_mg42_bridge );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Repair_mg42_bank );

		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Tank_Barrier2_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Bank_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Bank_8" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Bank_9" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Tank_Barrier_2 );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_mg42_bridge );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_mg42_bank );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_mg42_bridge );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Repair_mg42_bank );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Truck_Barrier_1 );

		//make sure the tank repair goal is active
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Tank );

		// only use the back stairs for the repair
		Util.DisableGoal("ROUTE_repair_route_bridge.*");

		Util.MapDebugPrint( "tank_past_barrier2" );
	},

	blow_doors = function( trigger )
	{
		if ( TestMap )
			{ return; }

		sleep( 2 );

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Tank );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Truck );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Flag_gold_crate );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Cappoint_Gold_Dropoff );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mover_tank );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Bank_Wall_Breach );

		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_mg42_bridge );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_mg42_bank );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_mg42_bridge );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Repair_mg42_bank );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Bank_8" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Bank_9" );

		Wp.SetWaypointFlag("closeddoor1", "closed", false);
		Wp.SetWaypointFlag("closeddoor2", "closed", false);
		Wp.SetWaypointFlag("closeddoor3", "closed", false);

		Util.MapDebugPrint( "blow_doors" );
	},

	allies_taking_gold = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.OnTriggerPosition( Map.Mover_truck, "truckmarker1", 200.0,
			Map.truck_at_barrier1 );

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Bank_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Truck_Barrier1_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Truck_Barrier_1 );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Truck_Barrier_2 );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_mg42_bank );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Mount_mg42_allied );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_mg42_bank );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Repair_mg42_allied );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Mover_truck );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Bank_Wall_Breach );

		Map.TruckLoaded = true;

		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Bank_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Truck_Barrier1_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_mg42_bank );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_mg42_allied );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_mg42_bank );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Repair_mg42_allied );

		Util.MapDebugPrint( "allies_taking_gold" );
	},

	truck_past_barrier1 = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.near_defense_three = false;

		Util.OnTriggerPosition( Map.Mover_truck, "truckmarker2", 200.0,
			Map.tank_at_barrier2 );

		foreach ( id and bot in BotTable )
		{
			if ( bot.GetTeam() == TEAM.ALLIES )
				{ bot.ChangeSpawnPoint( 3 ); }
		}

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Truck_Barrier1_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Truck_Barrier2_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Truck_Barrier_1 );

		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Truck_Barrier1_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Truck_Barrier2_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Truck_Barrier_1 );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Truck_Barrier_2 );

		//make sure the truck repair goal is active
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Truck );

		Util.MapDebugPrint( "truck_past_barrier1" );
	},

	truck_past_barrier2 = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.near_defense_four = false;

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Truck_Barrier2_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Escape_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_mg42_allied );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_mg42_allied );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Truck_Barrier_2 );

		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Truck_Barrier2_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Truck_Escape_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_mg42_allied );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_mg42_allied );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Truck_Barrier_2 );

		//make sure the truck repair goal is active
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Truck );

		Util.MapDebugPrint( "truck_past_barrier2" );
	},

	Tank_Destroyed = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.SetPositionGoal( Map.Build_Tank, Map.Mover_tank );

		Util.MapDebugPrint( "Tank_Destroyed" );
	},

	Truck_Destroyed = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.SetPositionGoal( Map.Build_Truck, Map.Mover_truck );

		Util.MapDebugPrint( "Truck_Destroyed" );
	},

	tank_at_barrier1 = function()
	{
		if ( TestMap )
			{ return; }

		Map.near_defense_one = true;

		//technically shouldn't need the 'else', but just to be sure
		if ( Map.barrierone > 0 && Map.bOneDyno < 1)
			{ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Tank ); }
		else
			{ SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Tank ); }

		Util.MapDebugPrint("tank_at_barrier1");
	},

	tank_at_barrier2 = function()
	{
		if ( TestMap )
			{ return; }

		Map.near_defense_two = true;

		if ( Map.barriertwo > 0 && Map.bTwoDyno < 1 )
			{ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Tank ); }
		else
			{ SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Tank ); }

		// enable the repair routes
		Util.EnableGoal("ROUTE_repair_route.*");

		Util.MapDebugPrint("tank_at_barrier2");
	},

	truck_at_barrier1 = function()
	{
		if ( TestMap )
			{ return; }

		Map.near_defense_three = true;

		if ( Map.barrierthree > 0 && Map.bThreeDyno < 1 )
			{ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Truck ); }
		else
			{ SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Truck ); }

		Util.MapDebugPrint("truck_at_barrier1");
	},

	truck_at_barrier2 = function()
	{
		if ( TestMap )
			{ return; }

		Map.near_defense_four = true;

		if ( Map.barrierfour > 0 && Map.bFourDyno < 1 )
			{ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Truck ); }
		else
			{ SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Truck ); }

		Util.MapDebugPrint("truck_at_barrier2");
	},

	planted_at_Tank_Barrier_1 = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		//got a dyno down, build the tank if needed
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Tank );

		Map.bOneDyno += 1;

		Util.MapDebugPrint("planted_at_Tank_Barrier_1");
	},

	defused_at_Tank_Barrier_1 = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.bOneDyno -= 1;

		//focus back on planting dyno
		if ( Map.bOneDyno < 1 && Map.near_defense_one )
		{
			SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Tank );
		}

		Util.MapDebugPrint("defused_at_Tank_Barrier_1");
	},

	planted_at_Tank_Barrier_2 = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.bTwoDyno += 1;

		if ( Map.near_defense_two )
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Tank );
		}

		Util.MapDebugPrint("planted_at_Tank_Barrier_2");
	},

	defused_at_Tank_Barrier_2 = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.bTwoDyno -= 1;

		if ( Map.bTwoDyno < 1 && Map.near_defense_two )
		{
			SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Tank );
		}

		Util.MapDebugPrint("defused_at_Tank_Barrier_2");
	},

	planted_at_Truck_Barrier_1 = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.bThreeDyno += 1;

		if ( Map.near_defense_three )
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Truck );
		}

		Util.MapDebugPrint("planted_at_Truck_Barrier_1");
	},

	defused_at_Truck_Barrier_1 = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.bThreeDyno -= 1;

		if ( Map.bThreeDyno < 1 && Map.near_defense_three )
		{
			SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Truck );
		}

		Util.MapDebugPrint("defused_at_Truck_Barrier_1");
	},

	planted_at_Truck_Barrier_2 = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.bFourDyno += 1;

		if ( Map.near_defense_four )
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Truck );
		}

		Util.MapDebugPrint("planted_at_Truck_Barrier_2");
	},

	defused_at_Truck_Barrier_2 = function ( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.bFourDyno -= 1;

		if ( Map.bFourDyno < 1 && Map.near_defense_four )
		{
			SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Truck );
		}

		Util.MapDebugPrint("defused_at_Truck_Barrier_2");
	},

	Bank_Wall_Breach_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }
			Wp.SetWaypointFlag("wallbreach", "closed", false);

		Util.MapDebugPrint( "Bank_Wall_Breach_Destroyed" );
	},

	Bankdoor1 = function(trigger)
	{
		vel = ToVector(trigger.Action);

		if (vel.y > 0)
		{
			Wp.SetWaypointFlag("onewaydoor1", "door", false);
			Wp.SetWaypointFlag("onewaydoor2", "door", false);
			Util.MapDebugPrint("BankDoor1 opening");
		}
		else
		{
			Wp.SetWaypointFlag("onewaydoor1", "door", true);
			Wp.SetWaypointFlag("onewaydoor2", "door", true);
			Util.MapDebugPrint("BankDoor1 closing");
		}
	},

	Bankdoor2 = function(trigger)
	{
		vel = ToVector(trigger.Action);

		if (vel.y > 0)
		{
			Wp.SetWaypointFlag("onewaydoor3", "door", true);
			Wp.SetWaypointFlag("onewaydoor4", "door", true);
			Util.MapDebugPrint("BankDoor2 closing");
		}
		else
		{
			Wp.SetWaypointFlag("onewaydoor3", "door", false);
			Wp.SetWaypointFlag("onewaydoor4", "door", false);
			Util.MapDebugPrint("BankDoor2 opening");
		}
	},

	Bankdoor3 = function(trigger)
	{
		vel = ToVector(trigger.Action);

		if (vel.y > 0)
		{
			Wp.SetWaypointFlag("onewaydoor5", "door", false);
			Wp.SetWaypointFlag("onewaydoor6", "door", false);
			Util.MapDebugPrint("BankDoor3 opening");
		}
		else
		{
			Wp.SetWaypointFlag("onewaydoor5", "door", true);
			Wp.SetWaypointFlag("onewaydoor6", "door", true);
			Util.MapDebugPrint("BankDoor3 closing");
		}
	},
};

global OnMapLoad = function()
{
	Util.SetGoalOffset( 0, 160, 0, Map.Plant_Tank_Barrier_1 );
	Util.SetGoalOffset( 0, 174, 0, Map.Plant_Tank_Barrier_2 );

	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	OnTrigger( "Allied Command Post constructed. Charge speed increased!", Map.Command_Post_Built );
	OnTrigger( "Axis Command Post constructed. Charge speed increased!", Map.Command_Post_Built );
	OnTrigger( "The Tank has been repaired!", Map.Tank_Built );
	OnTrigger( "Tank Barrier #1 has been constructed.", Map.Tank_Barrier_1_Built );
	OnTrigger( "Tank Barrier #2 has been constructed.", Map.Tank_Barrier_2_Built );
	OnTrigger( "The Truck has been repaired!", Map.Truck_Built );
	OnTrigger( "Truck Barrier #1 has been constructed.", Map.Truck_Barrier_1_Built );
	OnTrigger( "Truck Barrier #2 has been constructed.", Map.Truck_Barrier_2_Built );
	OnTrigger( "Allied team has destroyed the Axis Command Post!", Map.Command_Post_Destroyed );
	OnTrigger( "Axis team has destroyed the Allied Command Post!", Map.Command_Post_Destroyed );
	OnTrigger( "The Tank has been damaged!", Map.Tank_Destroyed );
	OnTrigger( "Tank Barrier #1 has been destroyed.", Map.Tank_Barrier_1_Destroyed );
	OnTrigger( "Tank Barrier #2 has been destroyed.", Map.Tank_Barrier_2_Destroyed );
	OnTrigger( "The Truck has been damaged!", Map.Truck_Destroyed );
	OnTrigger( "Truck Barrier #1 has been destroyed.", Map.Truck_Barrier_1_Destroyed );
	OnTrigger( "Truck Barrier #2 has been destroyed.", Map.Truck_Barrier_2_Destroyed );
	OnTrigger( "goldrush_allies_gold1_taken", Map.gold_crate_Taken );
	OnTrigger( "goldrush_allies_gold2_taken", Map.gold_crate_Taken );
	OnTrigger( "goldrush_allies_gold1_returned", Map.gold_crate_Returned );
	OnTrigger( "goldrush_allies_gold2_returned", Map.gold_crate_Returned );
	OnTrigger( "Allied team has secured the first Gold Crate!", Map.Gold_Dropoff_Captured );
	OnTrigger( "Allied team has secured the second Gold Crate!", Map.Gold_Dropoff_Captured );
	OnTrigger( "Allied team has stolen the Tank!", Map.allies_steal_tank );
	OnTrigger( "Allied team is escaping with the Gold Crates!", Map.allies_taking_gold );
	OnTrigger( "goldrush_allies_tank_barrier1", Map.tank_past_barrier1 );
	OnTrigger( "goldrush_allies_tank_barrier2", Map.tank_past_barrier2 );
	OnTrigger( "goldrush_allies_truck_barrier1", Map.truck_past_barrier1 );
	OnTrigger( "goldrush_allies_truck_barrier2", Map.truck_past_barrier2 );
	OnTrigger( "Allied team has destroyed the Bank Doors!", Map.blow_doors );
	OnTrigger( "Planted at Tank Barrier #1.", Map.planted_at_Tank_Barrier_1 );
	OnTrigger( "Defused at Tank Barrier #1.", Map.defused_at_Tank_Barrier_1 );
	OnTrigger( "Planted at Tank Barrier #2.", Map.planted_at_Tank_Barrier_2 );
	OnTrigger( "Defused at Tank Barrier #2.", Map.defused_at_Tank_Barrier_2 );
	OnTrigger( "Planted at Truck Barrier #1.", Map.planted_at_Truck_Barrier_1 );
	OnTrigger( "Defused at Truck Barrier #1.", Map.defused_at_Truck_Barrier_1 );
	OnTrigger( "Planted at Truck Barrier #2.", Map.planted_at_Truck_Barrier_2 );
	OnTrigger( "Defused at Truck Barrier #2.", Map.defused_at_Truck_Barrier_2 );
	OnTrigger( "Allied team has destroyed the bank wall breach!", Map.Bank_Wall_Breach_Destroyed );
	OnTrigger( "bankdoorfloor2_start", Map.Bankdoor1 );
	OnTrigger( "bankdoorfloor2b_start", Map.Bankdoor2 );
	OnTrigger( "bankdoorfloor1a_start", Map.Bankdoor3 );

	// Adjust tank goal for rebuild
	Util.SetPositionGoal( Map.Build_Tank, Map.Mover_tank );
	Util.SetPositionGoal( Map.Build_Truck, Map.Mover_truck ); //truck too

	// Max users per goal
	Util.SetMaxUsers( 1, "ATTACK_Depot_.*" );
	Util.SetMaxUsers( 1, "ATTACK_Tank_Barrier1_.*" );
	Util.SetMaxUsers( 1, "ATTACK_Tank_Barrier2_.*" );
	Util.SetMaxUsers( 1, "ATTACK_Truck_Barrier1_.*" );
	Util.SetMaxUsers( 1, "ATTACK_Truck_Barrier2_.*" );
	Util.SetMaxUsers( 1, "ATTACK_Escape_.*" );
	Util.SetMaxUsers( 1, "DEFEND_Depot_.*" );
	Util.SetMaxUsers( 1, "DEFEND_Tank_Barrier1_.*" );
	Util.SetMaxUsers( 1, "DEFEND_Tank_Barrier2_.*" );
	Util.SetMaxUsers( 1, "DEFEND_Truck_Barrier1_.*" );
	Util.SetMaxUsers( 1, "DEFEND_Truck_Barrier2_.*" );
	Util.SetMaxUsers( 1, "DEFEND_Escape_.*" );
	Util.SetMaxUsers( 1, "MOUNTMG42_.*" );

	SetMapGoalProperties( "ATTACK_.*", {mincamptime=10, maxcamptime=30});
	SetMapGoalProperties( "DEFEND_.*", {mincamptime=60, maxcamptime=120});
	SetMapGoalProperties( "MOUNTMG42_.*", {mincamptime=60, maxcamptime=120});
	SetMapGoalProperties( "MOBILEMG42_.*", {mincamptime=120, maxcamptime=120});
	SetMapGoalProperties( "SNIPE_.*", {mincamptime=120, maxcamptime=120});

	SetGoalPriority( "MOUNTMG42_.*", 0.0, 0, CLASS.MEDIC );
	SetGoalPriority( "MOUNTMG42_.*", 0.0, 0, CLASS.ENGINEER );

	ETUtil.SetCabinets();

	// Allied goals
	SetGoalPriority( Map.Flag_gold_crate, 0.92, TEAM.ALLIES );
	SetGoalPriority( Map.Cappoint_Gold_Dropoff, 0.92, TEAM.ALLIES );
	SetGoalPriority( Map.Build_Tank, 0.91, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Command_Post, 0.0, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Tank_Barrier_1, 0.84, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Tank_Barrier_2, 0.83, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Truck_Barrier_1, 0.82, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Truck_Barrier_2, 0.81, TEAM.ALLIES, CLASS.ENGINEER );

	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Ammo_Cabinet_south_ammocabinet );
	SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Depot_.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Health_Cabinet_south_healthcabinet );
//~	SetAvailableMapGoals( TEAM.ALLIES, false, ".*ARTILLERY.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Command_Post );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Truck );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Truck_Barrier_1 );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Truck_Barrier_2 );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Flag_gold_crate );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Cappoint_Gold_Dropoff );

	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_mg42_bridge );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_mg42_bank );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_mg42_allied );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_mg42_bridge );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_mg42_bank );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_mg42_allied );
	SetAvailableMapGoals( TEAM.ALLIES, false, "SNIPE.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, "PLANTMINE.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mover_truck );

	// Axis goals
	SetGoalPriority( Map.Build_Tank_Barrier_1, 0.94, TEAM.AXIS, CLASS.ENGINEER );
	SetGoalPriority( Map.Build_Command_Post, 0.93, TEAM.AXIS, CLASS.ENGINEER );
	SetGoalPriority( Map.Build_Tank_Barrier_2, 0.92, TEAM.AXIS, CLASS.ENGINEER );
	SetGoalPriority( Map.Build_Truck_Barrier_1, 0.91, TEAM.AXIS, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Command_Post, 0.0, TEAM.AXIS, CLASS.ENGINEER );
	SetGoalPriority( "DEFEND_Depot_[14]", 0.6, TEAM.AXIS ); //try and keep these two occupied

	SetAvailableMapGoals( TEAM.AXIS, false, Map.Ammo_Cabinet_north_ammocabinet );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Ammo_Cabinet_south_ammocabinet );
	SetAvailableMapGoals( TEAM.AXIS, false, "ATTACK.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Depot_.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Health_Cabinet_north_healthcabinet );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Health_Cabinet_south_healthcabinet );
//~	SetAvailableMapGoals( TEAM.AXIS, false, ".*ARTILLERY.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Tank_Barrier_2 );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Truck_Barrier_1 );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Truck_Barrier_2 );

	SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_mg42_bridge );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_mg42_bank );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_mg42_allied );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_mg42_bridge );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_mg42_bank );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_mg42_allied );
	SetAvailableMapGoals( TEAM.AXIS, false, "SNIPE.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, "PLANTMINE.*" );

	Wp.SetWaypointFlag("closeddoor1", "closed", true);
	Wp.SetWaypointFlag("closeddoor2", "closed", true);
	Wp.SetWaypointFlag("closeddoor3", "closed", true);
	Wp.SetWaypointFlag("rail1", "closed", true);
	Wp.SetWaypointFlag("rail2", "closed", true);
	Wp.SetWaypointFlag("rail3", "closed", true);
	Wp.SetWaypointFlag("wallbreach", "closed", true);
	Wp.SetWaypointFlag("onewaydoor1", "door", true);
	Wp.SetWaypointFlag("onewaydoor2", "door", true);
	Wp.SetWaypointFlag("onewaydoor3", "door", true);
	Wp.SetWaypointFlag("onewaydoor4", "door", true);
	Wp.SetWaypointFlag("onewaydoor5", "door", true);
	Wp.SetWaypointFlag("onewaydoor6", "door", true);

	SetGoalPriority( "PLANT_Bank_Wall_Breach", 0.9 );

	//routes for tank build at barrier 2
	Util.DisableGoal("ROUTE_repair_route.*");

	//set up some routing
	MapRoutes =
	{
		BUILD_Tank =
		{
			ROUTE_AllySpawn =
			{
				ROUTE_depotgate =
				{
					ROUTE_depotgate2 = {},
					ROUTE_depotgatesplit = { ROUTE_as_rightsplit1 = {}, },
					ROUTE_cproute = {},
				},
				ROUTE_as_right =
				{
					ROUTE_as_rightsplit1 = {},
					ROUTE_as_rightsplit2 = { ROUTE_depotflank = {}, },
				},
			},
			ROUTE_AllySpawn2 =
			{
				ROUTE_depotgate =
				{
					ROUTE_depotgate2 = {},
					ROUTE_depotgatesplit = { ROUTE_as_rightsplit1 = {}, },
					ROUTE_cproute = {},
				},
				ROUTE_as_right =
				{
					ROUTE_as_rightsplit1 = {},
					ROUTE_as_rightsplit2 = { ROUTE_depotflank = {}, },
				},
			},

			ROUTE_TankYardSpawn =
			{
				ROUTE_repair_route_stairs = {},
				ROUTE_repair_route_bridge1 =
				{
					ROUTE_repair_route_bridge2 =
					{
						ROUTE_repair_route_bridge3 = {},
					}
				},
			},
			ROUTE_TankYardSpawn2 =
			{
				ROUTE_repair_route_stairs = {},
				ROUTE_repair_route_bridge1 =
				{
					ROUTE_repair_route_bridge2 =
					{
						ROUTE_repair_route_bridge3 = {},
					}
				},
			},
		},
		PLANT_Tank_Barrier_1 =
		{
			ROUTE_TankYardSpawn =
			{
				ROUTE_depotflank = {},
				ROUTE_depotflank2 = {},
				ROUTE_as_rightsplit1 = {},
			},
			ROUTE_TankYardSpawn2 =
			{
				ROUTE_depotflank = {},
				ROUTE_depotflank2 = {},
				ROUTE_as_rightsplit1 = {},
			},
		},
		PLANT_Tank_Barrier_2 =
		{
			ROUTE_TankYardSpawn =
			{
				ROUTE_bridgeroute =
				{
					ROUTE_bridgeroute2 = {},
				},
				ROUTE_cp_stairs = { Weight = 2,},
			},
			ROUTE_TankYardSpawn2 =
			{
				ROUTE_bridgeroute =
				{
					ROUTE_bridgeroute2 = {},
				},
				ROUTE_cp_stairs = { Weight = 2,},
			},
		},
		ATTACK_Tank_Barrier2_1 =
		{
			ROUTE_TankYardSpawn =
			{
				ROUTE_bridgeroute =
				{
					Weight = 2,
					ROUTE_bridgeroute2 = {},
				},
				ROUTE_trb1_stairs = { Weight = 2, ROUTE_b2flank = {}, },
				ROUTE_cp_stairs = {},
			},
			ROUTE_TankYardSpawn2 =
			{
				ROUTE_bridgeroute =
				{
					Weight = 2,
					ROUTE_bridgeroute2 = {},
				},
				ROUTE_trb1_stairs = { Weight = 2, ROUTE_b2flank = {}, },
				ROUTE_cp_stairs = {},
			},
		},
		ATTACK_newbarrier2_1 =
		{
			ROUTE_TankYardSpawn =
			{
				ROUTE_trb1_stairs = { Weight = 3, ROUTE_b2flank = {}, },
			},
			ROUTE_TankYardSpawn2 =
			{
				ROUTE_trb1_stairs = { Weight = 3, ROUTE_b2flank = {}, },
			},
		},
		ATTACK_Bank_1 =
		{
			ROUTE_TankYardSpawn =
			{
				ROUTE_trb1_stairs = {},
				ROUTE_cp_stairs = { ROUTE_cp_stairs2 = {}, },
				ROUTE_southstairs = {},
			},
			ROUTE_TankYardSpawn2 =
			{
				ROUTE_trb1_stairs = {},
				ROUTE_cp_stairs = { ROUTE_cp_stairs2 = {}, },
				ROUTE_southstairs = {},
			},
		},
		BUILD_Truck =
		{
			ROUTE_TankYardSpawn = { ROUTE_trb1_stairs = {}, },
			ROUTE_TankYardSpawn2 = { ROUTE_trb1_stairs = {}, },
		},
		FLAG_gold_crate =
		{
			ROUTE_TankYardSpawn =
			{
				ROUTE_trb1_stairs =
				{
					Weight = 2,
					ROUTE_westbank =
					{
						ROUTE_bankfront = {},
						ROUTE_westbank2 = { ROUTE_bankback = {}, },
					},
				},
				ROUTE_cp_stairs = { ROUTE_cp_stairs2 = {}, },
				ROUTE_southstairs = {},
				ROUTE_southstairs2 =
				{
					ROUTE_wallbreach = {},
				},
			},
			ROUTE_TankYardSpawn2 =
			{
				ROUTE_trb1_stairs =
				{
					Weight = 2,
					ROUTE_westbank =
					{
						ROUTE_bankfront = {},
						ROUTE_westbank2 = { ROUTE_bankback = {}, },
					},
				},
				ROUTE_cp_stairs = { ROUTE_cp_stairs2 = {}, },
				ROUTE_southstairs = {},
			},
		},
		CAPPOINT_Gold_Dropoff =
		{
			ROUTE_goldgrab =
			{
				ROUTE_bankback =
				{
					Weight = 2,
					ROUTE_westbank2 = {},
				},
				ROUTE_bankfront = {},
			},
		},
		ATTACK_Truck_Barrier1_1 =
		{
			ROUTE_TankYardSpawn =
			{
				ROUTE_trb1_stairs = {},
				ROUTE_longalley = { Weight = 2, ROUTE_longstairs = {}, },
			},
			ROUTE_TankYardSpawn2 =
			{
				ROUTE_trb1_stairs = {},
				ROUTE_longalley = { Weight = 2, ROUTE_longstairs = {}, },
			},
		},
		DEFEND_Tank_Barrier1_6 =
		{
			ROUTE_AxisSpawn =
			{
				ROUTE_trb1_stairs = {},
				ROUTE_cp_stairs2 =
				{
					Weight = 2,
					ROUTE_cp_stairs = {},
				},
				ROUTE_southstairs = {},
			},
		},
		DEFEND_Tank_Barrier2_6 =
		{
			ROUTE_AxisSpawn =
			{
				ROUTE_axisspawn_r = {},
				ROUTE_axisspawn_l = {},
			},
		},
		DEFEND_Bank_6 =
		{
			ROUTE_AxisSpawn =
			{
				ROUTE_axisspawn_r = {},
				ROUTE_axisspawn_l = {},
				ROUTE_bankback3 =
				{
					ROUTE_bankback2 = { ROUTE_bankback = {}, },
				},
			},
		},
		DEFEND_Truck_Barrier1_6 =
		{
			ROUTE_AxisSpawn =
			{
				ROUTE_axisspawn_r =
				{
					ROUTE_southstairs = { ROUTE_southstairs2 = {}, },
					ROUTE_trb1_stairs = {},
				},
				ROUTE_axisspawn_l = {},
			},
		},
	};

	//copy some routes
	MapRoutes.ATTACK_Depot_6 = MapRoutes.BUILD_Tank;
	MapRoutes.ATTACK_Depot_7 = MapRoutes.BUILD_Tank;
	MapRoutes.ATTACK_Depot_8 = MapRoutes.BUILD_Tank;
	MapRoutes.ATTACK_Depot_9 = MapRoutes.BUILD_Tank;
	MapRoutes.ATTACK_Depot_10 = MapRoutes.BUILD_Tank;
	MapRoutes.ATTACK_Tank_Barrier1_1 = MapRoutes.PLANT_Tank_Barrier_1;
	MapRoutes.ATTACK_Tank_Barrier1_2 = MapRoutes.PLANT_Tank_Barrier_1;
	MapRoutes.ATTACK_Tank_Barrier1_3 = MapRoutes.PLANT_Tank_Barrier_1;
	MapRoutes.ATTACK_Tank_Barrier1_4 = MapRoutes.PLANT_Tank_Barrier_1;
	MapRoutes.ATTACK_Tank_Barrier1_5 = MapRoutes.PLANT_Tank_Barrier_1;
	MapRoutes.MOUNTMG42_mg42_bridge = MapRoutes.ATTACK_Tank_Barrier2_1;
	MapRoutes.ATTACK_Tank_Barrier2_2 = MapRoutes.ATTACK_Tank_Barrier2_1;
	MapRoutes.ATTACK_Tank_Barrier2_3 = MapRoutes.ATTACK_Tank_Barrier2_1;
	MapRoutes.ATTACK_Tank_Barrier2_4 = MapRoutes.ATTACK_Tank_Barrier2_1;
	MapRoutes.ATTACK_Tank_Barrier2_5 = MapRoutes.ATTACK_Tank_Barrier2_1;
	MapRoutes.ATTACK_newbarrier2_2 = MapRoutes.ATTACK_newbarrier2_1;
	MapRoutes.ATTACK_newbarrier2_3 = MapRoutes.ATTACK_newbarrier2_1;
	MapRoutes.ATTACK_Bank_2 = MapRoutes.ATTACK_Bank_1;
	MapRoutes.ATTACK_Bank_3 = MapRoutes.ATTACK_Bank_1;
	MapRoutes.ATTACK_Bank_4 = MapRoutes.ATTACK_Bank_1;
	MapRoutes.ATTACK_Bank_5 = MapRoutes.ATTACK_Bank_1;
	MapRoutes.MOUNTMG42_mg42_bank = MapRoutes.ATTACK_Bank_1;
	MapRoutes.MOUNTMG42_mg42_allied = MapRoutes.ATTACK_Truck_Barrier1_1;
	MapRoutes.PLANT_Truck_Barrier_1 = MapRoutes.ATTACK_Truck_Barrier1_1;
	MapRoutes.ATTACK_Truck_Barrier1_2 = MapRoutes.ATTACK_Truck_Barrier1_1;
	MapRoutes.ATTACK_Truck_Barrier1_3 = MapRoutes.ATTACK_Truck_Barrier1_1;
	MapRoutes.ATTACK_Truck_Barrier1_4 = MapRoutes.ATTACK_Truck_Barrier1_1;
	MapRoutes.ATTACK_Truck_Barrier1_5 = MapRoutes.ATTACK_Truck_Barrier1_1;
	MapRoutes.DEFEND_Tank_Barrier1_7 = MapRoutes.DEFEND_Tank_Barrier1_6;
	MapRoutes.DEFEND_Tank_Barrier1_8 = MapRoutes.DEFEND_Tank_Barrier1_6;
	MapRoutes.DEFEND_Tank_Barrier1_9 = MapRoutes.DEFEND_Tank_Barrier1_6;
	MapRoutes.DEFEND_Tank_Barrier1_10 = MapRoutes.DEFEND_Tank_Barrier1_6;
	MapRoutes.DEFEND_Tank_Barrier2_7 = MapRoutes.DEFEND_Tank_Barrier2_6;
	MapRoutes.DEFEND_Tank_Barrier2_8 = MapRoutes.DEFEND_Tank_Barrier2_6;
	MapRoutes.DEFEND_Tank_Barrier2_9 = MapRoutes.DEFEND_Tank_Barrier2_6;
	MapRoutes.DEFEND_Tank_Barrier2_10 = MapRoutes.DEFEND_Tank_Barrier2_6;
	MapRoutes.MOUNTMG42_mg42_bridge = MapRoutes.DEFEND_Tank_Barrier2_6;
	MapRoutes.MOUNTMG42_mg42_bank = MapRoutes.DEFEND_Tank_Barrier2_6;
	MapRoutes.DEFEND_Bank_7 = MapRoutes.DEFEND_Bank_6;
	MapRoutes.DEFEND_Bank_8 = MapRoutes.DEFEND_Bank_6;
	MapRoutes.DEFEND_Bank_9 = MapRoutes.DEFEND_Bank_6;
	MapRoutes.DEFEND_Bank_10 = MapRoutes.DEFEND_Bank_6;
	MapRoutes.DEFEND_Truck_Barrier1_7 = MapRoutes.DEFEND_Truck_Barrier1_6;
	MapRoutes.DEFEND_Truck_Barrier1_8 = MapRoutes.DEFEND_Truck_Barrier1_6;
	MapRoutes.DEFEND_Truck_Barrier1_9 = MapRoutes.DEFEND_Truck_Barrier1_6;
	MapRoutes.DEFEND_Truck_Barrier1_10 = MapRoutes.DEFEND_Truck_Barrier1_6;

	Util.Routes(MapRoutes);

	Util.MapDebugPrint( "OnMapLoad" );
};

global OnBotJoin = function( bot )
{
	//make sure allies spawn at default
	bot.ChangeSpawnPoint( 0 );

};
