global Map =
{
	//~ DistanceCheck = false,
	
	Ammo_Cabinet_objhacab2 = "AMMOCAB_objhacab2",
	Ammo_Cabinet_objhacab3 = "AMMOCAB_objhacab3",
	Health_Cabinet_objhacab1 = "HEALTHCAB_objhacab1",
	Health_Cabinet_objhacab4 = "HEALTHCAB_objhacab4",
	Checkpoint_roadbunker = "CHECKPOINT_roadbunker",
	Flag_radarbox1 = "FLAG_radarbox1",
	Flag_radarbox2 = "FLAG_radarbox2",
	Cappoint_Radar_Dropoff = "CAPPOINT_Radar_Dropoff",
	Build_Axis_Road_MG_Nest = "BUILD_Axis_Road_MG_Nest",
	Build_Axis_Watchtower_MG_Nest = "BUILD_Axis_Watchtower_MG_Nest",
	Build_Bunker_MG_Nest = "BUILD_Bunker_MG_Nest",
	Build_Command_Post = "BUILD_Command_Post",
	Plant_Axis_Road_MG_Nest = "PLANT_Axis_Road_MG_Nest",
	Plant_Axis_Watchtower_MG_Nest = "PLANT_Axis_Watchtower_MG_Nest",
	Plant_Bunker_MG_Nest = "PLANT_Bunker_MG_Nest",
	Plant_Command_Post = "PLANT_Command_Post",
	Plant_Main_Entrance = "PLANT_Main_Entrance",
	Plant_Side_Entrance = "PLANT_Side_Entrance",
	Mount_Allied_Spawn_MG = "MOUNTMG42_Allied_Spawn_MG",
	Mount_Axis_Road_MG_Nest = "MOUNTMG42_Axis_Road_MG_Nest",
	Mount_Axis_Watchtower_MG_Nest = "MOUNTMG42_Axis_Watchtower_MG_Nest",
	Mount_Bunker_MG_Nest = "MOUNTMG42_Bunker_MG_Nest",
	Mount_CP_Bunker_MG = "MOUNTMG42_CP_Bunker_MG",
	Repair_Allied_Spawn_MG = "REPAIRMG42_Allied_Spawn_MG",
	Repair_Axis_Road_MG_Nest = "REPAIRMG42_Axis_Road_MG_Nest",
	Repair_Axis_Watchtower_MG_Nest = "REPAIRMG42_Axis_Watchtower_MG_Nest",
	Repair_Bunker_MG_Nest = "REPAIRMG42_Bunker_MG_Nest",
	Repair_CP_Bunker_MG = "REPAIRMG42_CP_Bunker_MG",
	
	mg42_3 = false,

	//set status's for conditionals
	MainDoorStatus = 0, //intact
	SideDoorStatus = 0,
	EastPartsStatus = 0, //0 home, 1 stolen, 2 secured
	WestPartsStatus = 0, 
	CPStatus = 0, //not allies

	//dyno counters
	MainDyno = 0,	
	SideDyno = 0,

	Axis_Road_MG_Nest_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		sleep( 2 );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_Axis_Road_MG_Nest );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_Axis_Road_MG_Nest );

		if ( Map.MainDoorStatus == 1 )
		{
			SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_Axis_Road_MG_Nest );
			SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_Axis_Road_MG_Nest );
		}
		
		Util.MapDebugPrint( "Axis_Road_MG_Nest_Built" );
	},

	Axis_Watchtower_MG_Nest_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Axis_Watchtower_MG_Nest_Built" );
	},

	Bunker_MG_Nest_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Bunker_MG_Nest_Built" );
	},

	Allied_Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.CPStatus = 1;
		
		Util.DisableGoal("ROUTE_cpassist");

		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_CP_Bunker_MG );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_CP_Bunker_MG );

		// half the allies should spawn at the cp
		foreach ( id and bot in BotTable )
		{
			if ( bot.GetTeam() == TEAM.ALLIES )
			{
				if ( RandInt(0,1) < 1)
				{
					bot.ChangeSpawnPoint( 1 ); // cp 
				}
				else 
				{
					bot.ChangeSpawnPoint( 0 ); //flag
				}
			}
		}
	
		Util.MapDebugPrint( "Allied_Command_Post_Built" );
	},

	Axis_Command_Post_Built = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "axis_radio_built_Built" );
	},

	Axis_Road_MG_Nest_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Axis_Road_MG_Nest_Destroyed" );
	},

	Axis_Watchtower_MG_Nest_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Util.MapDebugPrint( "Axis_Watchtower_MG_Nest_Destroyed" );
	},

	Bunker_MG_Nest_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.mg42_3 = false;
		
		Util.MapDebugPrint( "Bunker_MG_Nest_Destroyed" );
	},

	Command_Post_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.CPStatus = 0;

		if ( Map.SideDoorStatus == 1 )
			{ Util.EnableGoal("ROUTE_cpassist"); }

		Util.MapDebugPrint( "Command_Post_Destroyed" );
	},

	Main_Entrance_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.MainDoorStatus = 1;

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Main_Door_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Radar_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Main_Entrance );
		//~ SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_sidedoor1 );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Flag_radarbox1 );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Flag_radarbox2 );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Cappoint_Radar_Dropoff );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Bunker_MG_Nest );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_Bunker_MG_Nest );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_Bunker_MG_Nest );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Bunker_MG_Nest );

		if ( Map.SideDoorStatus == 1 )
		{
			//~ SetBiasGoals( 3.0, Map.Build_allied_radio_built );
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Command_Post );
		}
		
		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Flag_.*" );
		//~ SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Main_Door_.*" ); //obsolete now
		SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_West_Defense_.*" );
		SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_East_Defense_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Axis_Road_MG_Nest );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_Axis_Road_MG_Nest );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_Axis_Road_MG_Nest );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Bunker_MG_Nest );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_Bunker_MG_Nest );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_Bunker_MG_Nest );

		// half the axis should spawn at the house
		foreach ( id and bot in BotTable )
		{
			if ( bot.GetTeam() == TEAM.AXIS )
			{
				if ( RandInt(0,1) < 1)
				{
					bot.ChangeSpawnPoint( 4 ); // house 
				}
				else 
				{
					bot.ChangeSpawnPoint( 0 ); //warehouse
				}
			}
		}
		
		Util.MapDebugPrint( "Main_Entrance_Destroyed" );
	},

	Side_Entrance_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.SideDoorStatus = 1;
		
		if ( Map.CPStatus == 0 )
			{ Util.EnableGoal("ROUTE_cpassist"); }

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Side_Door_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Side_Entrance );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ROUTE_cproute" );

		if ( Map.MainDoorStatus == 1 || GetGameTimeLeft() < 90 )
		{
			//~ SetBiasGoals( 3.0, Map.Build_allied_radio_built );
			SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Radar_.*" );
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Flag_radarbox1 );
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Flag_radarbox2 );
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Build_Command_Post );
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Cappoint_Radar_Dropoff );
		}
		
		// Axis goals
		SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_East_Defense_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Build_Axis_Watchtower_MG_Nest );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Plant_Command_Post );
		
		if ( Map.CPStatus == 0 && Map.EastPartsStatus == 0 )
		{
			SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_CP_Bunker_MG );
			SetAvailableMapGoals( TEAM.AXIS, true, Map.Repair_CP_Bunker_MG );
		}
		
		Util.MapDebugPrint( "Side_Entrance_Destroyed" );
	},

	radarbox1_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.WestPartsStatus = 1;
	
		SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_Deliver_Defense_.*" );
		SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_West_Defense_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Main_Door_.*" );

		if ( Map.EastPartsStatus == 2 )
		{
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_East_Defense_.*" );
		}

		Util.MapDebugPrint( "radarbox1_Taken" );
	},

	radarbox2_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.EastPartsStatus = 1;
		
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_CP_Bunker_MG );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_CP_Bunker_MG );

		SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_Deliver_Defense_.*" );
		SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_East_Defense_.*" );

		if ( Map.WestPartsStatus > 0 )
		{
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_West_Defense_.*" );
		}

		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Main_Door_.*" );
 
		Util.MapDebugPrint( "radarbox2_Taken" );
	},

	radarbox1_Radar_Dropoff_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.WestPartsStatus = 2;

		if ( Map.EastPartsStatus == 0 || Map.EastPartsStatus == 2 )
		{
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_East_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_West_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_Deliver_Defense_.*" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Main_Door_.*" );
		}

		Util.MapDebugPrint( "radarbox1_Radar_Dropoff_Captured" );
	},

	radarbox2_Radar_Dropoff_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.EastPartsStatus = 2;
		
		if ( Map.WestPartsStatus == 0 )
		{
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_East_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_Deliver_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_Deliver_Defense_.*" );
		}

		if ( Map.WestPartsStatus == 2 )
		{
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_West_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_West_Defense_1" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_West_Defense_2" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Main_Door_.*" );
		}

		Util.MapDebugPrint( "radarbox2_Radar_Dropoff_Captured" );
	},
	
	roadbunker_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Main_Door_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Side_Door_.*" );
		
		if ( Map.mg42_3 )
		{
			SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_Bunker_MG_Nest );
			SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_Bunker_MG_Nest );
		}
		
		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Flag_.*" );
		
		if ( Map.mg42_3 )
		{
			SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_Bunker_MG_Nest );
			SetAvailableMapGoals( TEAM.AXIS, true, Map.Repair_Bunker_MG_Nest );
		}
		
		Util.MapDebugPrint( "roadbunker_Axis_Captured" );
	},

	roadbunker_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		// Allied goals
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Main_Door_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Side_Door_.*" );
		//~ SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Main_Entrance );
		
		if ( Map.mg42_3 )
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Mount_Bunker_MG_Nest );
			SetAvailableMapGoals( TEAM.ALLIES, true, Map.Repair_Bunker_MG_Nest );
		}
		
		// Axis goals
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Flag_.*" );
		
		if ( Map.mg42_3 )
		{
			SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_Bunker_MG_Nest );
			SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_Bunker_MG_Nest );
		}
		
		Util.MapDebugPrint( "roadbunker_Allies_Captured" );
	},

	radarbox1_Returned = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.WestPartsStatus = 0;

		if ( Map.EastPartsStatus == 0 || Map.EastPartsStatus == 2 )
		{
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_East_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_West_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_Deliver_Defense_.*" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Main_Door_.*" );
		}

		Util.MapDebugPrint( "radarbox1_Returned" );
	},

	radarbox2_Returned = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.EastPartsStatus = 0;
		
		if ( Map.SideDoorStatus == 1 && Map.CPStatus == 0 )
		{
			SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_CP_Bunker_MG );
			SetAvailableMapGoals( TEAM.AXIS, true, Map.Repair_CP_Bunker_MG );
		}
		
		if ( Map.WestPartsStatus == 0 )
		{
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_East_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_West_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_Deliver_Defense_.*" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Main_Door_.*" );
		}
		
		if ( Map.WestPartsStatus == 2 )
		{
			SetAvailableMapGoals ( TEAM.AXIS, true, "DEFEND_West_Defense_.*" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_West_Defense_1" );
			SetAvailableMapGoals ( TEAM.AXIS, false, "DEFEND_West_Defense_2" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Main_Door_.*" );
		}
		
		Util.MapDebugPrint( "radarbox2_Returned" );
	},

	Planted_Main = function( trigger )
	{
		if ( TestMap )
			{ return; }
		
		Map.MainDyno += 1;

		Util.MapDebugPrint( "Planted_Main" );
	},

	Defused_Main = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.MainDyno -= 1;

		Util.MapDebugPrint( "Defused_Main" );
	},

	Planted_Side = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.SideDyno += 1;

		Util.MapDebugPrint( "Planted_Side" );
	},

	Defused_Side = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.SideDyno -= 1;

		Util.MapDebugPrint( "Defused_Side" );
	},
};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }
		
	OnTrigger( "The Axis Road MG Nest has been constructed.", Map.Axis_Road_MG_Nest_Built );
	OnTrigger( "The Axis Watchtower MG Nest has been constructed.", Map.Axis_Watchtower_MG_Nest_Built );
	OnTrigger( "The Bunker MG Nest has been constructed.", Map.Bunker_MG_Nest_Built );
	OnTrigger( "Allied Command Post constructed. Charge speed increased!", Map.Allied_Command_Post_Built );
	OnTrigger( "Axis Command Post constructed. Charge speed increased!", Map.Axis_Command_Post_Built );
	OnTrigger( "The Axis Road MG Nest has been destroyed.", Map.Axis_Road_MG_Nest_Destroyed );
	OnTrigger( "The Axis Watchtower MG Nest has been destroyed.", Map.Axis_Watchtower_MG_Nest_Destroyed );
	OnTrigger( "The Bunker MG Nest has been destroyed.", Map.Bunker_MG_Nest_Destroyed );
	OnTrigger( "Axis team has destroyed the Allied Command Post!", Map.Command_Post_Destroyed );
	OnTrigger( "Allied team has destroyed the Axis Command Post!", Map.Command_Post_Destroyed );
	OnTrigger( "Allies have breached the Main Entrance and secured the Forward Bunker!", Map.Main_Entrance_Destroyed );
	OnTrigger( "Allies have breached the Side Entrance!", Map.Side_Entrance_Destroyed );
	OnTrigger( "Allies have stolen the West Radar Parts!", Map.radarbox1_Taken );
	OnTrigger( "Allies have stolen the East Radar Parts!", Map.radarbox2_Taken );
	OnTrigger( "Allies have secured the West Radar Parts!", Map.radarbox1_Radar_Dropoff_Captured );
	OnTrigger( "Allies have secured the East Radar Parts!", Map.radarbox2_Radar_Dropoff_Captured );
	OnTrigger( "Allies capture the Forward Bunker!", Map.roadbunker_Allies_Captured );
	OnTrigger( "Axis reclaim the Forward Bunker!", Map.roadbunker_Axis_Captured );
	OnTrigger( "Planted at the Main Entrance.", Map.Planted_Main );
	OnTrigger( "Defused at the Main Entrance.", Map.Defused_Main );
	OnTrigger( "Planted at the Side Entrance.", Map.Planted_Side );
	OnTrigger( "Defused at the Side Entrance.", Map.Defused_Side );
	OnTrigger( "Flag returned radarbox1!", Map.radarbox1_Returned );
	OnTrigger( "Flag returned radarbox2!", Map.radarbox2_Returned );
	
	// Max users per goal
	Util.SetMaxUsersInProgress( 15, Map.Checkpoint_roadbunker );
	Util.SetMaxUsersInProgress( 1, "ATTACK_Main_Door_.*" );
	Util.SetMaxUsersInProgress( 1, "ATTACK_Radar_.*" );
	Util.SetMaxUsersInProgress( 1, "DEFEND_Flag_.*" );
	Util.SetMaxUsersInProgress( 1, "DEFEND_East.*" );
	Util.SetMaxUsersInProgress( 1, "DEFEND_Main_Door_.*" );
	Util.SetMaxUsersInProgress( 1, "MOUNTMG42_.*" );
	Util.SetMaxUsersInProgress( 8, "FLAG_.*" );
	
	if ( ETUtil.CountTeam(TEAM.AXIS) > 8 )
		{ Util.SetMaxUsersInProgress( 2, "DEFEND_West.*" ); }
	else
		{ Util.SetMaxUsersInProgress( 1, "DEFEND_West.*" ); }
	
	SetMapGoalProperties( "ATTACK_.*", {MinCampTime=10, MaxCampTime=30});
	SetMapGoalProperties( "DEFEND_.*", {MinCampTime=9999, MaxCampTime=9999});
	SetMapGoalProperties( "MOUNTMG42_.*", {MinCampTime=9999, MaxCampTime=9999});
	SetMapGoalProperties( "MOBILEMG42_.*", {MinCampTime=120, MaxCampTime=120});
	SetMapGoalProperties( "SNIPE_.*", {MinCampTime=120, MaxCampTime=120});

	SetGoalPriority( "HEALTHCAB_.*", 0.0, 0, CLASS.SOLDIER );
	SetGoalPriority( "MOUNTMG42_.*", 0.0, 0, CLASS.MEDIC );
	SetGoalPriority( "MOUNTMG42_.*", 0.0, 0, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Command_Post, 0.0, 0, CLASS.ENGINEER );
	
	// Allied goals
	SetGoalPriority( "ATTACK_Main_Door_.*", 0.51, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( "DEFEND_West.*", 0.51, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Build_Command_Post, 0.91, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Main_Entrance, 0.82, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Side_Entrance, 0.81, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Axis_Road_MG_Nest, 0.0, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Axis_Watchtower_MG_Nest, 0.0, TEAM.ALLIES, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Bunker_MG_Nest, 0.0, TEAM.ALLIES, CLASS.ENGINEER );
	
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Flag_radarbox1 );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Flag_radarbox2 );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Ammo_Cabinet_objhacab3 );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Ammo_Cabinet_objhacab2 );
	SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Health_Cabinet_objhacab4 );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Health_Cabinet_objhacab1 );
	SetAvailableMapGoals( TEAM.ALLIES, false, ".*ARTILLERY.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Build_Command_Post );
	//~ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_maindoor1 );
	//~ SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_sidedoor1 );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Plant_Bunker_MG_Nest );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_Bunker_MG_Nest );
	SetAvailableMapGoals( TEAM.ALLIES, false, "MOBILEMG42.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_Allied_Spawn_MG );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_CP_Bunker_MG );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_Axis_Watchtower_MG_Nest );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_Allied_Spawn_MG );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_CP_Bunker_MG );
	SetAvailableMapGoals( TEAM.ALLIES, false, Map.Repair_Axis_Watchtower_MG_Nest );
	SetAvailableMapGoals( TEAM.ALLIES, false, "SNIPE.*" );
	SetAvailableMapGoals( TEAM.ALLIES, false, "ROUTE_cproute" );

	// Axis goals
	SetGoalPriority( "DEFEND_Flag_[167]", 0.91, TEAM.AXIS, CLASS.ENGINEER );
	SetGoalPriority( "DEFEND_West_Defense_[24789]", 0.92, TEAM.AXIS, CLASS.ENGINEER );
	SetGoalPriority( "HEALTHCAB_.*", 0.0, TEAM.AXIS, CLASS.FIELDOPS );
	SetGoalPriority( "HEALTHCAB_.*", 0.0, TEAM.AXIS, CLASS.COVERTOPS );
	SetGoalPriority( Map.Build_Bunker_MG_Nest, 0.91, TEAM.AXIS, CLASS.ENGINEER );
	SetGoalPriority( Map.Plant_Bunker_MG_Nest, 0.0, TEAM.AXIS, CLASS.ENGINEER );
	
	SetAvailableMapGoals( TEAM.AXIS, false, "ATTACK.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Flag_.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, ".*ARTILLERY.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Axis_Watchtower_MG_Nest );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Command_Post );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Plant_Command_Post );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Plant_Bunker_MG_Nest );
	SetAvailableMapGoals( TEAM.AXIS, false, "MOBILEMG42.*" );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_Allied_Spawn_MG );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_CP_Bunker_MG );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_Axis_Watchtower_MG_Nest );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_Allied_Spawn_MG );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_CP_Bunker_MG );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Repair_Axis_Watchtower_MG_Nest );
	SetAvailableMapGoals( TEAM.AXIS, false, "SNIPE.*" );

	if ( ETUtil.CountTeam(TEAM.AXIS) < 10 )
		{ SetAvailableMapGoals( TEAM.AXIS, false, Map.Build_Axis_Road_MG_Nest ); }
		
	Util.DisableGoal("ROUTE_cpassist");

	//problem is they will leave critical defensive spots to go to cabinets
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Ammo_Cabinet_objhacab2 );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Ammo_Cabinet_objhacab3 );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Health_Cabinet_objhacab4 );
	SetAvailableMapGoals( TEAM.AXIS, false, Map.Health_Cabinet_objhacab1 );

	MapRoutes =
	{
		CHECKPOINT_roadbunker =
		{
			ROUTE_AllySpawn1 =
			{
				ROUTE_tunnel = 
				{ 
					ROUTE_hill = 
					{
						ROUTE_flagside = { Weight = 2, },
						ROUTE_flagroad = 
						{
							ROUTE_flagroad2 = { ROUTE_flagfar = {}, },
						},
					},
				 },
				ROUTE_allyfront = 
				{
					Weight = 2,
					ROUTE_flagmain = { Weight = 2, },
					ROUTE_flagside = {},
					ROUTE_flagroad =
					{
						ROUTE_flagroad2 = { ROUTE_flagfar = {}, },
					},
				},
				ROUTE_flagside = {},
			},
			ROUTE_AllySpawn2 =
			{
				ROUTE_tunnel = 
				{ 
					ROUTE_hill = 
					{
						ROUTE_flagside = { Weight = 2, },
						ROUTE_flagroad = 
						{
							ROUTE_flagroad2 = { ROUTE_flagfar = {}, },
						},
					},
				 },
				ROUTE_allyfront = 
				{
					Weight = 2,
					ROUTE_flagmain = { Weight = 2, },
					ROUTE_flagside = {},
					ROUTE_flagroad =
					{
						ROUTE_flagroad2 = { ROUTE_flagfar = {}, },
					},
				},
				ROUTE_flagside = {},
			},
			ROUTE_AllySpawn3 =
			{
				ROUTE_tunnel = 
				{ 
					ROUTE_hill = 
					{
						ROUTE_flagside = { Weight = 2, },
						ROUTE_flagroad = 
						{
							ROUTE_flagroad2 = { ROUTE_flagfar = {}, },
						},
					},
				 },
				ROUTE_allyfront = 
				{
					Weight = 2,
					ROUTE_flagmain = { Weight = 2, },
					ROUTE_flagside = {},
					ROUTE_flagroad =
					{
						ROUTE_flagroad2 = { ROUTE_flagfar = {}, },
					},
				},
				ROUTE_flagside = {},
			},
		},
		PLANT_Main_Entrance =
		{
			ROUTE_AllySpawn1 = 
			{
				ROUTE_tunnel = 
				{ 
					ROUTE_hill = 
					{
						ROUTE_flagroad = 
						{
							ROUTE_flagroad2 = {},
						},
					},
				 },
				
			},
		},
		DEFEND_Flag_8 =
		{
			ROUTE_FlagSpawn = { ROUTE_flagside = {}, },
		},
		FLAG_radarbox1 =
		{
			ROUTE_FlagSpawn =
			{
				ROUTE_maincentral =
				{
					ROUTE_mainflank =
					{
						ROUTE_mainflank2 = {},
					},
				},
				ROUTE_mainright = { ROUTE_mainright2 = {}, },
				ROUTE_cpassist = { Weight = 2, },
			},
			ROUTE_CpSpawn =
			{
				ROUTE_tincorner = 
				{
					ROUTE_secorner = { ROUTE_swcorner = {}, },
				},
				ROUTE_mainflank = {},
				ROUTE_bridgehill = { ROUTE_bridge = {}, },
			},
		},
		FLAG_radarbox2 =
		{
			ROUTE_FlagSpawn =
			{
				ROUTE_maincentral = { Weight = 2, },
				ROUTE_mainright2 = 
				{ 
					ROUTE_swcorner = { ROUTE_secorner = {}, }, 
				},
				ROUTE_cpassist = { Weight = 2, },
			},
			ROUTE_CpSpawn =
			{
				ROUTE_tincorner = { Weight = 2, },
				ROUTE_eastmid = {},
			},
		},
		CAPPOINT_Radar_Dropoff =
		{
			ROUTE_East_Radar = 
			{
				ROUTE_cpassist =
				{
					ROUTE_flagroute = {},
				},
			},
			
		},
		DEFEND_East_Defense_1 =
		{
			ROUTE_AxisSpawn1 =
			{
				ROUTE_eastpatrol1 = {},
				ROUTE_eastpatrol2 = {},
			},
			ROUTE_AxisSpawn2 =
			{
				ROUTE_gateroute = {},
				ROUTE_westpatrol1 = {},
			},
		},
		DEFEND_West_Defense_1 =
		{
			ROUTE_AxisSpawn1 =
			{
				ROUTE_maincentral = {},
				ROUTE_westpatrol1 = {},
				ROUTE_westpatrol2 = {},
			},
		},
	};

	//copy some routes
	MapRoutes.DEFEND_East_Defense_2 = MapRoutes.DEFEND_East_Defense_1;
	MapRoutes.DEFEND_East_Defense_3 = MapRoutes.DEFEND_East_Defense_1;
	MapRoutes.DEFEND_East_Defense_4 = MapRoutes.DEFEND_East_Defense_1;
	MapRoutes.DEFEND_East_Defense_5 = MapRoutes.DEFEND_East_Defense_1;
	MapRoutes.DEFEND_East_Defense_6 = MapRoutes.DEFEND_East_Defense_1;
	MapRoutes.DEFEND_West_Defense_2 = MapRoutes.DEFEND_West_Defense_1;
	MapRoutes.DEFEND_West_Defense_3 = MapRoutes.DEFEND_West_Defense_1;
	MapRoutes.DEFEND_West_Defense_4 = MapRoutes.DEFEND_West_Defense_1;
	MapRoutes.DEFEND_West_Defense_5 = MapRoutes.DEFEND_West_Defense_1;
	MapRoutes.DEFEND_West_Defense_6 = MapRoutes.DEFEND_West_Defense_1;
	MapRoutes.DEFEND_West_Defense_7 = MapRoutes.DEFEND_West_Defense_1;
	MapRoutes.DEFEND_West_Defense_8 = MapRoutes.DEFEND_West_Defense_1;
	MapRoutes.DEFEND_West_Defense_9 = MapRoutes.DEFEND_West_Defense_1;

	Util.Routes(MapRoutes);
	Util.MapDebugPrint( "OnMapLoad" );
};

global OnBotJoin = function( bot )
{
	bot.MaxViewDistance = 1700;
	bot.TargetBreakableDist = 150.0;
	
	// default spawn
	bot.ChangeSpawnPoint(0);	
};
