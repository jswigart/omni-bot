global Map =
{
	Cap_Strogg = "CAPPOINT_mp_ctf_marine_flag_1",
	Cap_Marine = "CAPPOINT_mp_ctf_the_other_flag_thats_orange",
	Flag_Strogg = "FLAG_mp_ctf_the_other_flag_thats_orange", //lol
	Flag_Marine = "FLAG_mp_ctf_marine_flag_1",
	
	strogg_flag_pickedup = function(trigger)
	{
		Util.DisableGroup( "stroggDefends", TEAM.STROGG );
		Util.MapDebugPrint("strogg_flag_pickedup");
	},

	strogg_flag_returned = function(trigger)
	{
		Util.EnableGroup( "stroggDefends", TEAM.STROGG );
		Util.MapDebugPrint("strogg_flag_returned");
	},

	strogg_flag_dropped = function(trigger)
	{
		Util.MapDebugPrint("strogg_flag_dropped");
	},

	marine_flag_pickedup = function(trigger)
	{
		Util.DisableGroup( "marineDefends", TEAM.MARINE );
		Util.MapDebugPrint("marine_flag_pickedup");
	},

	marine_flag_returned = function(trigger)
	{
		Util.EnableGroup( "marineDefends", TEAM.MARINE );
		Util.MapDebugPrint("marine_flag_returned");
	},

	marine_flag_dropped = function(trigger)
	{
		Util.MapDebugPrint("marine_flag_dropped");
	},
};

global OnMapLoad = function()
{
	OnTrigger( "Flag mp_ctf_the_other_flag_thats_orange pickedup", Map.strogg_flag_pickedup );
	OnTrigger( "Flag mp_ctf_the_other_flag_thats_orange returned", Map.strogg_flag_returned );
	OnTrigger( "Flag mp_ctf_the_other_flag_thats_orange dropped", Map.strogg_flag_dropped );
	OnTrigger( "Flag mp_ctf_marine_flag_1 pickedup", Map.marine_flag_pickedup );
	OnTrigger( "Flag mp_ctf_marine_flag_1 returned", Map.marine_flag_returned );
	OnTrigger( "Flag mp_ctf_marine_flag_1 dropped", Map.marine_flag_dropped );

	// initialize the defend points
	Map.Defend.Strogg = Map.StroggDefends;
	Map.Defend.Marine = Map.MarineDefends;		

	//set up some routing
	MapRoutes =
	{
		FLAG_mp_ctf_the_other_flag_thats_orange =
		{
			ROUTE_ms_1 = 
			{
				ROUTE_mid1 =
				{
					ROUTE_strogg1 = {},
					ROUTE_strogg2 = {},
					ROUTE_strogg3 = {},
				},
				ROUTE_mid2 =
				{
					ROUTE_strogg1 = {},
					ROUTE_strogg2 = {},
					ROUTE_strogg3 = {},
				},
				ROUTE_mid3 =
				{
					ROUTE_strogg1 = {},
					ROUTE_strogg2 = {},
					ROUTE_strogg3 = {},
				},						
			},
		},
		FLAG_mp_ctf_marine_flag_1 =
		{
			ROUTE_ss_1 = 
			{
				ROUTE_mid1 = 
				{
					ROUTE_marine1 = {},
					ROUTE_marine2 = {},
					ROUTE_marine3 = {},
				},
				ROUTE_mid2 = 
				{
					ROUTE_marine1 = {},
					ROUTE_marine2 = {},
					ROUTE_marine3 = {},
				},
				ROUTE_mid3 = 
				{
					ROUTE_marine1 = {},
					ROUTE_marine2 = {},
					ROUTE_marine3 = {},
				},			
			},
		},	
		CAPPOINT_mp_ctf_the_other_flag_thats_orange =
		{
			ROUTE_mFlag =
			{
				ROUTE_mid1 =
				{
					ROUTE_strogg1 = {},
					ROUTE_strogg2 = {},
					ROUTE_strogg3 = {},
				},
				ROUTE_mid2 =
				{
					ROUTE_strogg1 = {},
					ROUTE_strogg2 = {},
					ROUTE_strogg3 = {},
				},
				ROUTE_mid3 =
				{
					ROUTE_strogg1 = {},
					ROUTE_strogg2 = {},
					ROUTE_strogg3 = {},
				},
			},
		},
		CAPPOINT_mp_ctf_marine_flag_1 =
		{
			ROUTE_sFlag =
			{
				ROUTE_mid1 = 
				{
					ROUTE_marine1 = {},
					ROUTE_marine2 = {},
					ROUTE_marine3 = {},
				},
				ROUTE_mid2 = 
				{
					ROUTE_marine1 = {},
					ROUTE_marine2 = {},
					ROUTE_marine3 = {},
				},
				ROUTE_mid3 = 
				{
					ROUTE_marine1 = {},
					ROUTE_marine2 = {},
					ROUTE_marine3 = {},
				},	
			},
		},
	};

	//copy some routes
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_2 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_3 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_4 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_5 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_6 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_7 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_8 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_9 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_10 = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;
	MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_mFlag = MapRoutes.FLAG_mp_ctf_the_other_flag_thats_orange.ROUTE_ms_1;

	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_2 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_3 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_4 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_5 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_6 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_7 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_8 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_9 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_10 = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;
	MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_sFlag = MapRoutes.FLAG_mp_ctf_marine_flag_1.ROUTE_ss_1;

	Util.Routes(MapRoutes);
	QUtil.InitDualObjective(); 
	Util.MapDebugPrint("OnMapLoad");
};

global OnBotJoin = function( bot )
{
	QUtil.SetDualObjective(bot);
	Util.MapDebugPrint("OnBotJoin", true);
};

