global Map =
{
	Quiet = true,

	Checkpoint_beach_flag = "CHECKPOINT_beach_flag",
	Flag_Decoder_Manual = "FLAG_Decoder_Manual",
	Plant_East_Tower_Door = "PLANT_East_Tower_Door",
	Plant_Main_Entrance = "PLANT_Main_Entrance",
	Mount_lowernest = "MOUNTMG42_lowernest",
	Mount_upperrnest = "MOUNTMG42_uppernest",
	Mount_mg42_3 = "MOUNTMG42_mg42_3",
	Mount_mg42_3_1 = "MOUNTMG42_mg42_3_1",
	Mount_mg42_3_2 = "MOUNTMG42_mg42_3_2",
	Mount_mg42_3_3 = "MOUNTMG42_mg42_3_3",
	Mount_mg42_3_4 = "MOUNTMG42_mg42_3_4",
	Repair_496 = "REPAIRMG42_496",
	Repair_497 = "REPAIRMG42_497",
	Repair_mg42_3 = "REPAIRMG42_mg42_3",
	Repair_mg42_3_1 = "REPAIRMG42_mg42_3_1",
	Repair_mg42_3_2 = "REPAIRMG42_mg42_3_2",
	Repair_mg42_3_3 = "REPAIRMG42_mg42_3_3",
	Repair_mg42_3_4 = "REPAIRMG42_mg42_3_4",

	//set status' for conditionals
	//FlagStatus = 0, //0 nobody, 1 axis, 2 allies
	DocsGone = false, //may be grabbed, but not out of meeting room
	DocStatus = false, //home
	MainDoorStatus = false, //intact
	TowerDoorStatus = false, //intact

	East_Tower_Door_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.TowerDoorStatus = true;

		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_main_defend_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_main_attack_1" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_main_attack_3" );
		SetAvailableMapGoals( TEAM.AXIS, false, Map.Mount_mg42_3 );

		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_main_defend_1" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_doc_defend_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "PANZER_doc_panzer_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_mg42_3_3 );
		SetAvailableMapGoals( TEAM.AXIS, true, Map.Repair_mg42_3_3 );
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_beach_flag );     
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Flag_Decoder_Manual );

		//allies should plant tower first
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_Main_Entrance );
		
		SetGoalPriority( "CALL.*", 0.6 );
		SetGoalPriority( "ARTILLLERY.*", 0.6 );
	},

	East_Tower_Door_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		//don't bother trying to defuse this
		RTCWUtil.DisableGoal("DEFUSE_East_Tower.*");
	},

	Main_Entrance_Destroyed = function( trigger )
	{
		if ( TestMap )
			{ return; }

		Map.MainDoorStatus = true;

		if ( !Map.DocStatus )
		{ 
			SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_main_attack_2" );
			SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_main_attack_4" );
			SetAvailableMapGoals( TEAM.ALLIES, false, Map.Mount_lowernest );
		}

		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_main_defend_1" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ROUTE_main_entrance" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ROUTE_docdel2" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ROUTE_docdel3" );

		SetGoalPriority( "CALL.*", 0.0 );
		SetGoalPriority( "ARTILLLERY.*", 0.0 );
	},
	
	Main_Entrance_Planted = function( trigger )
	{
		if ( TestMap )
			{ return; }

		//don't bother trying to defuse this
		RTCWUtil.DisableGoal("DEFUSE_Main_Entrance.*");
	},	

	Decoder_Manual_Taken = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.DocStatus = 1;

		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_doc_defend_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "PANZER_doc_panzer_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_main_defend_1" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_main_defend_3" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_main_defend_4" );
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_axis_doc_del_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_main_attack_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_allies_doc_del_.*" );
		  
		 // some axis should stay at meeting room until doc carrier is out
		 if ( !Map.DocsGone )
			{ SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_rMeeting.*" ); }

		// Hold the enemy in the bunker/forest respectivly
		SetGoalPriority( "CALL.*", 0.7 );
		SetGoalPriority( "ARTILLLERY.*", 0.7 );
	},

	Decoder_Manual_Returned = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		Map.DocStatus = 0;

		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_doc_defend_.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, "PANZER_doc_panzer_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_main_defend_1" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_main_defend_3" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_main_defend_4" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_axis_doc_del_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_main_attack_.*" );
		SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_allies_doc_del_.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_rMeeting.*" );

		// CEASE FIRE!! Protect docs
		SetGoalPriority( "CALL.*", 0.0 );
		SetGoalPriority( "ARTILLLERY.*", 0.0 );
	},

	beach_flag_Axis_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }
			
		SetAvailableMapGoals( TEAM.ALLIES, true, Map.Checkpoint_beach_flag );
	},

	beach_flag_Allies_Captured = function( trigger )
	{
		if ( TestMap )
			{ return; }

		SetAvailableMapGoals( TEAM.ALLIES, false, Map.Checkpoint_beach_flag );

		// dont call arty as much
		SetGoalPriority( "CALL.*", 0.5 );
		SetGoalPriority( "ARTILLLERY.*", 0.5 );
	},
	
	FoyerTrigger = 
	{
		Name = "FoyerTrigger",
		TriggerOnClass = CLASS.ANYPLAYER,
		OnEnter = function(ent)
		{
			if ( TestMap )
				{ return; }		
				
			if( GetEntTeam(ent) == TEAM.ALLIES )
			{ 
				if ( GetEntFlags( ent, ENTFLAG.CARRYINGGOAL ) )
				{
					//docs are gone
					Map.DocsGone = true;
					SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_rMeeting.*" );
				}
			}
		},
		OnExit = function(ent)
		{
			if ( TestMap )
				{ return; }			
		},	
	},
};

global OnMapLoad = function()
{
	if ( TestMapOn )
		{ Util.AutoTestMap(); }

	OnTrigger( "East Tower Door Destroyed.", Map.East_Tower_Door_Destroyed );
	OnTrigger( "Planted at East Tower Door.", Map.East_Tower_Door_Planted );
	OnTrigger( "The Main Entrance Destroyed.", Map.Main_Entrance_Destroyed );
	OnTrigger( "Planted at The Main Entrance.", Map.Main_Entrance_Planted );
	OnTrigger( "Allies have stolen The Decoder Manual!", Map.Decoder_Manual_Taken );
	OnTrigger( "Flag returned Decoder Manual!", Map.Decoder_Manual_Returned );
	OnTrigger( "Axis reclaims the Forward Bunker!", Map.beach_flag_Axis_Captured );
	OnTrigger( "Allies capture the Forward Bunker!", Map.beach_flag_Allies_Captured );
	
	tOne = OnTriggerRegion(AABB(528,-2458,739, 636, -1832, 814), Map.FoyerTrigger);

	SetMapGoalProperties( "ATTACK_.*", {mincamptime=15, maxcamptime=30});
	SetMapGoalProperties( "DEFEND_.*", {mincamptime=15, maxcamptime=30});
	SetMapGoalProperties( "SNIPE_.*", {mincamptime=35, maxcamptime=60});
	SetMapGoalProperties( "PANZER_.*", {mincamptime=35, maxcamptime=60});
	SetMapGoalProperties( "MOUNT.*", {mincamptime=90, maxcamptime=180});

	RTCWUtil.SetPrimaryGoals(1.0);

	//disable all goals at start
	RTCWUtil.DisableGoal(".*", true); //all but routes

	RTCWUtil.EnableGoal("CAPPOINT_.*");
	RTCWUtil.LimitToClass("MOUNT.*", TEAM.AXIS, CLASS.ENGINEER);

	SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_main_defend_.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, "SNIPE_main_entrance_.*" );
	SetAvailableMapGoals( TEAM.AXIS, true, Map.Mount_mg42_3 );

	SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_main_attack_.*" );
	SetAvailableMapGoals( TEAM.ALLIES, true, Map.Mount_lowernest );
	SetAvailableMapGoals( TEAM.ALLIES, true, Map.Plant_East_Tower_Door );
	SetAvailableMapGoals( TEAM.ALLIES, false, "ROUTE_main_entrance" );
	SetAvailableMapGoals( TEAM.ALLIES, false, "ROUTE_docdel2" );
	SetAvailableMapGoals( TEAM.ALLIES, false, "ROUTE_docdel3" );

	// Arty
	SetAvailableMapGoals( TEAM.ALLIES, true, "CALLARTILLERY_spot_allied" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_axis_tower" );
	SetAvailableMapGoals( TEAM.ALLIES, true, "ARTILLERY_S_axis_bunker" );

	SetAvailableMapGoals( TEAM.AXIS, true, "CALLARTILLERY_axis_spot_upper_1" );
	SetAvailableMapGoals( TEAM.AXIS, true, "CALLARTILLERY_axis_spot_upper_2" );
	SetAvailableMapGoals( TEAM.AXIS, true, "CALLARTILLERY_spot_axis_lower" );
	SetAvailableMapGoals( TEAM.AXIS, true, "ARTILLERY_S_forest_[1234]" );

	SetGoalPriority( "CALL.*", 1.5 );
	SetGoalPriority( "ARTILLLERY.*", 1.5 );
	SetGoalPriority( "DEFEND_rMeeting.*", 0.6 );
	SetGoalPriority( "DEFEND_axis_doc_del_.*" , 0.7 );

	Util.SetMaxUsersInProgress( 1, Map.Mount_lowernest );
	Util.SetMaxUsersInProgress( 1, Map.Mount_mg42_3 );
	Util.SetMaxUsersInProgress( 1, Map.Mount_mg42_3_3 );
	Util.SetMaxUsersInProgress( 1, Map.Repair_mg42_3_3 );
	Util.SetMaxUsersInProgress( 1, "DEFEND.*" );

	// Default Status'
	//Map.FlagStatus = 0; //nobody owns it
	Map.DocStatus = false; //at home
	Map.MainDoorStatus = false; //intact
	Map.SideWallStatus = false; //intact

	Maproutes =
	{
 		FLAG_Decoder_Manual =
 		{
 			ROUTE_allies_spawn = 
			{
				ROUTE_forward_spawn = 
				{
					ROUTE_main_hall = {},
					ROUTE_vents = {},
				},
				ROUTE_main_entrance = 
				{
					ROUTE_storage_tunnel = {},
					ROUTE_meeting_room = {},
				},
			},
 			ROUTE_forward_spawn = 
			{
				ROUTE_main_entrance = 
				{
					ROUTE_storage_tunnel = {},
					ROUTE_meeting_room = {}
				},
				ROUTE_main_hall = 
				{
					ROUTE_vents = {},
					ROUTE_meeting_room = {},
				},
			},
		},
 		CAPPOINT_74 =
 		{
 			ROUTE_docgrab = 
			{
				Weight = 2,
				ROUTE_docdel1 = {},
				ROUTE_docdel2 = {},
				ROUTE_docdel3 = {},
			},
		},
    };

    Util.Routes(Maproutes);
	print( "OnMapLoad" );
 };

global OnBotJoin = function( bot )
{
	RTCWUtil.SelectWeapon(bot, WEAPON.PANZERFAUST);
	
	//~ bot.TargetBreakableDist = 300.0;
	bot.MaxViewDistance = 1800.0;

	//default spawn
	bot.ChangeSpawnPoint( 0 );
};
