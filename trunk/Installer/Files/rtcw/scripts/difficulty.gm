// Difficulty settings

// The default starting difficulty
global CurrentDifficulty = 3;
global AdjustAim = true;

CurrentDifficulty = ConfigGet( "Difficulty","CurrentDifficulty", CurrentDifficulty );
AdjustAim = ConfigGet( "Difficulty","AdjustAim", AdjustAim );

// This script only defines 6 total difficulty levels (0-5). It isn't limited to 6 though, and can be easily set up with more.
global difficulties =
{
	// Difficulty 0
	{
		FieldOfView = 90.0,
		ReactionTime = 2.0,
		MemorySpan = 1.5,
		AimPersistance = 1.0,
		MaxTurnSpeed = 720.0,
		AimStiffness = 60.0,
		AimDamping = 20.0,
		AimTolerance = 125,
		AimErrorX = 25,
		AimErrorY = 25,
		AimOffsetX = 0,
		AimOffsetY = 0,
		AimOffsetZ = -15,
		SniperOffset = -20,
	},
	// Difficulty 1
	{
		FieldOfView = 90.0,
		ReactionTime = 2.0,
		MemorySpan = 1.5,
		AimPersistance = 1.0,
		MaxTurnSpeed = 720.0,
		AimStiffness = 60.0,
		AimDamping = 20.0,
		AimTolerance = 125,
		AimErrorX = 25,
		AimErrorY = 25,
		AimOffsetX = 0,
		AimOffsetY = 0,
		AimOffsetZ = -15,
		SniperOffset = -20,
	},
	// Difficulty 2
	{
		FieldOfView = 100.0,
		ReactionTime = 2.0,
		MemorySpan = 2.0,
		AimPersistance = 1.0,
		MaxTurnSpeed = 720.0,
		AimStiffness = 50.0,
		AimDamping = 15.0,
		AimTolerance = 110,
		AimErrorX = 20,
		AimErrorY = 20,
		AimOffsetX = 0,
		AimOffsetY = 0,
		AimOffsetZ = -15,
		SniperOffset = -20,
	},
	//Difficulty 3
	{
		FieldOfView = 105.0,
		ReactionTime = 1.0,
		MemorySpan = 2.5,
		AimPersistance = 2.0,
		MaxTurnSpeed = 720.0,
		AimStiffness = 60.0,
		AimDamping = 15.0,
		AimTolerance = 100,
		AimErrorX = 15,
		AimErrorY = 15,
		AimOffsetX = 0,
		AimOffsetY = 0,
		AimOffsetZ = -12,
		SniperOffset = -15,
	},
	//Difficulty 4
	{
		FieldOfView = 110.0,
		ReactionTime = 0.75,
		MemorySpan = 3.0,
		AimPersistance = 2.0,
		MaxTurnSpeed = 720.0,
		AimStiffness = 65.0,
		AimDamping = 15.0,
		AimTolerance = 90,
		AimErrorX = 10,
		AimErrorY = 10,
		AimOffsetX = 0,
		AimOffsetY = 0,
		AimOffsetZ = -10,
		SniperOffset = -15,
	},
	//Difficulty 5
	{
		FieldOfView = 115.0,
		ReactionTime = 0.5,
		MemorySpan = 3.0,
		AimPersistance = 2.0,
		MaxTurnSpeed = 720.0,
		AimStiffness = 70.0,
		AimDamping = 12.5,
		AimTolerance = 70,
		AimErrorX = 10,
		AimErrorY = 10,
		AimOffsetX = 0,
		AimOffsetY = 0,
		AimOffsetZ = -10,
		SniperOffset = -10,
	},
	//Difficulty 6
	{
		FieldOfView = 120.0,
		ReactionTime = 0.5,
		MemorySpan = 3.0,
		AimPersistance = 2.0,
		MaxTurnSpeed = 720.0,
		AimStiffness = 75.0,
		AimDamping = 10.0,
		AimTolerance = 48,
		AimErrorX = 5,
		AimErrorY = 5,
		AimOffsetX = 0,
		AimOffsetY = 0,
		AimOffsetZ = -5,
		SniperOffset = -5,
	},
	//Difficulty 7
	{
		FieldOfView = 180.0,
		ReactionTime = 0.0,
		MemorySpan = 4.0,
		AimPersistance = 2.0,
		MaxTurnSpeed = 720.0,
		AimStiffness = 75.0,
		AimDamping = 10.0,
		AimTolerance = 48,
		AimErrorX = 0,
		AimErrorY = 0,
		AimOffsetX = 0,
		AimOffsetY = 0,
		AimOffsetZ = 0,
		SniperOffset = 0,
	},
};

// A helper function that sets a bot up with the current difficulty settings.
difficulties.InitBotDifficultyProperties = function( bot )
{
	Debug = false;

	if ( difficulties[CurrentDifficulty] ) {
		bot.FieldOfView = difficulties[CurrentDifficulty].FieldOfView;
		bot.ReactionTime = difficulties[CurrentDifficulty].ReactionTime;
		bot.MemorySpan = difficulties[CurrentDifficulty].MemorySpan;
		bot.AimPersistance = difficulties[CurrentDifficulty].AimPersistance;
		bot.MaxTurnSpeed = difficulties[CurrentDifficulty].MaxTurnSpeed;
		bot.AimStiffness = difficulties[CurrentDifficulty].AimStiffness;
		bot.AimDamping = difficulties[CurrentDifficulty].AimDamping;
		bot.AimTolerance = difficulties[CurrentDifficulty].AimTolerance;

		if ( AdjustAim ) {
			difficulties.AdjustWeaponProperties( bot );
		}

		if ( Debug ) {
			print( "Current Difficulty", CurrentDifficulty );
			print( "Difficulty FOV", bot.FieldOfView );
			print( "Difficulty ReactionTime", bot.ReactionTime );
			print( "Difficulty MemorySpan", bot.MemorySpan );
			print( "Difficulty AimPersistance", bot.AimPersistance );
			print( "Difficulty MaxTurnSpeed", bot.MaxTurnSpeed );
			print( "Difficulty AimStiffness", bot.AimStiffness );
			print( "Difficulty AimDamping", bot.AimDamping );
			print( "Difficulty AimTolerance", bot.AimTolerance );
		}
	} else
	{
		print( "Invalid Current Difficulty", CurrentDifficulty );
	}
};

// A helper function that sets aim offsets for weapons
difficulties.AdjustWeaponProperties = function( bot, clear )
{
	Debug_weaps = false;

	AdjustableWeapons =
	{
		WEAPON.THOMPSON,
		WEAPON.MP40,
		WEAPON.LUGER,
		WEAPON.COLT,
		WEAPON.MOUNTABLE_MG42,
		WEAPON.STEN,
		WEAPON.MAUSER,
		WEAPON.SNIPER,
		WEAPON.SNIPERRIFLE,
	};

	foreach( id and weap in AdjustableWeapons )
	{
		w = bot.GetWeapon( weap );
		if ( w ) {
			if ( !clear ) {
				errorX = difficulties[CurrentDifficulty].AimErrorX;
				errorY = difficulties[CurrentDifficulty].AimErrorY;
				offsetX = difficulties[CurrentDifficulty].AimOffsetX;
				offsetY = difficulties[CurrentDifficulty].AimOffsetY;

				if ( weap != WEAPON.MAUSER && weap != WEAPON.SNIPER && weap != WEAPON.SNIPERRIFLE ) {
					offsetZ = difficulties[CurrentDifficulty].AimOffsetZ;
				} else
				{
					offsetZ = difficulties[CurrentDifficulty].SniperOffset;
				}
			} else
			{
				errorX = 0;
				errorY = 0;
				offsetX = 0;
				offsetY = 0;
				offsetZ = 0;
			}

			w.PrimaryFire.MaxAimError = Vector2( errorX, errorY );
			w.PrimaryFire.AimOffset = Vector3( offsetX, offsetY, offsetZ );

			if ( Debug_weaps ) {
				print( w.Name, "weapon properties set" );
				print( "offset:", w.PrimaryFire.AimOffset );
				print( "error:", w.PrimaryFire.MaxAimError );
			}

		}
	}
};

// Register a command that can be used to change the difficulty in-game
// Example usage:
//	bot difficulty 1
Commands["difficulty"] = function( _params )
{
	if ( typeId( _params[0] ) != 0 ) {
		// Check if this difficulty level exists.
		if ( difficulties[_params[0]] ) {
			global CurrentDifficulty = _params[0];

			// set min to 1 since 0 doesn't work ...
			if ( CurrentDifficulty == 0 ) {
				global CurrentDifficulty = 1;
			}

			foreach( gameId and bot in BotTable )
			{
				if ( bot ) {
					difficulties.InitBotDifficultyProperties( bot );
				}
			}

			ConfigSet( "Difficulty","CurrentDifficulty", CurrentDifficulty );
			print( "Difficulty Changed", CurrentDifficulty );
		} else
		{
			print( "Difficulty level not found", _params[0] );
		}
	}

	print( "Difficulty:", CurrentDifficulty );
};

//print( "Initializing Difficulties Complete" );