CFG ?= Debug
SYS ?= Linux
GRF ?= Glx

CFLAGS := -c -D__LINUX__ -DWM5_USE_OPENGL
ARFLAGS := rs
EXT := a

ifeq (Linux,$(findstring Linux,$(SYS)))
CC := /usr/bin/g++
AR := /usr/bin/ar
endif

ifeq (Debug,$(findstring Debug,$(CFG)))
CFLAGS += -g -D_DEBUG
else
CFLAGS += -O2 -DNDEBUG
endif

ifeq (Dynamic,$(findstring Dynamic,$(CFG)))
CFLAGS += -fPIC
AR := $(CC)
ARFLAGS := -shared -fPIC -o
EXT := so
endif

INCPATH := \
    -I ../. \
    -I ../Controllers \
    -I ../CurvesSurfaces \
    -I ../DataTypes \
    -I ../Detail \
    -I ../GlobalEffects \
    -I ../ImageProcessing \
    -I ../LocalEffects \
    -I ../Renderers \
    -I ../Resources \
    -I ../SceneGraph \
    -I ../ShaderFloats \
    -I ../Shaders \
    -I ../Sorting \
    -I ../Terrain \
    -I ../../SDK/Include

INCDIR := ../../SDK/Include
INC := $(wildcard Wm5*.h) $(wildcard Wm5*.inl)
INC := $(notdir $(INC))
SRC := $(wildcard Wm5*.cpp)
SRC := $(notdir $(SRC))
OBJDIR := ../$(CFG)
OBJ := $(SRC:%.cpp=$(OBJDIR)/%.o)
LIB := ../../SDK/Library/$(CFG)/libWm5$(GRF)Graphics.$(EXT)

build : $(OBJ)
	$(AR) $(ARFLAGS) $(LIB) $(OBJDIR)/*.o
	cp -fp $(INC) $(INCDIR)

$(OBJDIR)/%.o : %.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

clean :
	rm -f $(OBJDIR)/*.o
