<html>

<head>
    
  <script type="text/javascript" src="../../../../../../Scripts/jquery.js">
  </script>
    
  <script type="text/javascript" src="../../../../../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../../../../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <script type="text/javascript" src="../../../../../../Scripts/SyntaxHighlighter/scripts/shBrushCpp.js">
  </script>
    
  <script type="text/javascript" src="../../../../../../Scripts/SyntaxHighlighter/scripts/shBrushCSharp.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../../../../../Scripts/SyntaxHighlighter/styles/shCoreDefault.css">
    
  <link type="text/css" rel="stylesheet" href="../../../../../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>Execute</title>

  <link rel="stylesheet" href="../../../../../../Styles/default.css" type="text/css">

    
  <script type="text/javascript" src="../../../../../../Scripts/bootstrap.js">
  </script>
  
</head>

<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="1" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../../../../../_Body.htm" class="Banner"><img src="../../../../../../Images/_Home.gif" align="absmiddle">Home</a>
      </td>
      <td class="Banner" nowrap=""><a href="../../../_Body.htm" class="Banner"><img src="../../../../../../Images/_Unit.gif" align="absmiddle">ClipperLib</a>
      </td>
      <td class="Banner" nowrap=""><a href="../_Body.htm" class="Banner"><img src="../../../../../../Images/_Class.gif" align="absmiddle">Clipper</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../../../../../Images/_Project_Logo.gif" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>Clipper.Execute</h1>


  <p class="Decl"><span class="Comment">Del.&raquo;</span><br> <b>function</b> Execute(clipType: <a href="../../../Types/ClipType.htm">TClipType</a>;<br> &nbsp;&nbsp;<b>out</b> solution: <a href="../../../Types/Polygons.htm">TPolygons</a>;<br> &nbsp;&nbsp;subjFillType: <a href="../../../Types/PolyFillType.htm">TPolyFillType</a> = pftEvenOdd;<br> &nbsp;&nbsp;clipFillType: <a href="../../../Types/PolyFillType.htm">TPolyFillType</a> = pftEvenOdd): boolean; <b>overload</b>;<br><br> <b>function</b> Execute(clipType: <a href="../../../Types/ClipType.htm">TClipType</a>;<br> &nbsp;&nbsp;<b>out</b> solution: <a href="../../PolyTree/_Body.htm">TPolyTree</a>;<br> &nbsp;&nbsp;subjFillType: <a href="../../../Types/PolyFillType.htm">TPolyFillType</a> = pftEvenOdd;<br> &nbsp;&nbsp;clipFillType: <a href="../../../Types/PolyFillType.htm">TPolyFillType</a> = pftEvenOdd): boolean; <b>overload</b>; </p>


  <p class="Decl2"><span class="Comment">C++&nbsp;&raquo;</span><br> <b>bool</b> Execute(<a href="../../../Types/ClipType.htm">ClipType</a> clipType,<br> &nbsp;&nbsp;<a href="../../../Types/Polygons.htm">Polygons</a> &amp;solution,<br> &nbsp;&nbsp;<a href="../../../Types/PolyFillType.htm">PolyFillType</a> subjFillType = pftEvenOdd,<br> &nbsp;&nbsp;<a href="../../../Types/PolyFillType.htm">PolyFillType</a> clipFillType = pftEvenOdd);<br><br> <b>bool</b> Execute(<a href="../../../Types/ClipType.htm">ClipType</a> clipType,<br> &nbsp;&nbsp;<a href="../../PolyTree/_Body.htm">PolyTree</a> &amp;solution,<br> &nbsp;&nbsp;<a href="../../../Types/PolyFillType.htm">PolyFillType</a> subjFillType = pftEvenOdd,<br> &nbsp;&nbsp;<a href="../../../Types/PolyFillType.htm">PolyFillType</a> clipFillType = pftEvenOdd); </p>

  <p class="Decl3"><span class="Comment">C#&nbsp;&nbsp;&raquo;</span><br> <b>public bool</b> Execute(<a href="../../../Types/ClipType.htm">ClipType</a> clipType,<br> &nbsp;&nbsp;<a href="../../../Types/Polygons.htm">Polygons</a> solution,<br> &nbsp;&nbsp;<a href="../../../Types/PolyFillType.htm">PolyFillType</a> subjFillType,<br> &nbsp;&nbsp;<a href="../../../Types/PolyFillType.htm">PolyFillType</a> clipFillType);<br><br> <b>public bool</b> Execute(<a href="../../../Types/ClipType.htm">ClipType</a> clipType,<br> &nbsp;&nbsp;<a href="../../PolyTree/_Body.htm">PolyTree</a> solution,<br> &nbsp;&nbsp;<a href="../../../Types/PolyFillType.htm">PolyFillType</a> subjFillType,<br> &nbsp;&nbsp;<a href="../../../Types/PolyFillType.htm">PolyFillType</a> clipFillType); </p>

<br>

  <p class="Body"> The Execute() method performs the specified clipping task (intersection, union, difference or xor) on the previously assigned subject and clip polygons. This method can be called multiple times without reassigning subject and clip polygons (ie when different clipping operations are required on the same polygon sets). The polygon fill methods can be Even-Odd, Non-Zero, Positive and Negative (default: Even-Odd). Also, subject and clip polygons don't have to use the same fill type.<br><br> This method is overloaded since the <b>solution</b> parameter can be either a <a href="../../../Types/Polygons.htm">Polygons</a> or <a href="../../PolyTree/_Body.htm">PolyTree</a> structure. When the solution parameter is a <a href="../../../Types/Polygons.htm">Polygons</a> structure, the solution will contain a collection of polygons containing both outer and inner polygon contours (where inner contours have an orientation opposite outer contours). On the other hand, the <a href="../../PolyTree/_Body.htm">PolyTree</a> structure explicitly associates inner 'hole' polygons with their container 'outer' polygons.<br><br> The order that polygons are listed in the <b>solution</b> structure is undefined. The solution will never contain overlapping polygons, nor will it contain polygons with self-intersecting edges. Also, the <strong>filling mode</strong> for <b>solution</b> polygons is undefined since it <strong>can be either EvenOdd or NonZero</strong>. (This is because the winding depth of solution polygons will always be in the range of -1 to 1.)<br><br> <b>Solution orientation:</b> The <a href="../../../Routines/Orientation.htm">Orientation</a> of polygons returned in the 'solution' parameter will always be 'true' for outer polygons and 'false' for inner 'hole' polygons (unless the <a href="../Properties/ReverseSolution.htm">ReverseSolution</a> property has been enabled). <br><br> It's important to note that the <b>fill rules apply solely within subject and clip polygons to define their respective regions. These rules aren't applied when merging these polygons into a single solution during the clip operation</b>. If you wish for a fill rule to apply to the merging of subject and clip polygons as well - typically during a UNION operation, then you should UNION all the polygons as subjects without assigning clip polygons.  </p>


  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../../../../../Overview/Example.htm">Example</a>, <a href="../Properties/ReverseSolution.htm">ReverseSolution</a>, <a href="../../PolyTree/_Body.htm">PolyTree</a>, <a href="../../../Routines/Orientation.htm">Orientation</a>, <a href="../../../Types/ClipType.htm">ClipType</a>, <a href="../../../Types/PolyFillType.htm">PolyFillType</a>, <a href="../../../Types/Polygons.htm">Polygons</a></p>
    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2012 Angus Johnson&nbsp; - &nbsp; Clipper version 5.1.0 &nbsp; - &nbsp; Help file built on 19-February-2013 <br><br> </p>
  
</body>

</html>